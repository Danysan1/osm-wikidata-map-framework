openapi: "3.0.3"
info:
  version: "1.6.1"
  title: "OSM-Wikidata Map Framework API"
  description: Programmatically interact with a site based on OSM-Wikidata Map Framework

servers:
  - url: http://localhost
    description: Local instance
  - url: https://etymology.dsantini.it
    description: Open Etymology Map
  - url: https://burial.dsantini.it
    description: Open Burial Map

paths:
  /global-map.php:
    get:
      operationId: get_global_map
      summary: Get count of etymologies worldwide
      responses:
        200:
          description: The GeoJSON response containing the features and etymologies
          content:
            application/geo+json:
              schema:
                $ref: "#/components/schemas/GlobalMapResponse"
        409:
          description: The DB is not enabled in this instance,
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
  /elements.php:
    get:
      operationId: get_elements
      summary: Get centroids of features having an etymology in an area
      parameters:
        - in: query
          name: "minLat"
          required: true
          schema:
            $ref: "#/components/schemas/Latitude"
        - in: query
          name: "minLon"
          required: true
          schema:
            $ref: "#/components/schemas/Longitude"
        - in: query
          name: "maxLat"
          required: true
          schema:
            $ref: "#/components/schemas/Latitude"
        - in: query
          name: "maxLon"
          required: true
          schema:
            $ref: "#/components/schemas/Longitude"
        - in: query
          name: "source"
          required: true
          schema:
            $ref: "#/components/schemas/Source"
        - in: query
          name: "search"
          description: Q-ID of the Wikidata entity to search for
          required: false
          schema:
            type: string
      responses:
        200:
          description: The GeoJSON response containing the features and etymologies
          content:
            application/geo+json:
              schema:
                $ref: "#/components/schemas/ElementResponse"
        409:
          description: The DB is not enabled in this instance,
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
  /etymologyMap.php:
    get:
      operationId: get_etymologies
      summary: Get features and relative etymologies in an area
      parameters:
        - in: query
          name: "minLat"
          required: true
          schema:
            $ref: "#/components/schemas/Latitude"
        - in: query
          name: "minLon"
          required: true
          schema:
            $ref: "#/components/schemas/Longitude"
        - in: query
          name: "maxLat"
          required: true
          schema:
            $ref: "#/components/schemas/Latitude"
        - in: query
          name: "maxLon"
          required: true
          schema:
            $ref: "#/components/schemas/Longitude"
        - in: query
          name: "language"
          required: true
          schema:
            $ref: "#/components/schemas/Language"
        - in: query
          name: "source"
          required: true
          schema:
            $ref: "#/components/schemas/Source"
        - in: query
          name: "search"
          description: Q-ID of the Wikidata entity to search for
          required: false
          schema:
            type: string
        - in: query
          name: "download_colors"
          required: false
          schema:
            type: boolean
      responses:
        200:
          description: The GeoJSON response containing the features and etymologies
          content:
            application/geo+json:
              schema:
                $ref: "#/components/schemas/EtymologyResponse"
        400:
          description: Bad parameters passed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
  /stats.php:
    get:
      operationId: get_stats
      summary: Get statistics about objects in an area
      parameters:
        - in: query
          name: "minLat"
          required: true
          schema:
            $ref: "#/components/schemas/Latitude"
        - in: query
          name: "minLon"
          required: true
          schema:
            $ref: "#/components/schemas/Longitude"
        - in: query
          name: "maxLat"
          required: true
          schema:
            $ref: "#/components/schemas/Latitude"
        - in: query
          name: "maxLon"
          required: true
          schema:
            $ref: "#/components/schemas/Longitude"
        - in: query
          name: "language"
          required: true
          schema:
            $ref: "#/components/schemas/Language"
        - in: query
          name: "to"
          required: true
          schema:
            $ref: "#/components/schemas/StatisticsType"
        - in: query
          name: "source"
          required: true
          schema:
            $ref: "#/components/schemas/Source"
        - in: query
          name: "search"
          description: Q-ID of the Wikidata entity to search for
          required: false
          schema:
            type: string
      responses:
        200:
          description: The GeoJSON response containing the features and etymologies
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatisticsResponse"
        400:
          description: Bad parameters passed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"
  /health.php:
    get:
      operationId: health_check
      summary: Check whether the server is running fine
      responses:
        200:
          description: Everything is fine
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDetails"

components:
  schemas:
    Latitude:
      type: number
      minimum: -90
      maximum: 90
      example: 45.464

    Longitude:
      type: number
      minimum: -180
      maximum: 180
      example: 9.19

    Language:
      type: string
      example: en

    ErrorDetails:
      required:
        - error
      properties:
        error:
          type: string

    StatisticsResponse:
      type: array
      items:
        type: object
        title: EtymologyStat
        required:
          - name
          - count
        properties:
          color:
            type: string
          count:
            type: integer
          descr:
            type: string
          id:
            type: string
          name:
            type: string

    GeoJSONGeometry:
      type: object
      description: GeoJSON geometry
      required:
        - type
      externalDocs:
        url: http://geojson.org/geojson-spec.html#geometry-objects
      properties:
        type:
          type: string
          enum:
            - Point
            - LineString
            - Polygon
            - MultiPoint
            - MultiLineString
            - MultiPolygon
          description: the geometry type

    GeoJSONPoint3D:
      type: array
      description: Point in 3D space
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id2
      minItems: 2
      maxItems: 3
      items:
        type: number

    GeoJSONPoint:
      type: object
      description: GeoJSON geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id2
      allOf:
        - $ref: "#/components/schemas/GeoJSONGeometry"
        - properties:
            coordinates:
              $ref: "#/components/schemas/GeoJSONPoint3D"

    GeoJSONLineString:
      type: object
      description: GeoJSON geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id3
      allOf:
        - $ref: "#/components/schemas/GeoJSONGeometry"
        - properties:
            coordinates:
              type: array
              items:
                $ref: "#/components/schemas/GeoJSONPoint3D"

    GeoJSONPolygon:
      type: object
      description: GeoJSON geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id4
      allOf:
        - $ref: "#/components/schemas/GeoJSONGeometry"
        - properties:
            coordinates:
              type: array
              items:
                type: array
                items:
                  $ref: "#/components/schemas/GeoJSONPoint3D"

    GeoJSONMultiPoint:
      type: object
      description: GeoJSON geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id5
      allOf:
        - $ref: "#/components/schemas/GeoJSONGeometry"
        - properties:
            coordinates:
              type: array
              items:
                $ref: "#/components/schemas/GeoJSONPoint3D"

    GeoJSONMultiLineString:
      type: object
      description: GeoJSON geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id6
      allOf:
        - $ref: "#/components/schemas/GeoJSONGeometry"
        - properties:
            coordinates:
              type: array
              items:
                type: array
                items:
                  $ref: "#/components/schemas/GeoJSONPoint3D"

    GeoJSONMultiPolygon:
      type: object
      description: GeoJSON geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id6
      allOf:
        - $ref: "#/components/schemas/GeoJSONGeometry"
        - properties:
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: array
                  items:
                    $ref: "#/components/schemas/GeoJSONPoint3D"

    GeoJSONGeometryCollection:
      type: object
      description: GeoJSON geometry collection
      required:
        - type
        - geometries
      externalDocs:
        url: http://geojson.org/geojson-spec.html#geometrycollection
      properties:
        type:
          type: string
          enum:
            - GeometryCollection
        geometries:
          type: array
          items:
            $ref: "#/components/schemas/GeoJSONGeometry"

    GeoJSONFeature:
      type: object
      description: GeoJSON Feature
      required:
        - type
        - id
        - geometry
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.2
      properties:
        type:
          type: string
          enum:
            - Feature
        id:
          type: integer
        geometry:
          $ref: "#/components/schemas/GeoJSONGeometryCollection"
        # properties:
        #   type: object
        bbox:
          $ref: "#/components/schemas/GeoJSONBoundingBox"

    GeoJSONBoundingBox:
      type: array
      description: Bounding box of the features
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-5
      minItems: 4
      maxItems: 6
      items:
        type: number

    GeoJSONFeatureCollection:
      type: object
      description: GeoJSON Feature collection
      required:
        - type
        - features
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.3
      properties:
        type:
          type: string
          enum:
            - FeatureCollection
        features:
          type: array
          items:
            $ref: "#/components/schemas/GeoJSONFeature"
        bbox:
          $ref: "#/components/schemas/GeoJSONBoundingBox"

    GlobalMapFeature:
      allOf:
        - $ref: "#/components/schemas/GeoJSONFeature"
        - type: object
          properties:
            geometry:
              $ref: "#/components/schemas/GeoJSONPoint"
            properties:
              type: object
              required:
                - num
              properties:
                num:
                  type: integer

    GlobalMapResponse:
      allOf:
        - $ref: "#/components/schemas/GeoJSONFeatureCollection"
        - type: object
          properties:
            features:
              type: array
              items:
                $ref: "#/components/schemas/GlobalMapFeature"

    ElementFeature:
      allOf:
        - $ref: "#/components/schemas/GeoJSONFeature"
        - type: object
          title: ElementFeatureDetails
          properties:
            geometry:
              $ref: "#/components/schemas/GeoJSONPoint"
            id:
              type: string

    DetailedFeatureCollection:
      allOf:
        - $ref: "#/components/schemas/GeoJSONFeatureCollection"
        - type: object
          title: FeatureCollectionDetails
          properties:
            metadata:
              type: object
              title: FeatureCollectionMetadata
              properties:
                etymology_count:
                  type: integer
                  description: Total number of etymologies linked to the features
                wikidata_query:
                  type: string
                  description: Wikidata SPARQL query used to fetch the features
                  example: "SELECT ... WHERE { ... }"
                overpass_query:
                  type: string
                  description: OverpassQL query used to fetch the features
                  example: "[out:json]; ...; out;"

    ElementResponse:
      allOf:
        - $ref: "#/components/schemas/DetailedFeatureCollection"
        - type: object
          title: ElementResponseFeatures
          properties:
            features:
              type: array
              items:
                $ref: "#/components/schemas/ElementFeature"

    Etymology:
      type: object
      required:
        - wikidata
      properties:
        wikidata:
          type: string
          description: Q-ID of the referenced Wikidata entity
          example: Q42
        from_osm:
          type: boolean
        from_osm_type:
          type: string
          example: node
        from_osm_id:
          type: integer
        from_wikidata:
          type: boolean
        from_wikidata_entity:
          type: string
          description: Q-ID of the source Wikidata entity
          example: Q1
        from_wikidata_prop:
          type: string
          description: P-ID of the source Wikidata property
          example: P123
        instanceID:
          type: string
          description: Q-ID of the Wikidata element representing the class this element is instance of
          example: Q5
        genderID:
          type: string
          description: Q-ID of the Wikidata element representing the gender of this element
          example: Q6581097
        countryID:
          type: string
          description: Q-ID of the Wikidata element representing the country of this element
          example: Q38
        start_date:
          type: string
          description: Start date of this item
          example: "2020-01-01"
        end_date:
          type: string
          description: End date of this item
          example: "2020-01-01"
        birth_date:
          type: string
          description: Birth date of this item
          example: "2020-01-01"
        death_date:
          type: string
          description: Death date of this item
          example: "2020-01-01"
        event_date:
          type: string
          description: Point in time where this event happened
          example: "2020-01-01"

    EtymologyFeature:
      allOf:
        - $ref: "#/components/schemas/GeoJSONFeature"
        - type: object
          title: EtymologyFeatureDetails
          properties:
            geometry:
              $ref: "#/components/schemas/GeoJSONGeometry"
            id:
              type: string
            properties:
              type: object
              required:
                - name
                - etymologies
              properties:
                country_color:
                  type: string
                  example: "#33ff66"
                alt_name:
                  type: string
                commons:
                  type: string
                  example: "Category:Colosseum"
                el_id:
                  type: integer
                end_century_color:
                  type: string
                  example: "#33ff66"
                etymologies:
                  type: array
                  items:
                    $ref: "#/components/schemas/Etymology"
                from_osm:
                  type: boolean
                from_wikidata:
                  type: boolean
                gender_color:
                  type: string
                  example: "#33ff66"
                name:
                  type: string
                official_name:
                  type: string
                osm_type:
                  type: string
                osm_id:
                  type: integer
                picture:
                  type: string
                  example: "File:Colosseo 2020.jpg"
                source_color:
                  type: string
                  example: "#33ff66"
                start_century_color:
                  type: string
                  example: "#33ff66"
                text_etymology:
                  type: string
                text_etymology_descr:
                  type: string
                type_color:
                  type: string
                  example: "#33ff66"
                wikidata:
                  type: string
                  description: Q-ID of the Wikidata entity for this feature
                  example: "Q1"
                wikipedia:
                  type: string
                  example: "en:Colosseum"

    EtymologyResponse:
      allOf:
        - $ref: "#/components/schemas/DetailedFeatureCollection"
        - type: object
          title: EtymologyResponseFeatures
          properties:
            features:
              type: array
              items:
                $ref: "#/components/schemas/EtymologyFeature"

    Source:
      type: string
      enum:
        - db_all
        - db_osm_name_etymology
        - db_osm_subject
        - db_osm_buried
        - db_osm_wikidata_direct
        - db_osm_wikidata_reverse
        - db_propagated
        - overpass_all
        - overpass_osm_name_etymology
        - overpass_osm_subject
        - overpass_osm_buried
        - wd_direct
        - wd_indirect
        - wd_qualifier
        - wd_reverse

    StatisticsType:
      type: string
      enum:
        - sourceStats
        - genderStats
        - typeStats
        - countryStats
        - startCenturyStats
        - endCenturyStats
