openapi: "3.0.0"
info:
  version: "1.3.0"
  title: "OSM-Wikidata Map Framework API"
  description: Programmatically interact with a site based on OSM-Wikidata Map Framework

servers:
  - url: https://etymology.dsantini.it
    description: Open Etymology Map
  - url: https://burial.dsantini.it
    description: Open Burial Map
  - url: http://oem-web-dev
    description: Local development instance

paths:
  /global-map.php:
    get:
      summary: Get count of etymologies worldwide
      responses:
        200:
          description: The GeoJSON response containing the features and etymologies
          content:
            application/geo+json:
              schema:
                $ref: "#/components/schemas/GlobalMapResponse"
        409:
          description: The DB is not enabled in this instance,
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /elements.php:
    get:
      summary: Get centroids of features having an etymology in an area
      parameters:
        - in: query
          name: "minLat"
          required: true
          schema:
            type: number
        - in: query
          name: "minLon"
          required: true
          schema:
            type: number
        - in: query
          name: "maxLat"
          required: true
          schema:
            type: number
        - in: query
          name: "maxLon"
          required: true
          schema:
            type: number
        - in: query
          name: "source"
          required: false
          schema:
            $ref: "#/components/schemas/Source"
        - in: query
          name: "search"
          description: Q-ID of the Wikidata entity to search for
          required: false
          schema:
            type: string
      responses:
        200:
          description: The GeoJSON response containing the features and etymologies
          content:
            application/geo+json:
              schema:
                $ref: "#/components/schemas/ElementResponse"
        409:
          description: The DB is not enabled in this instance,
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /etymologyMap.php:
    get:
      summary: Get features and relative etymologies in an area
      parameters:
        - in: query
          name: "minLat"
          required: true
          schema:
            type: number
        - in: query
          name: "minLon"
          required: true
          schema:
            type: number
        - in: query
          name: "maxLat"
          required: true
          schema:
            type: number
        - in: query
          name: "maxLon"
          required: true
          schema:
            type: number
        - in: query
          name: "language"
          required: true
          schema:
            type: string
        - in: query
          name: "source"
          required: false
          schema:
            $ref: "#/components/schemas/Source"
        - in: query
          name: "search"
          description: Q-ID of the Wikidata entity to search for
          required: false
          schema:
            type: string
        - in: query
          name: "download_colors"
          required: false
          schema:
            type: boolean
      responses:
        200:
          description: The GeoJSON response containing the features and etymologies
          content:
            application/geo+json:
              schema:
                $ref: "#/components/schemas/EtymologyResponse"
        400:
          description: Bad parameters passed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /stats.php:
    get:
      summary: Get statistics about objects in an area
      parameters:
        - in: query
          name: "minLat"
          required: true
          schema:
            type: number
        - in: query
          name: "minLon"
          required: true
          schema:
            type: number
        - in: query
          name: "maxLat"
          required: true
          schema:
            type: number
        - in: query
          name: "maxLon"
          required: true
          schema:
            type: number
        - in: query
          name: "language"
          required: true
          schema:
            type: string
        - in: query
          name: "source"
          required: false
          schema:
            $ref: "#/components/schemas/Source"
        - in: query
          name: "search"
          description: Q-ID of the Wikidata entity to search for
          required: false
          schema:
            type: string
      responses:
        200:
          description: The GeoJSON response containing the features and etymologies
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatisticsResponse"
        400:
          description: Bad parameters passed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /health.php:
    get:
      summary: Check whether the server is running fine
      responses:
        200:
          description: Everything is fine
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Error:
      required:
        - error
      properties:
        error:
          type: string

    StatisticsResponse:
      type: array
      items:
        required:
          - name
          - count
        properties:
          color:
            type: string
          count:
            type: integer
          descr:
            type: string
          id:
            type: string
          name:
            type: string

    Geometry:
      type: object
      description: GeoJSON geometry
      required:
        - type
      externalDocs:
        url: http://geojson.org/geojson-spec.html#geometry-objects
      properties:
        type:
          type: string
          enum:
            - Point
            - LineString
            - Polygon
            - MultiPoint
            - MultiLineString
            - MultiPolygon
          description: the geometry type

    Point3D:
      type: array
      description: Point in 3D space
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id2
      minItems: 2
      maxItems: 3
      items:
        type: number

    Point:
      type: object
      description: GeoJSON geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id2
      allOf:
        - $ref: "#/components/schemas/Geometry"
        - properties:
            coordinates:
              $ref: "#/components/schemas/Point3D"

    LineString:
      type: object
      description: GeoJSON geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id3
      allOf:
        - $ref: "#/components/schemas/Geometry"
        - properties:
            coordinates:
              type: array
              items:
                $ref: "#/components/schemas/Point3D"

    Polygon:
      type: object
      description: GeoJSON geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id4
      allOf:
        - $ref: "#/components/schemas/Geometry"
        - properties:
            coordinates:
              type: array
              items:
                type: array
                items:
                  $ref: "#/components/schemas/Point3D"

    MultiPoint:
      type: object
      description: GeoJSON geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id5
      allOf:
        - $ref: "#/components/schemas/Geometry"
        - properties:
            coordinates:
              type: array
              items:
                $ref: "#/components/schemas/Point3D"

    MultiLineString:
      type: object
      description: GeoJSON geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id6
      allOf:
        - $ref: "#/components/schemas/Geometry"
        - properties:
            coordinates:
              type: array
              items:
                type: array
                items:
                  $ref: "#/components/schemas/Point3D"

    MultiPolygon:
      type: object
      description: GeoJSON geometry
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id6
      allOf:
        - $ref: "#/components/schemas/Geometry"
        - properties:
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: array
                  items:
                    $ref: "#/components/schemas/Point3D"

    GeometryCollection:
      type: object
      description: GeoJSON geometry collection
      required:
        - type
        - geometries
      externalDocs:
        url: http://geojson.org/geojson-spec.html#geometrycollection
      properties:
        type:
          type: string
          enum:
            - GeometryCollection
        geometries:
          type: array
          items:
            $ref: "#/components/schemas/Geometry"

    Feature:
      type: object
      description: GeoJSON Feature
      required:
        - type
        - id
        - geometry
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.2
      properties:
        type:
          type: string
          enum:
            - Feature
        id:
          type: integer
        # geometry:
        #   $ref: "#/components/schemas/GeometryCollection"
        # properties:
        #   type: object

    FeatureCollection:
      type: object
      description: GeoJSON Feature collection
      required:
        - type
        - features
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.3
      properties:
        type:
          type: string
          enum:
            - FeatureCollection
        # features:
        #   type: array
        #   items:
        #     $ref: "#/components/schemas/Feature"

    GlobalMapFeature:
      allOf:
        - $ref: "#/components/schemas/Feature"
        - type: object
          properties:
            geometry:
              $ref: "#/components/schemas/Point"
            properties:
              type: object
              required:
                - num
              properties:
                num:
                  type: integer

    GlobalMapResponse:
      allOf:
        - $ref: "#/components/schemas/FeatureCollection"
        - type: object
          properties:
            features:
              type: array
              items:
                $ref: "#/components/schemas/GlobalMapFeature"

    ElementFeature:
      allOf:
        - $ref: "#/components/schemas/Feature"
        - type: object
          properties:
            geometry:
              $ref: "#/components/schemas/Point"
            id:
              type: string

    ElementResponse:
      allOf:
        - $ref: "#/components/schemas/FeatureCollection"
        - type: object
          properties:
            etymology_count:
              type: integer
            features:
              type: array
              items:
                $ref: "#/components/schemas/ElementFeature"

    Etymology:
      type: object
      required:
        - wikidata
      properties:
        wikidata:
          type: string
          description: Q-ID of the referenced Wikidata entity
        from_osm:
          type: boolean
        from_osm_type:
          type: string
        from_osm_id:
          type: integer
        from_wikidata:
          type: boolean
        from_wikidata_entity:
          type: string
          description: Q-ID of the source Wikidata entity
        from_wikidata_prop:
          type: string
          description: P-ID of the source Wikidata property

    EtymologyFeature:
      allOf:
        - $ref: "#/components/schemas/Feature"
        - type: object
          properties:
            geometry:
              $ref: "#/components/schemas/Geometry"
            id:
              type: string
            properties:
              type: object
              required:
                - name
                - etymologies
              properties:
                name:
                  type: string
                etymologies:
                  type: array
                  items:
                    $ref: "#/components/schemas/Etymology"
                wikidata:
                  type: string

    EtymologyResponse:
      allOf:
        - $ref: "#/components/schemas/FeatureCollection"
        - type: object
          properties:
            etymology_count:
              type: integer
            features:
              type: array
              items:
                $ref: "#/components/schemas/EtymologyFeature"

    Source:
      oneOf:
        - type: string
        - type: string
          enum:
            - db_all
            - db_osm_name_etymology
            - db_osm_subject
            - db_osm_buried
            - db_osm_wikidata
            - db_propagated
            - overpass_all
            - overpass_osm_name_etymology
            - overpass_osm_subject
            - overpass_osm_buried
            - wd_direct
            - wd_indirect
            - wd_qualifier
            - wd_reverse
