{
  "openapi": "3.1.0",
  "info": {
    "title": "Wikibase REST API",
    "version": "0.4",
    "description": "OpenAPI definition of Wikibase REST API",
    "contact": {
      "name": "Wikimedia Deutschland - Wikibase Product Platform Team",
      "url": "https://phabricator.wikimedia.org/project/board/6692/"
    },
    "license": {
      "name": "GNU General Public License v2.0 or later",
      "url": "https://spdx.org/licenses/GPL-2.0-or-later.html"
    }
  },
  "paths": {
    "/openapi.json": {
      "get": {
        "operationId": "getOpenApiDoc",
        "tags": ["OpenAPI document"],
        "summary": "Retrieve the OpenAPI document",
        "responses": {
          "200": {
            "description": "OpenAPI document",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "openapi": "...",
                  "info": {
                    "title": "Wikibase REST API",
                    "version": "...",
                    "description": "OpenAPI definition of Wikibase REST API"
                  },
                  "paths": "..."
                }
              }
            }
          }
        }
      }
    },
    "/property-data-types": {
      "get": {
        "operationId": "getPropertyDataTypes",
        "tags": ["Property data types"],
        "summary": "Retrieve the map of property data types to value types",
        "responses": {
          "200": {
            "description": "The map of property data types to value types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "example": {
                  "data-type": "value-type"
                }
              }
            }
          }
        }
      }
    },
    "/entities/items": {
      "post": {
        "operationId": "addItem",
        "tags": ["items"],
        "summary": "Create a Wikibase Item",
        "parameters": [
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Item"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/Item"
          },
          "400": {
            "$ref": "#/components/responses/InvalidNewItemInput"
          },
          "409": {
            "$ref": "#/components/responses/SitelinkConflict"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/items/{item_id}": {
      "get": {
        "operationId": "getItem",
        "tags": ["items"],
        "summary": "Retrieve a single Wikibase Item by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/ItemFields"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Item"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "308": {
            "$ref": "#/components/responses/Moved"
          },
          "400": {
            "$ref": "#/components/responses/InvalidGetItemInput"
          },
          "404": {
            "$ref": "#/components/responses/ItemNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "patch": {
        "operationId": "patchItem",
        "tags": ["items"],
        "summary": "Change a single Wikibase Item by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ItemPatch"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Item"
          },
          "400": {
            "$ref": "#/components/responses/InvalidItemPatch"
          },
          "404": {
            "$ref": "#/components/responses/ItemNotFound"
          },
          "409": {
            "$ref": "#/components/responses/CannotApplyItemPatch"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "422": {
            "$ref": "#/components/responses/InvalidPatchedItem"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/items/{item_id}/sitelinks": {
      "get": {
        "operationId": "getSitelinks",
        "tags": ["sitelinks"],
        "summary": "Retrieve an Item's sitelinks",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Sitelinks"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "308": {
            "$ref": "#/components/responses/Moved"
          },
          "400": {
            "$ref": "#/components/responses/InvalidItemIdInput"
          },
          "404": {
            "$ref": "#/components/responses/ItemNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "patch": {
        "operationId": "patchSitelinks",
        "tags": ["sitelinks"],
        "summary": "Change an Item's sitelinks",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/SitelinksPatch"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Sitelinks"
          },
          "400": {
            "$ref": "#/components/responses/InvalidItemPatch"
          },
          "404": {
            "$ref": "#/components/responses/ItemNotFound"
          },
          "409": {
            "$ref": "#/components/responses/CannotApplyItemPatch"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "422": {
            "$ref": "#/components/responses/InvalidPatchedItemSitelinks"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/items/{item_id}/sitelinks/{site_id}": {
      "get": {
        "operationId": "getSitelink",
        "tags": ["sitelinks"],
        "summary": "Retrieve an Item's sitelink",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/SiteId"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Sitelink"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "308": {
            "$ref": "#/components/responses/Moved"
          },
          "400": {
            "$ref": "#/components/responses/InvalidGetSitelinkInput"
          },
          "404": {
            "$ref": "#/components/responses/SitelinkNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "put": {
        "operationId": "setSitelink",
        "tags": ["sitelinks"],
        "summary": "Add / Replace an item's sitelink",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/SiteId"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Sitelink"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Sitelink",
            "description": "The updated Sitelink"
          },
          "201": {
            "$ref": "#/components/responses/Sitelink",
            "description": "The newly added Sitelink"
          },
          "400": {
            "$ref": "#/components/responses/InvalidSetSitelinkInput"
          },
          "404": {
            "$ref": "#/components/responses/ItemNotFound"
          },
          "409": {
            "$ref": "#/components/responses/ItemRedirectedOrSitelinkConflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete": {
        "operationId": "deleteSitelink",
        "tags": ["sitelinks"],
        "summary": "Delete an Item's sitelink",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/SiteId"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Edit"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SitelinkDeleted"
          },
          "400": {
            "$ref": "#/components/responses/InvalidRemoveSitelinkInput"
          },
          "404": {
            "$ref": "#/components/responses/SitelinkNotFound"
          },
          "409": {
            "$ref": "#/components/responses/ItemRedirected"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/properties/{property_id}": {
      "get": {
        "operationId": "getProperty",
        "tags": ["properties"],
        "summary": "Retrieve a single Wikibase Property by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/PropertyId"
          },
          {
            "$ref": "#/components/parameters/PropertyFields"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Property"
          },
          "400": {
            "$ref": "#/components/responses/InvalidPropertyInput"
          },
          "404": {
            "$ref": "#/components/responses/PropertyNotFound"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "patch": {
        "operationId": "patchProperty",
        "tags": ["properties"],
        "summary": "Change a single Wikibase Property by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/PropertyId"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PropertyPatch"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Property"
          },
          "400": {
            "$ref": "#/components/responses/InvalidPropertyPatch"
          },
          "404": {
            "$ref": "#/components/responses/PropertyNotFound"
          },
          "409": {
            "$ref": "#/components/responses/CannotApplyPropertyPatch"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "422": {
            "$ref": "#/components/responses/InvalidPatchedProperty"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/items/{item_id}/descriptions": {
      "get": {
        "operationId": "getItemDescriptions",
        "tags": ["descriptions"],
        "summary": "Retrieve an Item's descriptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemDescriptions"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "308": {
            "$ref": "#/components/responses/Moved"
          },
          "400": {
            "$ref": "#/components/responses/InvalidItemIdInput"
          },
          "404": {
            "$ref": "#/components/responses/ItemNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "patch": {
        "operationId": "patchItemDescriptions",
        "tags": ["descriptions"],
        "summary": "Change an Item's descriptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DescriptionsPatch",
          "description": "Payload containing a JSON Patch document to be applied to an Item's descriptions and, optionally, edit metadata"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemDescriptions"
          },
          "400": {
            "$ref": "#/components/responses/InvalidItemPatch"
          },
          "404": {
            "$ref": "#/components/responses/ItemNotFound"
          },
          "409": {
            "$ref": "#/components/responses/CannotApplyItemPatch"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "422": {
            "$ref": "#/components/responses/InvalidPatchedItemDescriptions"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/properties/{property_id}/descriptions": {
      "get": {
        "operationId": "getPropertyDescriptions",
        "tags": ["descriptions"],
        "summary": "Retrieve a Property's descriptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/PropertyId"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PropertyDescriptions"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/InvalidPropertyIdInput"
          },
          "404": {
            "$ref": "#/components/responses/PropertyNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "patch": {
        "operationId": "patchPropertyDescriptions",
        "tags": ["descriptions"],
        "summary": "Change a Property's descriptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/PropertyId"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DescriptionsPatch",
          "description": "Payload containing a JSON Patch document to be applied to a Property's descriptions and, optionally, edit metadata"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PropertyDescriptions"
          },
          "400": {
            "$ref": "#/components/responses/InvalidPropertyTermPatch"
          },
          "404": {
            "$ref": "#/components/responses/PropertyNotFound"
          },
          "409": {
            "$ref": "#/components/responses/CannotApplyPropertyPatch"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "422": {
            "$ref": "#/components/responses/InvalidPatchedPropertyDescriptions"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/items/{item_id}/descriptions/{language_code}": {
      "get": {
        "operationId": "getItemDescription",
        "tags": ["descriptions"],
        "summary": "Retrieve an Item's description in a specific language",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/LanguageCode"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Description"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "308": {
            "$ref": "#/components/responses/Moved"
          },
          "400": {
            "$ref": "#/components/responses/InvalidItemTermByLanguageInput"
          },
          "404": {
            "$ref": "#/components/responses/ItemDescriptionNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "put": {
        "operationId": "replaceItemDescription",
        "tags": ["descriptions"],
        "summary": "Add / Replace an Item's description in a specific language",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/LanguageCode"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Description"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Description",
            "description": "The updated Description in a specific language"
          },
          "201": {
            "$ref": "#/components/responses/Description",
            "description": "The newly added Description in a specific language"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/InvalidSetItemDescriptionInput"
          },
          "404": {
            "$ref": "#/components/responses/ItemNotFound"
          },
          "409": {
            "$ref": "#/components/responses/ItemRedirected"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete": {
        "operationId": "deleteItemDescription",
        "tags": ["descriptions"],
        "summary": "Delete an Item's description in a specific language",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/LanguageCode"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Edit"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DescriptionDeleted"
          },
          "400": {
            "$ref": "#/components/responses/InvalidRemoveItemDescriptionInput"
          },
          "404": {
            "$ref": "#/components/responses/ItemDescriptionNotFound"
          },
          "409": {
            "$ref": "#/components/responses/ItemRedirected"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/properties/{property_id}/descriptions/{language_code}": {
      "get": {
        "operationId": "getPropertyDescription",
        "tags": ["descriptions"],
        "summary": "Retrieve a Property's description in a specific language",
        "parameters": [
          {
            "$ref": "#/components/parameters/PropertyId"
          },
          {
            "$ref": "#/components/parameters/LanguageCode"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Description"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/InvalidPropertyTermByLanguageInput"
          },
          "404": {
            "$ref": "#/components/responses/PropertyDescriptionNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "put": {
        "operationId": "replacePropertyDescription",
        "tags": ["descriptions"],
        "summary": "Add / Replace a Property's description in a specific language",
        "parameters": [
          {
            "$ref": "#/components/parameters/PropertyId"
          },
          {
            "$ref": "#/components/parameters/LanguageCode"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Description"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Description",
            "description": "The updated Description in a specific language"
          },
          "201": {
            "$ref": "#/components/responses/Description",
            "description": "The newly added Description in a specific language"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/InvalidSetPropertyDescriptionInput"
          },
          "404": {
            "$ref": "#/components/responses/PropertyNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete": {
        "operationId": "deletePropertyDescription",
        "tags": ["descriptions"],
        "summary": "Delete a Property's description in a specific language",
        "parameters": [
          {
            "$ref": "#/components/parameters/PropertyId"
          },
          {
            "$ref": "#/components/parameters/LanguageCode"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Edit"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/DescriptionDeleted"
          },
          "400": {
            "$ref": "#/components/responses/InvalidRemovePropertyDescriptionInput"
          },
          "404": {
            "$ref": "#/components/responses/PropertyDescriptionNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/items/{item_id}/statements": {
      "get": {
        "operationId": "getItemStatements",
        "tags": ["statements"],
        "summary": "Retrieve Statements from an Item",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/PropertyFilter"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemStatements"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "308": {
            "$ref": "#/components/responses/Moved"
          },
          "400": {
            "$ref": "#/components/responses/InvalidRetrieveItemStatementsInput"
          },
          "404": {
            "$ref": "#/components/responses/ItemNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "post": {
        "operationId": "addItemStatement",
        "tags": ["statements"],
        "summary": "Add a new Statement to an Item",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Statement"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/ItemStatementCreated"
          },
          "400": {
            "$ref": "#/components/responses/InvalidNewItemStatementInput"
          },
          "404": {
            "$ref": "#/components/responses/ItemNotFound"
          },
          "409": {
            "$ref": "#/components/responses/ItemRedirected"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/items/{item_id}/statements/{statement_id}": {
      "get": {
        "operationId": "getItemStatement",
        "tags": ["statements"],
        "summary": "Retrieve a single Statement from an Item",
        "description": "This endpoint is also accessible through `/statements/{statement_id}`",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/ItemStatementId"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemStatement"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/InvalidRetrieveItemStatementInput"
          },
          "404": {
            "$ref": "#/components/responses/ItemStatementNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "put": {
        "operationId": "replaceItemStatement",
        "tags": ["statements"],
        "summary": "Replace a single Statement of an Item",
        "description": "This endpoint is also accessible through `/statements/{statement_id}`",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/ItemStatementId"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Statement"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemStatement"
          },
          "400": {
            "$ref": "#/components/responses/InvalidReplaceItemStatementInput"
          },
          "404": {
            "$ref": "#/components/responses/ItemStatementNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "patch": {
        "operationId": "patchItemStatement",
        "tags": ["statements"],
        "summary": "Change elements of a single Statement of an Item",
        "description": "This endpoint is also accessible through `/statements/{statement_id}`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/ItemStatementId"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/StatementPatch"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemStatement"
          },
          "400": {
            "$ref": "#/components/responses/InvalidItemStatementPatch"
          },
          "404": {
            "$ref": "#/components/responses/ItemStatementNotFound"
          },
          "409": {
            "$ref": "#/components/responses/CannotApplyStatementPatch"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "422": {
            "$ref": "#/components/responses/InvalidPatchedStatement"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete": {
        "operationId": "deleteItemStatement",
        "tags": ["statements"],
        "summary": "Delete a single Statement from an Item",
        "description": "This endpoint is also accessible through `/statements/{statement_id}`",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/ItemStatementId"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Edit"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/StatementDeleted"
          },
          "400": {
            "$ref": "#/components/responses/InvalidRemoveItemStatementInput"
          },
          "404": {
            "$ref": "#/components/responses/ItemStatementNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/items/{item_id}/labels": {
      "get": {
        "operationId": "getItemLabels",
        "tags": ["labels"],
        "summary": "Retrieve an Item's labels",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemLabels"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "308": {
            "$ref": "#/components/responses/Moved"
          },
          "400": {
            "$ref": "#/components/responses/InvalidItemIdInput"
          },
          "404": {
            "$ref": "#/components/responses/ItemNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "patch": {
        "operationId": "patchItemLabels",
        "tags": ["labels"],
        "summary": "Change an Item's Labels",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/LabelsPatch"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemLabels"
          },
          "400": {
            "$ref": "#/components/responses/InvalidItemPatch"
          },
          "404": {
            "$ref": "#/components/responses/ItemNotFound"
          },
          "409": {
            "$ref": "#/components/responses/CannotApplyItemPatch"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "422": {
            "$ref": "#/components/responses/InvalidPatchedItemLabels"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/properties/{property_id}/labels": {
      "get": {
        "operationId": "getPropertyLabels",
        "tags": ["labels"],
        "summary": "Retrieve a Property's labels",
        "parameters": [
          {
            "$ref": "#/components/parameters/PropertyId"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PropertyLabels"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/InvalidPropertyIdInput"
          },
          "404": {
            "$ref": "#/components/responses/PropertyNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "patch": {
        "operationId": "patchPropertyLabels",
        "tags": ["labels"],
        "summary": "Change a Property's Labels",
        "parameters": [
          {
            "$ref": "#/components/parameters/PropertyId"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/LabelsPatch"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PropertyLabels"
          },
          "400": {
            "$ref": "#/components/responses/InvalidPropertyTermPatch"
          },
          "404": {
            "$ref": "#/components/responses/PropertyNotFound"
          },
          "409": {
            "$ref": "#/components/responses/CannotApplyPropertyPatch"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "422": {
            "$ref": "#/components/responses/InvalidPatchedPropertyLabels"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/items/{item_id}/labels/{language_code}": {
      "get": {
        "operationId": "getItemLabel",
        "tags": ["labels"],
        "summary": "Retrieve an Item's label in a specific language",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/LanguageCode"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Label"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "308": {
            "$ref": "#/components/responses/Moved"
          },
          "400": {
            "$ref": "#/components/responses/InvalidItemTermByLanguageInput"
          },
          "404": {
            "$ref": "#/components/responses/ItemLabelNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "put": {
        "operationId": "replaceItemLabel",
        "tags": ["labels"],
        "summary": "Add / Replace an Item's label in a specific language",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/LanguageCode"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Label"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Label",
            "description": "The updated Label in a specific language"
          },
          "201": {
            "$ref": "#/components/responses/Label",
            "description": "The newly added Label in a specific language"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/InvalidSetItemLabelInput"
          },
          "404": {
            "$ref": "#/components/responses/ItemNotFound"
          },
          "409": {
            "$ref": "#/components/responses/ItemRedirected"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete": {
        "operationId": "deleteItemLabel",
        "tags": ["labels"],
        "summary": "Delete an Item's label in a specific language",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/LanguageCode"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Edit"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/LabelDeleted"
          },
          "400": {
            "$ref": "#/components/responses/InvalidRemoveItemLabelInput"
          },
          "404": {
            "$ref": "#/components/responses/ItemLabelNotFound"
          },
          "409": {
            "$ref": "#/components/responses/ItemRedirected"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/properties/{property_id}/labels/{language_code}": {
      "get": {
        "operationId": "getPropertyLabel",
        "tags": ["labels"],
        "summary": "Retrieve a Property's label in a specific language",
        "parameters": [
          {
            "$ref": "#/components/parameters/PropertyId"
          },
          {
            "$ref": "#/components/parameters/LanguageCode"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Label"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/InvalidPropertyTermByLanguageInput"
          },
          "404": {
            "$ref": "#/components/responses/PropertyLabelNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "put": {
        "operationId": "replacePropertyLabel",
        "tags": ["labels"],
        "summary": "Add / Replace a Property's label in a specific language",
        "parameters": [
          {
            "$ref": "#/components/parameters/PropertyId"
          },
          {
            "$ref": "#/components/parameters/LanguageCode"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Label"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Label",
            "description": "The updated Label in a specific language"
          },
          "201": {
            "$ref": "#/components/responses/Label",
            "description": "The newly added Label in a specific language"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/InvalidSetPropertyLabelInput"
          },
          "404": {
            "$ref": "#/components/responses/PropertyNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete": {
        "operationId": "deletePropertyLabel",
        "tags": ["labels"],
        "summary": "Delete a Property's label in a specific language",
        "parameters": [
          {
            "$ref": "#/components/parameters/PropertyId"
          },
          {
            "$ref": "#/components/parameters/LanguageCode"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Edit"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/LabelDeleted"
          },
          "400": {
            "$ref": "#/components/responses/InvalidRemovePropertyLabelInput"
          },
          "404": {
            "$ref": "#/components/responses/PropertyLabelNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/items/{item_id}/aliases": {
      "get": {
        "operationId": "getItemAliases",
        "tags": ["aliases"],
        "summary": "Retrieve an Item's aliases",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemAliases"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "308": {
            "$ref": "#/components/responses/Moved"
          },
          "400": {
            "$ref": "#/components/responses/InvalidItemIdInput"
          },
          "404": {
            "$ref": "#/components/responses/ItemNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "patch": {
        "operationId": "patchItemAliases",
        "tags": ["aliases"],
        "summary": "Change an Item's aliases",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/AliasesPatch"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemAliases"
          },
          "400": {
            "$ref": "#/components/responses/InvalidItemPatch"
          },
          "404": {
            "$ref": "#/components/responses/ItemNotFound"
          },
          "409": {
            "$ref": "#/components/responses/CannotApplyItemPatch"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "422": {
            "$ref": "#/components/responses/InvalidPatchedAliases"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/properties/{property_id}/aliases": {
      "get": {
        "operationId": "getPropertyAliases",
        "tags": ["aliases"],
        "summary": "Retrieve a Property's aliases",
        "parameters": [
          {
            "$ref": "#/components/parameters/PropertyId"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PropertyAliases"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/InvalidPropertyIdInput"
          },
          "404": {
            "$ref": "#/components/responses/PropertyNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "patch": {
        "operationId": "patchPropertyAliases",
        "tags": ["aliases"],
        "summary": "Change a Property's aliases",
        "parameters": [
          {
            "$ref": "#/components/parameters/PropertyId"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/AliasesPatch"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PropertyAliases"
          },
          "400": {
            "$ref": "#/components/responses/InvalidPropertyTermPatch"
          },
          "404": {
            "$ref": "#/components/responses/PropertyNotFound"
          },
          "409": {
            "$ref": "#/components/responses/CannotApplyPropertyPatch"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "422": {
            "$ref": "#/components/responses/InvalidPatchedAliases"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/items/{item_id}/aliases/{language_code}": {
      "get": {
        "operationId": "getItemAliasesInLanguage",
        "tags": ["aliases"],
        "summary": "Retrieve an Item's aliases in a specific language",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/LanguageCode"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemAliasesInLanguage"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "308": {
            "$ref": "#/components/responses/Moved"
          },
          "400": {
            "$ref": "#/components/responses/InvalidItemTermByLanguageInput"
          },
          "404": {
            "$ref": "#/components/responses/ItemAliasesInLanguageNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "post": {
        "operationId": "addItemAliasesInLanguage",
        "tags": ["aliases"],
        "summary": "Create / Add an Item's aliases in a specific language",
        "parameters": [
          {
            "$ref": "#/components/parameters/ItemId"
          },
          {
            "$ref": "#/components/parameters/LanguageCode"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Aliases"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ItemAliasesInLanguage",
            "description": "The updated list of Aliases in a specific language"
          },
          "201": {
            "$ref": "#/components/responses/ItemAliasesInLanguage",
            "description": "The newly created List of Aliases in a specific language"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/InvalidAddItemAliasesInput"
          },
          "404": {
            "$ref": "#/components/responses/ItemNotFound"
          },
          "409": {
            "$ref": "#/components/responses/ItemRedirected"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/properties/{property_id}/aliases/{language_code}": {
      "get": {
        "operationId": "getPropertyAliasesInLanguage",
        "tags": ["aliases"],
        "summary": "Retrieve a Property's aliases in a specific language",
        "parameters": [
          {
            "$ref": "#/components/parameters/PropertyId"
          },
          {
            "$ref": "#/components/parameters/LanguageCode"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PropertyAliasesInLanguage"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/InvalidPropertyTermByLanguageInput"
          },
          "404": {
            "$ref": "#/components/responses/PropertyAliasesInLanguageNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "post": {
        "operationId": "addPropertyAliasesInLanguage",
        "tags": ["aliases"],
        "summary": "Create / Add a Property's aliases in a specific language",
        "parameters": [
          {
            "$ref": "#/components/parameters/PropertyId"
          },
          {
            "$ref": "#/components/parameters/LanguageCode"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Aliases"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PropertyAliasesInLanguage",
            "description": "The updated list of Aliases in a specific language"
          },
          "201": {
            "$ref": "#/components/responses/PropertyAliasesInLanguage",
            "description": "The newly created List of Aliases in a specific language"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/InvalidAddPropertyAliasesInput"
          },
          "404": {
            "$ref": "#/components/responses/PropertyNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/properties/{property_id}/statements": {
      "get": {
        "operationId": "getPropertyStatements",
        "tags": ["statements"],
        "summary": "Retrieve Statements from a Property",
        "parameters": [
          {
            "$ref": "#/components/parameters/PropertyId"
          },
          {
            "$ref": "#/components/parameters/PropertyFilter"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PropertyStatements"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/InvalidRetrievePropertyStatementsInput"
          },
          "404": {
            "$ref": "#/components/responses/PropertyNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "post": {
        "operationId": "addPropertyStatement",
        "tags": ["statements"],
        "summary": "Add a new Statement to a Property",
        "parameters": [
          {
            "$ref": "#/components/parameters/PropertyId"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Statement"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/PropertyStatementCreated"
          },
          "400": {
            "$ref": "#/components/responses/InvalidNewPropertyStatementInput"
          },
          "404": {
            "$ref": "#/components/responses/PropertyNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/properties/{property_id}/statements/{statement_id}": {
      "get": {
        "operationId": "getPropertyStatement",
        "tags": ["statements"],
        "summary": "Retrieve a single Statement from a Property",
        "description": "This endpoint is also accessible through `/statements/{statement_id}`",
        "parameters": [
          {
            "$ref": "#/components/parameters/PropertyId"
          },
          {
            "$ref": "#/components/parameters/PropertyStatementId"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PropertyStatement"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/InvalidRetrievePropertyStatementInput"
          },
          "404": {
            "$ref": "#/components/responses/PropertyStatementNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "put": {
        "operationId": "replacePropertyStatement",
        "tags": ["statements"],
        "summary": "Replace a single Statement of a Property",
        "description": "This endpoint is also accessible through `/statements/{statement_id}`",
        "parameters": [
          {
            "$ref": "#/components/parameters/PropertyId"
          },
          {
            "$ref": "#/components/parameters/PropertyStatementId"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Statement"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PropertyStatement"
          },
          "400": {
            "$ref": "#/components/responses/InvalidReplacePropertyStatementInput"
          },
          "404": {
            "$ref": "#/components/responses/PropertyStatementNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "patch": {
        "operationId": "patchPropertyStatement",
        "tags": ["statements"],
        "summary": "Change elements of a single Statement of a Property",
        "description": "This endpoint is also accessible through `/statements/{statement_id}`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/PropertyId"
          },
          {
            "$ref": "#/components/parameters/PropertyStatementId"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/StatementPatch"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PropertyStatement"
          },
          "400": {
            "$ref": "#/components/responses/InvalidPropertyStatementPatch"
          },
          "404": {
            "$ref": "#/components/responses/PropertyStatementNotFound"
          },
          "409": {
            "$ref": "#/components/responses/CannotApplyStatementPatch"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "422": {
            "$ref": "#/components/responses/InvalidPatchedStatement"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete": {
        "operationId": "deletePropertyStatement",
        "tags": ["statements"],
        "summary": "Delete a single Statement from a Property",
        "description": "This endpoint is also accessible through `/statements/{statement_id}`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/PropertyId"
          },
          {
            "$ref": "#/components/parameters/PropertyStatementId"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Edit"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/StatementDeleted"
          },
          "400": {
            "$ref": "#/components/responses/InvalidRemovePropertyStatementInput"
          },
          "404": {
            "$ref": "#/components/responses/PropertyStatementNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/statements/{statement_id}": {
      "get": {
        "operationId": "getStatement",
        "tags": ["statements"],
        "summary": "Retrieve a single Statement",
        "description": "This endpoint is also accessible through `/entities/items/{item_id}/statements/{statement_id}` and `/entities/properties/{property_id}/statements/{statement_id}`",
        "parameters": [
          {
            "$ref": "#/components/parameters/StatementId"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Statement"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/InvalidRetrieveStatementInput"
          },
          "404": {
            "$ref": "#/components/responses/StatementNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "put": {
        "operationId": "replaceStatement",
        "tags": ["statements"],
        "summary": "Replace a single Statement",
        "description": "This endpoint is also accessible through `/entities/items/{item_id}/statements/{statement_id}` and `/entities/properties/{property_id}/statements/{statement_id}`",
        "parameters": [
          {
            "$ref": "#/components/parameters/StatementId"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Statement"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Statement"
          },
          "400": {
            "$ref": "#/components/responses/InvalidReplaceStatementInput"
          },
          "404": {
            "$ref": "#/components/responses/StatementNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "patch": {
        "operationId": "patchStatement",
        "tags": ["statements"],
        "summary": "Change elements of a single Statement",
        "description": "This endpoint is also accessible through `/entities/items/{item_id}/statements/{statement_id}` and `/entities/properties/{property_id}/statements/{statement_id}`",
        "parameters": [
          {
            "$ref": "#/components/parameters/StatementId"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/StatementPatch"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Statement"
          },
          "400": {
            "$ref": "#/components/responses/InvalidStatementPatch"
          },
          "404": {
            "$ref": "#/components/responses/StatementNotFound"
          },
          "409": {
            "$ref": "#/components/responses/CannotApplyStatementPatch"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "422": {
            "$ref": "#/components/responses/InvalidPatchedStatement"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete": {
        "operationId": "deleteStatement",
        "tags": ["statements"],
        "summary": "Delete a single Statement",
        "description": "This endpoint is also accessible through `/entities/items/{item_id}/statements/{statement_id}` and `/entities/properties/{property_id}/statements/{statement_id}`",
        "parameters": [
          {
            "$ref": "#/components/parameters/StatementId"
          },
          {
            "$ref": "#/components/parameters/IfMatch"
          },
          {
            "$ref": "#/components/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/IfUnmodifiedSince"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Edit"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/StatementDeleted"
          },
          "400": {
            "$ref": "#/components/responses/InvalidRemoveStatementInput"
          },
          "404": {
            "$ref": "#/components/responses/StatementNotFound"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailedError"
          },
          "500": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ItemId": {
        "in": "path",
        "name": "item_id",
        "description": "The ID of the required Item",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^Q[1-9]\\d{0,9}$"
        },
        "examples": {
          "item": {
            "summary": "Example of Item ID",
            "value": "Q42"
          }
        }
      },
      "PropertyId": {
        "in": "path",
        "name": "property_id",
        "description": "The ID of the required Property",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^P[1-9]\\d{0,9}$"
        },
        "examples": {
          "item": {
            "summary": "Example of Property ID",
            "value": "P31"
          }
        }
      },
      "StatementId": {
        "in": "path",
        "name": "statement_id",
        "description": "The ID of the required Statement",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^(Q|q|P|p)[1-9]\\d{0,9}\\$.+$"
        },
        "examples": {
          "Statement on an Item": {
            "$ref": "#/components/examples/ItemStatementIdExample"
          },
          "Statement on a Property": {
            "$ref": "#/components/examples/PropertyStatementIdExample"
          }
        }
      },
      "ItemStatementId": {
        "in": "path",
        "name": "statement_id",
        "description": "The ID of the required Item Statement",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^(Q|q)[1-9]\\d{0,9}\\$.+$"
        },
        "example": {
          "$ref": "#/components/examples/ItemStatementIdExample/value"
        }
      },
      "PropertyStatementId": {
        "in": "path",
        "name": "statement_id",
        "description": "The ID of the required Property Statement",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^(P|p)[1-9]\\d{0,9}\\$.+$"
        },
        "example": {
          "$ref": "#/components/examples/PropertyStatementIdExample/value"
        }
      },
      "LanguageCode": {
        "in": "path",
        "name": "language_code",
        "description": "The requested resource language",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^[a-z]{2}[a-z0-9-]*$"
        },
        "example": "en"
      },
      "SiteId": {
        "in": "path",
        "name": "site_id",
        "description": "The ID of the required Site",
        "required": true,
        "schema": {
          "type": "string"
        },
        "examples": {
          "item": {
            "summary": "Example of Site ID",
            "value": "dewiki"
          }
        }
      },
      "ItemFields": {
        "in": "query",
        "name": "_fields",
        "description": "Comma-separated list of fields to include in each response object.",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "type",
              "labels",
              "descriptions",
              "aliases",
              "statements",
              "sitelinks"
            ]
          }
        },
        "explode": false,
        "style": "form"
      },
      "PropertyFields": {
        "in": "query",
        "name": "_fields",
        "description": "Comma-separated list of fields to include in each response object.",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "type",
              "data-type",
              "labels",
              "descriptions",
              "aliases",
              "statements"
            ]
          }
        },
        "explode": false,
        "style": "form"
      },
      "PropertyFilter": {
        "in": "query",
        "name": "property",
        "description": "Single property ID to filter statements by.",
        "required": false,
        "schema": {
          "type": "string",
          "pattern": "^P[1-9]\\d{0,9}$"
        },
        "style": "form",
        "example": "P31"
      },
      "IfNoneMatch": {
        "name": "If-None-Match",
        "in": "header",
        "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^(?:\".+\"|\\*)$"
          }
        },
        "examples": {
          "strong-etag": {
            "summary": "Single ETag",
            "value": ["\"1276705620\""]
          },
          "multiple-etags": {
            "summary": "Multiple ETags",
            "value": ["\"1276703231\"", "\"1276705620\""]
          }
        }
      },
      "IfModifiedSince": {
        "name": "If-Modified-Since",
        "in": "header",
        "description": "Conditionally perform the request only if the resource has been modified after the specified date",
        "schema": {
          "type": "string",
          "format": "http-date"
        },
        "example": "Sat, 06 Jun 2020 16:38:47 GMT"
      },
      "IfMatch": {
        "name": "If-Match",
        "in": "header",
        "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^(?:\".+\"|\\*)$"
          }
        },
        "examples": {
          "strong-etag": {
            "summary": "Single ETag",
            "value": ["\"1276705620\""]
          },
          "multiple-etags": {
            "summary": "Multiple ETags",
            "value": ["\"1276703231\"", "\"1276705620\""]
          }
        }
      },
      "IfUnmodifiedSince": {
        "name": "If-Unmodified-Since",
        "in": "header",
        "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
        "schema": {
          "type": "string",
          "format": "http-date"
        },
        "example": "Sat, 06 Jun 2020 16:38:47 GMT"
      },
      "Authorization": {
        "name": "Authorization",
        "in": "header",
        "description": "Make authenticated request using a provided bearer token",
        "schema": {
          "type": "string"
        },
        "example": "Bearer mF_9.B5f-4.1JqM"
      }
    },
    "requestBodies": {
      "Item": {
        "description": "Payload containing a Wikibase Item and edit metadata",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "item": {
                      "type": "object",
                      "properties": {
                        "labels": {
                          "$ref": "#/components/schemas/Labels"
                        },
                        "descriptions": {
                          "$ref": "#/components/schemas/Descriptions"
                        },
                        "aliases": {
                          "$ref": "#/components/schemas/Aliases"
                        },
                        "sitelinks": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "items": {
                              "$ref": "#/components/schemas/Sitelink"
                            }
                          },
                          "example": {
                            "afwiki": {
                              "title": "Douglas Adams",
                              "badges": ["Q17437798"]
                            },
                            "arwiki": {
                              "title": "دوغلاس آدمز",
                              "badges": []
                            }
                          }
                        },
                        "statements": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/Statement"
                            }
                          },
                          "example": {
                            "P92": [
                              {
                                "rank": "normal",
                                "property": {
                                  "id": "P92"
                                },
                                "value": {
                                  "content": "I am a goat",
                                  "type": "value"
                                },
                                "qualifiers": [],
                                "references": []
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "required": ["item"]
                },
                {
                  "$ref": "#/components/schemas/EditSchema"
                }
              ]
            }
          }
        }
      },
      "ItemPatch": {
        "required": true,
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/ItemPatchBaseSchema"
            }
          },
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ItemPatchBaseSchema"
                },
                {
                  "properties": {
                    "patch": {
                      "items": {
                        "properties": {
                          "path": {
                            "example": "/labels/en"
                          },
                          "value": {
                            "example": "Douglas Adams"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "$ref": "#/components/schemas/EditSchema"
                }
              ]
            }
          }
        }
      },
      "PropertyPatch": {
        "required": true,
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/PropertyPatchSchema"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PropertyPatchSchema"
            }
          }
        }
      },
      "Label": {
        "description": "Payload containing a Wikibase label in the specified language and edit metadata",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "label": {
                      "type": "string",
                      "example": "an example label"
                    }
                  },
                  "required": ["label"]
                },
                {
                  "$ref": "#/components/schemas/EditSchema"
                }
              ]
            }
          }
        }
      },
      "LabelsPatch": {
        "description": "Payload containing a JSON Patch document to be applied to Labels and edit metadata",
        "required": true,
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/LabelsPatchSchema"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LabelsPatchSchema"
            }
          }
        }
      },
      "Aliases": {
        "description": "Payload containing a list of Wikibase aliases in the specified language and edit metadata",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "aliases": {
                      "type": "array",
                      "example": ["alias-1", "alias-2"]
                    }
                  },
                  "required": ["aliases"]
                },
                {
                  "$ref": "#/components/schemas/EditSchema"
                }
              ]
            }
          }
        }
      },
      "AliasesPatch": {
        "description": "Payload containing a JSON Patch document to be applied to an Item's aliases and edit metadata",
        "required": true,
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/AliasesPatchSchema"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AliasesPatchSchema"
            }
          }
        }
      },
      "Description": {
        "description": "Payload containing a Wikibase description in the specified language and edit metadata",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "example": "an example description"
                    }
                  },
                  "required": ["description"]
                },
                {
                  "$ref": "#/components/schemas/EditSchema"
                }
              ]
            }
          }
        }
      },
      "DescriptionsPatch": {
        "required": true,
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/DescriptionsPatchSchema"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DescriptionsPatchSchema"
            }
          }
        }
      },
      "Statement": {
        "description": "Payload containing a Wikibase Statement object and edit metadata",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "statement": {
                      "$ref": "#/components/schemas/Statement"
                    }
                  },
                  "required": ["statement"]
                },
                {
                  "$ref": "#/components/schemas/EditSchema"
                }
              ]
            }
          }
        }
      },
      "StatementPatch": {
        "description": "Payload containing a JSON Patch document to be applied to a Statement and edit metadata",
        "required": true,
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/StatementPatchSchema"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/StatementPatchSchema"
            }
          }
        }
      },
      "Sitelink": {
        "description": "Payload containing a Wikibase Sitelink object and edit metadata",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "sitelink": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "Douglas Adams"
                        },
                        "badges": {
                          "type": "array",
                          "example": [],
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": ["title"]
                    }
                  },
                  "required": ["sitelink"]
                },
                {
                  "$ref": "#/components/schemas/EditSchema"
                }
              ]
            }
          }
        }
      },
      "SitelinksPatch": {
        "required": true,
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/Schemas/SitelinksPatchSchema"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/Schemas/SitelinksPatchSchema"
            }
          }
        }
      },
      "Edit": {
        "description": "Edit payload containing edit metadata",
        "required": false,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/EditSchema"
            }
          }
        }
      }
    },
    "responses": {
      "LabelDeleted": {
        "description": "The resource was deleted",
        "headers": {
          "Content-Language": {
            "description": "Language code of the language in which response is provided",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "string"
            },
            "example": "Label deleted"
          }
        }
      },
      "DescriptionDeleted": {
        "description": "The resource was deleted",
        "headers": {
          "Content-Language": {
            "description": "Language code of the language in which response is provided",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "string"
            },
            "example": "Description deleted"
          }
        }
      },
      "StatementDeleted": {
        "description": "The resource was deleted",
        "headers": {
          "Content-Language": {
            "description": "Language code of the language in which response is provided",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "string"
            },
            "example": "Statement deleted"
          }
        }
      },
      "SitelinkDeleted": {
        "description": "The resource was deleted",
        "headers": {
          "Content-Language": {
            "description": "Language code of the language in which response is provided",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "string"
            },
            "example": "Sitelink deleted"
          }
        }
      },
      "ItemNotFound": {
        "description": "The specified Item was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "item-not-found": {
                "$ref": "#/components/examples/ItemNotFoundExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "PropertyNotFound": {
        "description": "The specified property was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "property-not-found": {
                "$ref": "#/components/examples/PropertyNotFoundExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "ItemRedirected": {
        "description": "The specified Item was redirected",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "redirected-item": {
                "$ref": "#/components/examples/RedirectedItemExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "ItemRedirectedOrSitelinkConflict": {
        "description": "The specified Item was redirected or there is a Sitelink conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "redirected-item": {
                "$ref": "#/components/examples/RedirectedItemExample"
              },
              "sitelink-conflict": {
                "$ref": "#/components/examples/SitelinkConflictExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "SitelinkConflict": {
        "description": "There is a Sitelink conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "sitelink-conflict": {
                "$ref": "#/components/examples/SitelinkConflictWithSiteContextExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "StatementNotFound": {
        "description": "The specified Statement was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "statement-not-found": {
                "$ref": "#/components/examples/StatementNotFoundExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "ItemStatementNotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "item-not-found": {
                "$ref": "#/components/examples/ItemNotFoundExample"
              },
              "statement-not-found": {
                "$ref": "#/components/examples/StatementNotFoundExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "PropertyStatementNotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "property-not-found": {
                "$ref": "#/components/examples/PropertyNotFoundExample"
              },
              "statement-not-found": {
                "$ref": "#/components/examples/StatementNotFoundExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "SitelinkNotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "item-not-found": {
                "$ref": "#/components/examples/ItemNotFoundExample"
              },
              "sitelink-not-defined": {
                "$ref": "#/components/examples/SitelinkNotDefinedExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "ItemLabelNotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "item-not-found": {
                "$ref": "#/components/examples/ItemNotFoundExample"
              },
              "label-not-defined": {
                "$ref": "#/components/examples/ItemLabelNotDefinedExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "PropertyLabelNotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "property-not-found": {
                "$ref": "#/components/examples/PropertyNotFoundExample"
              },
              "label-not-defined": {
                "$ref": "#/components/examples/PropertyLabelNotDefinedExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "ItemAliasesInLanguageNotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "item-not-found": {
                "$ref": "#/components/examples/ItemNotFoundExample"
              },
              "aliases-not-defined": {
                "$ref": "#/components/examples/ItemAliasesNotDefinedExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "PropertyAliasesInLanguageNotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "property-not-found": {
                "$ref": "#/components/examples/PropertyNotFoundExample"
              },
              "aliases-not-defined": {
                "$ref": "#/components/examples/PropertyAliasesNotDefinedExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "ItemDescriptionNotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "item-not-found": {
                "$ref": "#/components/examples/ItemNotFoundExample"
              },
              "description-not-defined": {
                "$ref": "#/components/examples/ItemDescriptionNotDefinedExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "PropertyDescriptionNotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "property-not-found": {
                "$ref": "#/components/examples/PropertyNotFoundExample"
              },
              "description-not-defined": {
                "$ref": "#/components/examples/PropertyDescriptionNotDefinedExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidGetItemInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "invalid-query-parameter": {
                "$ref": "#/components/examples/InvalidQueryParameterExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidNewItemInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "unexpected-field": {
                "$ref": "#/components/examples/ItemDataUnexpectedFieldExample"
              },
              "label-description-same-value": {
                "$ref": "#/components/examples/LabelDescriptionSameValueExample"
              },
              "invalid-language-code": {
                "$ref": "#/components/examples/InvalidLanguageCodeWithPathContextExample"
              },
              "item-label-description-duplicate": {
                "$ref": "#/components/examples/ItemLabelDescriptionDuplicateExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              },
              "duplicate-alias": {
                "$ref": "#/components/examples/DuplicateAliasWithLanguageContextExample"
              },
              "statement-data-missing-field": {
                "$ref": "#/components/examples/StatementDataMissingFieldExample"
              },
              "statement-group-property-id-mismatch": {
                "$ref": "#/components/examples/StatementGroupPropertyIdMismatch"
              },
              "invalid-sitelink-type": {
                "$ref": "#/components/examples/InvalidSitelinkTypeExample"
              },
              "title-does-not-exist": {
                "$ref": "#/components/examples/TitleDoesNotExistOnGivenSiteWithSiteContextExample"
              },
              "item-not-a-badge": {
                "$ref": "#/components/examples/ItemProvidedIsNotAllowedAsSitelinkBadgeWithSiteContextExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "missing-field": {
                "$ref": "#/components/examples/MissingFieldExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPropertyInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "invalid-query-parameter": {
                "$ref": "#/components/examples/InvalidQueryParameterExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidItemIdInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPropertyIdInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRetrieveItemStatementsInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "invalid-query-parameter": {
                "$ref": "#/components/examples/InvalidQueryParameterExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRetrievePropertyStatementsInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "invalid-query-parameter": {
                "$ref": "#/components/examples/InvalidQueryParameterExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRetrieveStatementInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRetrieveItemStatementInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "item-statement-id-mismatch": {
                "$ref": "#/components/examples/ItemStatementIdMismatchExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRetrievePropertyStatementInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "property-statement-id-mismatch": {
                "$ref": "#/components/examples/PropertyStatementIdMismatchExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidNewItemStatementInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              },
              "statement-data-missing-field": {
                "$ref": "#/components/examples/StatementDataMissingFieldExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidNewPropertyStatementInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              },
              "statement-data-missing-field": {
                "$ref": "#/components/examples/StatementDataMissingFieldExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidReplaceStatementInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              },
              "statement-data-missing-field": {
                "$ref": "#/components/examples/StatementDataMissingFieldExample"
              },
              "cannot-modify-read-only-value": {
                "$ref": "#/components/examples/CannotModifyReadOnlyValue"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidReplaceItemStatementInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "item-statement-id-mismatch": {
                "$ref": "#/components/examples/ItemStatementIdMismatchExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              },
              "statement-data-missing-field": {
                "$ref": "#/components/examples/StatementDataMissingFieldExample"
              },
              "cannot-modify-read-only-value": {
                "$ref": "#/components/examples/CannotModifyReadOnlyValue"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidReplacePropertyStatementInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "property-statement-id-mismatch": {
                "$ref": "#/components/examples/PropertyStatementIdMismatchExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              },
              "statement-data-missing-field": {
                "$ref": "#/components/examples/StatementDataMissingFieldExample"
              },
              "cannot-modify-read-only-value": {
                "$ref": "#/components/examples/CannotModifyReadOnlyValue"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRemoveStatementInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRemoveItemStatementInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "item-statement-id-mismatch": {
                "$ref": "#/components/examples/ItemStatementIdMismatchExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRemovePropertyStatementInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "property-statement-id-mismatch": {
                "$ref": "#/components/examples/PropertyStatementIdMismatchExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRemoveSitelinkInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidSetSitelinkInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "missing-field": {
                "$ref": "#/components/examples/MissingFieldExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              },
              "title-does-not-exist": {
                "$ref": "#/components/examples/TitleDoesNotExistOnGivenSiteExample"
              },
              "item-not-a-badge": {
                "$ref": "#/components/examples/ItemProvidedIsNotAllowedAsSitelinkBadgeExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidSetItemLabelInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              },
              "label-description-same-value": {
                "$ref": "#/components/examples/LabelDescriptionSameValueExample"
              },
              "item-label-description-duplicate": {
                "$ref": "#/components/examples/ItemLabelDescriptionDuplicateExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidSetPropertyLabelInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              },
              "label-description-same-value": {
                "$ref": "#/components/examples/LabelDescriptionSameValueExample"
              },
              "property-label-duplicate": {
                "$ref": "#/components/examples/PropertyLabelDuplicateExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidSetItemDescriptionInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "label-description-same-value": {
                "$ref": "#/components/examples/LabelDescriptionSameValueExample"
              },
              "item-label-description-duplicate": {
                "$ref": "#/components/examples/ItemLabelDescriptionDuplicateExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidSetPropertyDescriptionInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "label-description-same-value": {
                "$ref": "#/components/examples/LabelDescriptionSameValueExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRemoveItemLabelInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRemovePropertyLabelInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRemoveItemDescriptionInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRemovePropertyDescriptionInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidAddItemAliasesInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "duplicate-alias": {
                "$ref": "#/components/examples/DuplicateAliasExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidAddPropertyAliasesInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "duplicate-alias": {
                "$ref": "#/components/examples/DuplicateAliasExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidGetSitelinkInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidItemTermByLanguageInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPropertyTermByLanguageInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidItemPatch": {
        "description": "The provided JSON Patch request is invalid",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              },
              "missing-json-patch-field": {
                "$ref": "#/components/examples/MissingJsonPatchFieldExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPropertyTermPatch": {
        "description": "The provided JSON Patch request is invalid",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              },
              "missing-json-patch-field": {
                "$ref": "#/components/examples/MissingJsonPatchFieldExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPropertyPatch": {
        "description": "The provided JSON Patch request is invalid",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              },
              "missing-json-patch-field": {
                "$ref": "#/components/examples/MissingJsonPatchFieldExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "CannotApplyItemPatch": {
        "description": "The provided JSON Patch cannot be applied",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "redirected-item": {
                "$ref": "#/components/examples/RedirectedItemExample"
              },
              "patch-test-failed": {
                "$ref": "#/components/examples/PatchTestFailedExample"
              },
              "patch-target-not-found": {
                "$ref": "#/components/examples/PatchTargetNotFoundExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "CannotApplyPropertyPatch": {
        "description": "The provided JSON Patch cannot be applied",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "patch-test-failed": {
                "$ref": "#/components/examples/PatchTestFailedExample"
              },
              "patch-target-not-found": {
                "$ref": "#/components/examples/PatchTargetNotFoundExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPatchedItemSitelinks": {
        "description": "Applying the provided JSON Patch results in invalid sitelinks",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "patched-sitelink-invalid-site-id": {
                "$ref": "#/components/examples/PatchedSitelinkSiteIdInvalidExample"
              },
              "patched-sitelink-missing-title": {
                "$ref": "#/components/examples/PatchedSitelinkTitleMissingExample"
              },
              "patched-sitelink-title-empty": {
                "$ref": "#/components/examples/PatchedSitelinkTitleEmptyExample"
              },
              "patched-sitelink-invalid-title": {
                "$ref": "#/components/examples/PatchedSitelinkTitleInvalidExample"
              },
              "patched-sitelink-title-does-not-exist": {
                "$ref": "#/components/examples/PatchedSitelinkTitleNotExistExample"
              },
              "patched-sitelink-invalid-badge": {
                "$ref": "#/components/examples/PatchedSitelinkBadgeInvalidExample"
              },
              "patched-sitelink-item-not-a-badge": {
                "$ref": "#/components/examples/PatchedSitelinkItemBadgeNotBadgeExample"
              },
              "patched-sitelink-badges-format": {
                "$ref": "#/components/examples/PatchedSiteLinkBadgeFormatExample"
              },
              "patched-sitelink-conflict": {
                "$ref": "#/components/examples/PatchedSitelinkConflictExample"
              },
              "url-not-modifiable": {
                "$ref": "#/components/examples/SitelinkUrlNotModifiableExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPatchedItem": {
        "description": "Applying the provided JSON Patch results in an invalid property",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "patched-item-invalid-operation-change-item-id": {
                "$ref": "#/components/examples/PatchedItemInvalidOperationChangeItemIdExample"
              },
              "patched-item-invalid-field": {
                "$ref": "#/components/examples/PatchedItemInvalidFieldExample"
              },
              "patched-item-unexpected-field": {
                "$ref": "#/components/examples/PatchedItemInvalidUnexpectedExample"
              },
              "patched-statement-missing-field": {
                "$ref": "#/components/examples/PatchedStatementMissingFieldExample"
              },
              "patched-statement-invalid-field": {
                "$ref": "#/components/examples/PatchedStatementInvalidFieldExample"
              },
              "statement-id-not-modifiable": {
                "$ref": "#/components/examples/StatementIdNotModifiableExample"
              },
              "patched-statement-property-not-modifiable": {
                "$ref": "#/components/examples/PatchedStatementPropertyNotModifiableExample"
              },
              "patched-invalid-statement-group-type": {
                "$ref": "#/components/examples/PatchedInvalidStatementGroupTypeExample"
              },
              "patched-invalid-statement-type": {
                "$ref": "#/components/examples/PatchedInvalidStatementTypeExample"
              },
              "patched-statement-group-property-id-mismatch": {
                "$ref": "#/components/examples/PatchedStatementGroupPropertyIdMismatchExample"
              },
              "patched-labels-invalid-language-code": {
                "$ref": "#/components/examples/PatchedLabelsInvalidLanguageCodeExample"
              },
              "patched-label-empty": {
                "$ref": "#/components/examples/PatchedLabelEmptyExample"
              },
              "patched-label-too-long": {
                "$ref": "#/components/examples/PatchedLabelTooLongExample"
              },
              "patched-label-invalid": {
                "$ref": "#/components/examples/PatchedLabelInvalidExample"
              },
              "patched-descriptions-invalid-language-code": {
                "$ref": "#/components/examples/PatchedDescriptionsInvalidLanguageCodeExample"
              },
              "patched-description-empty": {
                "$ref": "#/components/examples/PatchedDescriptionEmptyExample"
              },
              "patched-description-too-long": {
                "$ref": "#/components/examples/PatchedDescriptionTooLongExample"
              },
              "patched-description-invalid": {
                "$ref": "#/components/examples/PatchedDescriptionInvalidExample"
              },
              "patched-item-label-description-same-value": {
                "$ref": "#/components/examples/PatchedItemLabelDescriptionSameValueExample"
              },
              "patched-item-label-description-duplicate": {
                "$ref": "#/components/examples/PatchedItemLabelDescriptionDuplicateExample"
              },
              "patched-aliases-invalid-language-code": {
                "$ref": "#/components/examples/PatchedAliasesInvalidLanguageCodeExample"
              },
              "patched-alias-empty": {
                "$ref": "#/components/examples/PatchedAliasEmptyExample"
              },
              "patched-alias-too-long": {
                "$ref": "#/components/examples/PatchedAliasTooLongExample"
              },
              "patched-aliases-invalid-field": {
                "$ref": "#/components/examples/PatchedAliasesInvalidFieldExample"
              },
              "patched-duplicate-alias": {
                "$ref": "#/components/examples/PatchedDuplicateAliasExample"
              },
              "patched-invalid-sitelink-type": {
                "$ref": "#/components/examples/PatchedInvalidSitelinkTypeExample"
              },
              "patched-sitelink-invalid-site-id": {
                "$ref": "#/components/examples/PatchedSitelinkSiteIdInvalidExample"
              },
              "patched-sitelink-missing-title": {
                "$ref": "#/components/examples/PatchedSitelinkTitleMissingExample"
              },
              "patched-sitelink-title-empty": {
                "$ref": "#/components/examples/PatchedSitelinkTitleEmptyExample"
              },
              "patched-sitelink-invalid-title": {
                "$ref": "#/components/examples/PatchedSitelinkTitleInvalidExample"
              },
              "patched-sitelink-title-does-not-exist": {
                "$ref": "#/components/examples/PatchedSitelinkTitleNotExistExample"
              },
              "patched-sitelink-invalid-badge": {
                "$ref": "#/components/examples/PatchedSitelinkBadgeInvalidExample"
              },
              "patched-sitelink-item-not-a-badge": {
                "$ref": "#/components/examples/PatchedSitelinkItemBadgeNotBadgeExample"
              },
              "patched-sitelink-badges-format": {
                "$ref": "#/components/examples/PatchedSiteLinkBadgeFormatExample"
              },
              "patched-sitelink-conflict": {
                "$ref": "#/components/examples/PatchedSitelinkConflictExample"
              },
              "url-not-modifiable": {
                "$ref": "#/components/examples/SitelinkUrlNotModifiableExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPatchedProperty": {
        "description": "Applying the provided JSON Patch results in an invalid property",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "patched-property-invalid-operation-change-property-id": {
                "$ref": "#/components/examples/PatchedPropertyInvalidOperationChangePropertyIdExample"
              },
              "patched-property-invalid-operation-change-property-datatype": {
                "$ref": "#/components/examples/PatchedPropertyInvalidOperationChangePropertyDatatypeExample"
              },
              "patched-property-missing-field": {
                "$ref": "#/components/examples/PatchedPropertyMissingFieldExample"
              },
              "patched-property-invalid-field": {
                "$ref": "#/components/examples/PatchedPropertyInvalidFieldExample"
              },
              "patched-property-unexpected-field": {
                "$ref": "#/components/examples/PatchedPropertyInvalidUnexpectedExample"
              },
              "patched-statement-missing-field": {
                "$ref": "#/components/examples/PatchedStatementMissingFieldExample"
              },
              "patched-statement-invalid-field": {
                "$ref": "#/components/examples/PatchedStatementInvalidFieldExample"
              },
              "statement-id-not-modifiable": {
                "$ref": "#/components/examples/StatementIdNotModifiableExample"
              },
              "patched-statement-property-not-modifiable": {
                "$ref": "#/components/examples/PatchedStatementPropertyNotModifiableExample"
              },
              "patched-invalid-statement-group-type": {
                "$ref": "#/components/examples/PatchedInvalidStatementGroupTypeExample"
              },
              "patched-invalid-statement-type": {
                "$ref": "#/components/examples/PatchedInvalidStatementTypeExample"
              },
              "patched-statement-group-property-id-mismatch": {
                "$ref": "#/components/examples/PatchedStatementGroupPropertyIdMismatchExample"
              },
              "patched-labels-invalid-language-code": {
                "$ref": "#/components/examples/PatchedLabelsInvalidLanguageCodeExample"
              },
              "patched-label-empty": {
                "$ref": "#/components/examples/PatchedLabelEmptyExample"
              },
              "patched-label-too-long": {
                "$ref": "#/components/examples/PatchedLabelTooLongExample"
              },
              "patched-label-invalid": {
                "$ref": "#/components/examples/PatchedLabelInvalidExample"
              },
              "patched-property-label-duplicate": {
                "$ref": "#/components/examples/PatchedPropertyLabelDuplicateExample"
              },
              "patched-descriptions-invalid-language-code": {
                "$ref": "#/components/examples/PatchedDescriptionsInvalidLanguageCodeExample"
              },
              "patched-description-empty": {
                "$ref": "#/components/examples/PatchedDescriptionEmptyExample"
              },
              "patched-description-too-long": {
                "$ref": "#/components/examples/PatchedDescriptionTooLongExample"
              },
              "patched-description-invalid": {
                "$ref": "#/components/examples/PatchedDescriptionInvalidExample"
              },
              "patched-property-label-description-same-value": {
                "$ref": "#/components/examples/PatchedPropertyLabelDescriptionSameValueExample"
              },
              "patched-aliases-invalid-language-code": {
                "$ref": "#/components/examples/PatchedAliasesInvalidLanguageCodeExample"
              },
              "patched-alias-empty": {
                "$ref": "#/components/examples/PatchedAliasEmptyExample"
              },
              "patched-alias-too-long": {
                "$ref": "#/components/examples/PatchedAliasTooLongExample"
              },
              "patched-aliases-invalid-field": {
                "$ref": "#/components/examples/PatchedAliasesInvalidFieldExample"
              },
              "patched-duplicate-alias": {
                "$ref": "#/components/examples/PatchedDuplicateAliasExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPatchedItemLabels": {
        "description": "Applying the provided JSON Patch results in invalid Labels",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "patched-labels-invalid-language-code": {
                "$ref": "#/components/examples/PatchedLabelsInvalidLanguageCodeExample"
              },
              "patched-label-empty": {
                "$ref": "#/components/examples/PatchedLabelEmptyExample"
              },
              "patched-label-too-long": {
                "$ref": "#/components/examples/PatchedLabelTooLongExample"
              },
              "patched-label-invalid": {
                "$ref": "#/components/examples/PatchedLabelInvalidExample"
              },
              "patched-item-label-description-same-value": {
                "$ref": "#/components/examples/PatchedItemLabelDescriptionSameValueExample"
              },
              "patched-item-label-description-duplicate": {
                "$ref": "#/components/examples/PatchedItemLabelDescriptionDuplicateExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPatchedPropertyLabels": {
        "description": "Applying the provided JSON Patch results in invalid Labels",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "patched-labels-invalid-language-code": {
                "$ref": "#/components/examples/PatchedLabelsInvalidLanguageCodeExample"
              },
              "patched-label-empty": {
                "$ref": "#/components/examples/PatchedLabelEmptyExample"
              },
              "patched-label-too-long": {
                "$ref": "#/components/examples/PatchedLabelTooLongExample"
              },
              "patched-label-invalid": {
                "$ref": "#/components/examples/PatchedLabelInvalidExample"
              },
              "patched-property-label-description-same-value": {
                "$ref": "#/components/examples/PatchedPropertyLabelDescriptionSameValueExample"
              },
              "patched-property-label-duplicate": {
                "$ref": "#/components/examples/PatchedPropertyLabelDuplicateExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPatchedItemDescriptions": {
        "description": "Applying the provided JSON Patch results in invalid descriptions",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "patched-descriptions-invalid-language-code": {
                "$ref": "#/components/examples/PatchedDescriptionsInvalidLanguageCodeExample"
              },
              "patched-description-empty": {
                "$ref": "#/components/examples/PatchedDescriptionEmptyExample"
              },
              "patched-description-too-long": {
                "$ref": "#/components/examples/PatchedDescriptionTooLongExample"
              },
              "patched-description-invalid": {
                "$ref": "#/components/examples/PatchedDescriptionInvalidExample"
              },
              "patched-item-label-description-same-value": {
                "$ref": "#/components/examples/PatchedItemLabelDescriptionSameValueExample"
              },
              "patched-item-label-description-duplicate": {
                "$ref": "#/components/examples/PatchedItemLabelDescriptionDuplicateExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPatchedPropertyDescriptions": {
        "description": "Applying the provided JSON Patch results in invalid descriptions",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "patched-descriptions-invalid-language-code": {
                "$ref": "#/components/examples/PatchedDescriptionsInvalidLanguageCodeExample"
              },
              "patched-description-empty": {
                "$ref": "#/components/examples/PatchedDescriptionEmptyExample"
              },
              "patched-description-too-long": {
                "$ref": "#/components/examples/PatchedDescriptionTooLongExample"
              },
              "patched-description-invalid": {
                "$ref": "#/components/examples/PatchedDescriptionInvalidExample"
              },
              "patched-property-label-description-same-value": {
                "$ref": "#/components/examples/PatchedPropertyLabelDescriptionSameValueExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPatchedAliases": {
        "description": "Applying the provided JSON Patch results in invalid Aliases",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "patched-aliases-invalid-language-code": {
                "$ref": "#/components/examples/PatchedAliasesInvalidLanguageCodeExample"
              },
              "patched-alias-empty": {
                "$ref": "#/components/examples/PatchedAliasEmptyExample"
              },
              "patched-alias-too-long": {
                "$ref": "#/components/examples/PatchedAliasTooLongExample"
              },
              "patched-aliases-invalid-field": {
                "$ref": "#/components/examples/PatchedAliasesInvalidFieldExample"
              },
              "patched-duplicate-alias": {
                "$ref": "#/components/examples/PatchedDuplicateAliasExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidStatementPatch": {
        "description": "The provided JSON Patch is invalid",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              },
              "invalid-operation-change-statement-id": {
                "$ref": "#/components/examples/InvalidOperationChangeStatementId"
              },
              "invalid-operation-change-property-of-statement": {
                "$ref": "#/components/examples/InvalidOperationChangePropertyOfStatement"
              },
              "missing-json-patch-field": {
                "$ref": "#/components/examples/MissingJsonPatchFieldExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidItemStatementPatch": {
        "description": "The provided JSON Patch is invalid",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "item-statement-id-mismatch": {
                "$ref": "#/components/examples/ItemStatementIdMismatchExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              },
              "invalid-operation-change-statement-id": {
                "$ref": "#/components/examples/InvalidOperationChangeStatementId"
              },
              "invalid-operation-change-property-of-statement": {
                "$ref": "#/components/examples/InvalidOperationChangePropertyOfStatement"
              },
              "missing-json-patch-field": {
                "$ref": "#/components/examples/MissingJsonPatchFieldExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPropertyStatementPatch": {
        "description": "The provided JSON Patch is invalid",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "invalid-path-parameter": {
                "$ref": "#/components/examples/InvalidPathParameterExample"
              },
              "property-statement-id-mismatch": {
                "$ref": "#/components/examples/PropertyStatementIdMismatchExample"
              },
              "invalid-value": {
                "$ref": "#/components/examples/InvalidValueExample"
              },
              "value-too-long": {
                "$ref": "#/components/examples/ValueTooLongExample"
              },
              "invalid-operation-change-statement-id": {
                "$ref": "#/components/examples/InvalidOperationChangeStatementId"
              },
              "invalid-operation-change-property-of-statement": {
                "$ref": "#/components/examples/InvalidOperationChangePropertyOfStatement"
              },
              "missing-json-patch-field": {
                "$ref": "#/components/examples/MissingJsonPatchFieldExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "CannotApplyStatementPatch": {
        "description": "The provided JSON Patch cannot be applied",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "patch-test-failed": {
                "$ref": "#/components/examples/PatchTestFailedExample"
              },
              "patch-target-not-found": {
                "$ref": "#/components/examples/PatchTargetNotFoundExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPatchedStatement": {
        "description": "Applying the provided JSON Patch results in an invalid statement",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "examples": {
              "patched-statement-missing-field": {
                "$ref": "#/components/examples/PatchedStatementMissingFieldExample"
              },
              "patched-statement-invalid-field": {
                "$ref": "#/components/examples/PatchedStatementInvalidFieldExample"
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "PreconditionFailedError": {
        "description": "The condition defined by a conditional request header is not fulfilled"
      },
      "UnexpectedError": {
        "description": "An unexpected error has occurred",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ItemNotFoundSchema"
            },
            "example": {
              "code": "unexpected-error",
              "message": "Unexpected Error"
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "Item": {
        "description": "A single Wikibase Item",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Item"
                },
                {
                  "required": [
                    "id",
                    "type",
                    "labels",
                    "descriptions",
                    "aliases",
                    "statements",
                    "sitelinks"
                  ],
                  "properties": {
                    "sitelinks": {
                      "additionalProperties": {
                        "required": ["title", "badges", "url"]
                      }
                    },
                    "statements": {
                      "additionalProperties": {
                        "items": {
                          "$ref": "#/components/schemas/Statement2Schema"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "Sitelinks": {
        "description": "A list of sitelinks by item id",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Item/properties/sitelinks"
            }
          }
        }
      },
      "Sitelink": {
        "description": "A sitelink by item id",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Sitelink"
            }
          }
        }
      },
      "ItemLabels": {
        "description": "Item's labels by language",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Labels"
            }
          }
        }
      },
      "ItemDescriptions": {
        "description": "Item's descriptions by language",
        "headers": {
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Descriptions"
            }
          }
        }
      },
      "ItemAliases": {
        "description": "Item's aliases by language",
        "headers": {
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Aliases"
            }
          }
        }
      },
      "ItemAliasesInLanguage": {
        "description": "Item's aliases in a specific language",
        "headers": {
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": ["Douglas Noel Adams", "Douglas Noël Adams"]
            }
          }
        }
      },
      "Property": {
        "description": "A single Wikibase Property",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Property"
                },
                {
                  "required": [
                    "id",
                    "type",
                    "data-type",
                    "labels",
                    "descriptions",
                    "aliases",
                    "statements"
                  ],
                  "properties": {
                    "statements": {
                      "additionalProperties": {
                        "items": {
                          "$ref": "#/components/schemas/Statement2Schema"
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "PropertyLabels": {
        "description": "Property's labels by language",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Labels"
            }
          }
        }
      },
      "Label": {
        "description": "A label in a specific language",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "string",
              "example": "an example label"
            }
          }
        }
      },
      "PropertyDescriptions": {
        "description": "Property's descriptions by language",
        "headers": {
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Descriptions"
            }
          }
        }
      },
      "Description": {
        "description": "A description in a specific language",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "string",
              "example": "an example description"
            }
          }
        }
      },
      "PropertyAliases": {
        "description": "Property's aliases by language",
        "headers": {
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Aliases"
            }
          }
        }
      },
      "PropertyAliasesInLanguage": {
        "description": "Property's aliases in a specific language",
        "headers": {
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": ["is a", "example of"]
            }
          }
        }
      },
      "Statement": {
        "description": "A single Wikibase Statement. Please note that the value of the `ETag` header field refers to the entity's revision ID.",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Statement"
            },
            "examples": {
              "Statement on an Item": {
                "$ref": "#/components/examples/ItemStatementResponseExample"
              },
              "Statement on a Property": {
                "$ref": "#/components/examples/PropertyStatementResponseExample"
              }
            }
          }
        }
      },
      "ItemStatement": {
        "description": "A single Wikibase Statement. Please note that the value of the `ETag` header field refers to the Item's revision ID.",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Statement"
            },
            "example": {
              "$ref": "#/components/examples/ItemStatementResponseExample/value"
            }
          }
        }
      },
      "PropertyStatement": {
        "description": "A single Wikibase Statement. Please note that the value of the `ETag` header field refers to the Property's Revision ID.",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Statement"
            },
            "example": {
              "$ref": "#/components/examples/PropertyStatementResponseExample/value"
            }
          }
        }
      },
      "ItemStatementCreated": {
        "description": "A single newly created Wikibase Statement. Please note that the value of the `ETag` header field refers to the entity's revision ID.",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          },
          "Location": {
            "schema": {
              "type": "string"
            },
            "description": "The URI of the newly created statement"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Statement"
            }
          }
        }
      },
      "PropertyStatementCreated": {
        "description": "A single newly created Wikibase Statement. Please note that the value of the `ETag` header field refers to the entity's revision ID.",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          },
          "Location": {
            "schema": {
              "type": "string"
            },
            "description": "The URI of the newly created statement"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Statement"
            },
            "example": {
              "$ref": "#/components/examples/PropertyStatementResponseExample/value"
            }
          }
        }
      },
      "ItemStatements": {
        "description": "The statements of an Item",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Statement"
                }
              }
            },
            "example": {
              "P370": [
                {
                  "id": "Q11$6403c562-401a-2b26-85cc-8327801145e1",
                  "rank": "normal",
                  "property": {
                    "id": "P370",
                    "data-type": "string"
                  },
                  "value": {
                    "content": "I am a goat",
                    "type": "value"
                  },
                  "qualifiers": [],
                  "references": []
                }
              ],
              "P92": [
                {
                  "id": "Q11$6403c562-401a-2b26-85cc-8327801145e1",
                  "rank": "normal",
                  "property": {
                    "id": "P92",
                    "data-type": "string"
                  },
                  "value": {
                    "content": "I am a goat",
                    "type": "value"
                  },
                  "qualifiers": [],
                  "references": []
                }
              ]
            }
          }
        }
      },
      "PropertyStatements": {
        "description": "The statements of a Property",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Statement"
                }
              }
            },
            "example": {
              "P370": [
                {
                  "id": "P11$6403c562-401a-2b26-85cc-8327801145e1",
                  "rank": "normal",
                  "property": {
                    "id": "P370",
                    "data-type": "string"
                  },
                  "value": {
                    "content": "I am a goat",
                    "type": "value"
                  },
                  "qualifiers": [],
                  "references": []
                }
              ],
              "P92": [
                {
                  "id": "P11$6403c562-401a-2b26-85cc-8327801145e1",
                  "rank": "normal",
                  "property": {
                    "id": "P92",
                    "data-type": "string"
                  },
                  "value": {
                    "content": "I am a goat",
                    "type": "value"
                  },
                  "qualifiers": [],
                  "references": []
                }
              ]
            }
          }
        }
      },
      "NotModified": {
        "description": "The specified resource has not been modified since last provided revision number or date",
        "headers": {
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          }
        }
      },
      "Moved": {
        "description": "The specified resource has permanently moved to the indicated location",
        "headers": {
          "Location": {
            "schema": {
              "type": "string"
            },
            "description": "The URL to which the requested resource has been moved"
          }
        }
      }
    },
    "schemas": {
      "ItemNotFoundSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "context": {
            "type": "object"
          }
        },
        "required": ["code", "message"]
      },
      "EditSchema": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "example": ["mobile edit", "external tool edit"]
          },
          "bot": {
            "type": "boolean",
            "default": false
          },
          "comment": {
            "type": "string",
            "example": "API edit fixing the modelling as discussed in ..."
          }
        }
      },
      "ItemPatchBaseSchema": {
        "type": "object",
        "properties": {
          "patch": {
            "description": "A JSON Patch document as defined by RFC 6902",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "op": {
                  "description": "The operation to perform",
                  "type": "string",
                  "enum": ["add", "copy", "move", "remove", "replace", "test"],
                  "example": "replace"
                },
                "path": {
                  "description": "A JSON Pointer for the property to manipulate",
                  "type": "string"
                },
                "value": {
                  "description": "The value to be used within the operation"
                }
              },
              "required": ["op", "path"]
            }
          }
        },
        "required": ["patch"]
      },
      "PropertyPatchSchema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ItemPatchBaseSchema"
          },
          {
            "properties": {
              "patch": {
                "items": {
                  "properties": {
                    "path": {
                      "example": "/labels/en"
                    },
                    "value": {
                      "example": "Instance of"
                    }
                  }
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/EditSchema"
          }
        ]
      },
      "StatementPatchSchema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ItemPatchBaseSchema"
          },
          {
            "properties": {
              "patch": {
                "items": {
                  "properties": {
                    "path": {
                      "example": "/value/content"
                    },
                    "value": {
                      "example": "Q5"
                    }
                  }
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/EditSchema"
          }
        ]
      },
      "DescriptionsPatchSchema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ItemPatchBaseSchema"
          },
          {
            "properties": {
              "patch": {
                "items": {
                  "properties": {
                    "path": {
                      "example": "/en"
                    },
                    "value": {
                      "example": "en-description"
                    }
                  }
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/EditSchema"
          }
        ]
      },
      "LabelsPatchSchema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ItemPatchBaseSchema"
          },
          {
            "properties": {
              "patch": {
                "items": {
                  "properties": {
                    "path": {
                      "example": "/en"
                    },
                    "value": {
                      "example": "en-label"
                    }
                  }
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/EditSchema"
          }
        ]
      },
      "AliasesPatchSchema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ItemPatchBaseSchema"
          },
          {
            "properties": {
              "patch": {
                "items": {
                  "properties": {
                    "path": {
                      "example": "/en/0"
                    },
                    "value": {
                      "example": "en-alias1"
                    }
                  }
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/EditSchema"
          }
        ]
      },
      "SitelinksPatchSchema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ItemPatchBaseSchema"
          },
          {
            "properties": {
              "patch": {
                "items": {
                  "properties": {
                    "path": {
                      "example": "/afwiki/title"
                    },
                    "value": {
                      "example": "Douglas Adams"
                    }
                  }
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/EditSchema"
          }
        ]
      },
      "Item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "Q42"
          },
          "type": {
            "type": "string",
            "example": "item"
          },
          "labels": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Labels"
              },
              {
                "example": {
                  "en": "Douglas Adams",
                  "fr": "Douglas Adams"
                }
              }
            ]
          },
          "descriptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Descriptions"
              },
              {
                "example": {
                  "en": "English science fiction writer and humourist",
                  "fr": "écrivain de science-fiction et humoriste anglais"
                }
              }
            ]
          },
          "aliases": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Aliases"
              },
              {
                "example": {
                  "en": ["Douglas Noel Adams", "Douglas Noël Adams"],
                  "fr": ["Douglas Noel Adams"]
                }
              }
            ]
          },
          "sitelinks": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Sitelink"
            },
            "example": {
              "afwiki": {
                "title": "Douglas Adams",
                "badges": ["Q17437798"],
                "url": "https://af.wikipedia.org/wiki/Douglas_Adams"
              },
              "arwiki": {
                "title": "دوغلاس آدمز",
                "badges": [],
                "url": "https://ar.wikipedia.org/wiki/%D8%AF%D9%88%D8%BA%D9%84%D8%A7%D8%B3_%D8%A2%D8%AF%D9%85%D8%B2"
              }
            }
          },
          "statements": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Statement"
              }
            },
            "example": {
              "P92": [
                {
                  "id": "Q42$97B777F7-238B-465E-909B-64B0AB4B4DFD",
                  "rank": "normal",
                  "qualifiers": [],
                  "references": [],
                  "property": {
                    "id": "P92",
                    "data-type": "string"
                  },
                  "value": {
                    "type": "value",
                    "content": "I am a goat"
                  }
                }
              ]
            }
          }
        }
      },
      "Property": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "P31"
          },
          "type": {
            "type": "string",
            "example": "property"
          },
          "data-type": {
            "type": "string",
            "example": "wikibase-item"
          },
          "labels": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Labels"
              },
              {
                "example": {
                  "en": "Instance of",
                  "fr": "nature de l'élément"
                }
              }
            ]
          },
          "descriptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Descriptions"
              },
              {
                "example": {
                  "en": "that class of which this subject is a particular example and member; different from P279 (subclass of); for example: K2 is an instance of mountain; volcano is a subclass of mountain (and an instance of volcanic landform)",
                  "fr": "cet élément est un exemple spécifique de cette classe qui en précise la nature. Ne pas confondre avec la propriété P279 (sous-classe de)"
                }
              }
            ]
          },
          "aliases": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Aliases"
              },
              {
                "example": {
                  "en": ["is a", "is an"],
                  "fr": ["est un"]
                }
              }
            ]
          },
          "statements": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Statement"
              }
            },
            "example": {
              "P92": [
                {
                  "id": "P31$97B777F7-238B-465E-909B-64B0AB4B4DFD",
                  "rank": "normal",
                  "qualifiers": [],
                  "references": [],
                  "property": {
                    "id": "P92",
                    "data-type": "string"
                  },
                  "value": {
                    "type": "value",
                    "content": "I am a goat"
                  }
                }
              ]
            }
          }
        }
      },
      "Labels": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "example": {
          "en": "en-label",
          "fr": "fr-label"
        }
      },
      "Descriptions": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "example": {
          "en": "en-description",
          "fr": "fr-description"
        }
      },
      "Aliases": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "example": {
          "en": ["en-alias1", "en-alias2"],
          "fr": ["fr-alias1", "fr-alias2"]
        }
      },
      "Sitelink": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "badges": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "url": {
            "type": "string"
          }
        },
        "example": {
          "title": "Douglas Adams",
          "badges": [],
          "url": "https://de.wikipedia.org/wiki/Douglas_Adams"
        }
      },
      "Statement": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "description": "The globally unique identifier for this Statement",
                "type": "string",
                "readOnly": true,
                "example": "Q11$6403c562-401a-2b26-85cc-8327801145e1"
              },
              "rank": {
                "description": "The rank of the Statement",
                "type": "string",
                "enum": ["deprecated", "normal", "preferred"],
                "default": "normal"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Qualifier"
          },
          {
            "type": "object",
            "properties": {
              "qualifiers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Qualifier"
                },
                "default": []
              },
              "references": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Reference"
                },
                "default": []
              }
            }
          }
        ]
      },
      "Qualifier": {
        "type": "object",
        "properties": {
          "property": {
            "type": "object",
            "properties": {
              "id": {
                "description": "The ID of the Property",
                "type": "string",
                "example": "P92"
              },
              "data-type": {
                "description": "The data type of the Property",
                "type": "string",
                "readOnly": true,
                "nullable": true,
                "example": "string"
              }
            }
          },
          "value": {
            "type": "object",
            "properties": {
              "content": {
                "description": "The value, if type == \"value\", otherwise omitted",
                "example": "I am a goat"
              },
              "type": {
                "description": "The value type",
                "type": "string",
                "enum": ["value", "somevalue", "novalue"]
              }
            }
          }
        }
      },
      "Reference": {
        "type": "object",
        "properties": {
          "hash": {
            "description": "Hash of the Reference",
            "type": "string",
            "readOnly": true,
            "example": "455481eeac76e6a8af71a6b493c073d54788e7e9"
          },
          "parts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Qualifier"
            }
          }
        }
      }
    },
    "examples": {
      "InvalidValueExample": {
        "value": {
          "code": "invalid-value",
          "message": "Invalid value at '{json_pointer}'",
          "context": {
            "path": "{json_pointer}"
          }
        }
      },
      "MissingFieldExample": {
        "value": {
          "code": "missing-field",
          "message": "Required field missing",
          "context": {
            "path": "{json_pointer_to_parent}",
            "field": "{missing_field}"
          }
        }
      },
      "ValueTooLongExample": {
        "value": {
          "code": "value-too-long",
          "message": "The input value is too long",
          "context": {
            "path": "{json_pointer_to_element}",
            "limit": "{configured_limit}"
          }
        }
      },
      "InvalidQueryParameterExample": {
        "value": {
          "code": "invalid-query-parameter",
          "message": "Invalid query parameter: '{parameter}'",
          "context": {
            "parameter": "{parameter}"
          }
        }
      },
      "InvalidPathParameterExample": {
        "value": {
          "code": "invalid-path-parameter",
          "message": "Invalid path parameter: '{path_parameter}'",
          "context": {
            "parameter": "{path_parameter}"
          }
        }
      },
      "InvalidLanguageCodeWithPathContextExample": {
        "value": {
          "code": "invalid-language-code",
          "message": "Not a valid language code: {language_code}",
          "context": {
            "path": "{field}",
            "language": "{language_code}"
          }
        }
      },
      "InvalidSitelinkTypeExample": {
        "value": {
          "code": "invalid-sitelink-type",
          "message": "Not a valid sitelink type"
        }
      },
      "TitleDoesNotExistOnGivenSiteExample": {
        "value": {
          "code": "title-does-not-exist",
          "message": "Page with title {title} does not exist on the given site"
        }
      },
      "TitleDoesNotExistOnGivenSiteWithSiteContextExample": {
        "value": {
          "code": "title-does-not-exist",
          "message": "Page with title {title} does not exist on the given site",
          "context": {
            "site": "{site_id}"
          }
        }
      },
      "ItemProvidedIsNotAllowedAsSitelinkBadgeExample": {
        "value": {
          "code": "item-not-a-badge",
          "message": "Item ID provided as badge is not allowed as a badge: {item_id}",
          "context": {
            "badge": "{item_id}"
          }
        }
      },
      "ItemProvidedIsNotAllowedAsSitelinkBadgeWithSiteContextExample": {
        "value": {
          "code": "item-not-a-badge",
          "message": "Item ID provided as badge is not allowed as a badge: {item_id}",
          "context": {
            "badge": "{item_id}",
            "site": "{site_id}"
          }
        }
      },
      "StatementDataMissingFieldExample": {
        "value": {
          "code": "statement-data-missing-field",
          "message": "Mandatory field missing in the statement data: {field}",
          "context": {
            "path": "{field}"
          }
        }
      },
      "CannotModifyReadOnlyValue": {
        "value": {
          "code": "cannot-modify-read-only-value",
          "message": "The input value cannot be modified",
          "context": {
            "path": "{readonly_value_pointer}"
          }
        }
      },
      "InvalidOperationChangeStatementId": {
        "value": {
          "code": "invalid-operation-change-statement-id",
          "message": "Cannot change the ID of the existing statement"
        }
      },
      "InvalidOperationChangePropertyOfStatement": {
        "value": {
          "code": "invalid-operation-change-property-of-statement",
          "message": "Cannot change the property of the existing statement"
        }
      },
      "MissingJsonPatchFieldExample": {
        "value": {
          "code": "missing-json-patch-field",
          "message": "Missing '{field}' in JSON patch",
          "context": {
            "operation": {
              "op": "remove"
            },
            "field": "path"
          }
        }
      },
      "PatchTestFailedExample": {
        "value": {
          "code": "patch-test-failed",
          "message": "Test operation in the provided patch failed",
          "context": {
            "path": "{json_pointer_to_patch_operation}",
            "actual-value": "actual value"
          }
        }
      },
      "PatchTargetNotFoundExample": {
        "value": {
          "code": "patch-target-not-found",
          "message": "Target not found on resource",
          "context": {
            "path": "{json_pointer_to_target_in_patch}"
          }
        }
      },
      "PatchedStatementMissingFieldExample": {
        "value": {
          "code": "patched-statement-missing-field",
          "message": "Mandatory field missing in the patched statement: {field}",
          "context": {
            "path": "{field}"
          }
        }
      },
      "PatchedStatementInvalidFieldExample": {
        "value": {
          "code": "patched-statement-invalid-field",
          "message": "Invalid input for '{field}' in the patched statement",
          "context": {
            "path": "{field}",
            "value": "{value}"
          }
        }
      },
      "ItemNotFoundExample": {
        "value": {
          "code": "item-not-found",
          "message": "Could not find an item with the ID: {item_id}"
        }
      },
      "PropertyNotFoundExample": {
        "value": {
          "code": "property-not-found",
          "message": "Could not find a property with the ID: {property_id}"
        }
      },
      "RedirectedItemExample": {
        "value": {
          "code": "redirected-item",
          "message": "Item {item_id} has been redirected to {redirect_target_id}",
          "context": {
            "redirect-target": "{redirect_target_id}"
          }
        }
      },
      "SitelinkConflictExample": {
        "value": {
          "code": "sitelink-conflict",
          "message": "Sitelink is already being used on {other_item_id}",
          "context": {
            "matching-item-id": "{other_item_id}"
          }
        }
      },
      "SitelinkConflictWithSiteContextExample": {
        "value": {
          "code": "sitelink-conflict",
          "message": "Sitelink is already being used on {other_item_id}",
          "context": {
            "matching-item-id": "{other_item_id}",
            "site": "{site_id}"
          }
        }
      },
      "StatementNotFoundExample": {
        "value": {
          "code": "statement-not-found",
          "message": "Could not find a statement with the ID: {statement_id}"
        }
      },
      "SitelinkNotDefinedExample": {
        "value": {
          "code": "sitelink-not-defined",
          "message": "No sitelink found for the ID: {item_id} for the site {site_id}"
        }
      },
      "ItemLabelNotDefinedExample": {
        "value": {
          "code": "label-not-defined",
          "message": "Item with the ID {item_id} does not have a label in the language: {language_code}"
        }
      },
      "PropertyLabelNotDefinedExample": {
        "value": {
          "code": "label-not-defined",
          "message": "Property with the ID {property_id} does not have a label in the language: {language_code}"
        }
      },
      "ItemDescriptionNotDefinedExample": {
        "value": {
          "code": "description-not-defined",
          "message": "Item with the ID {item_id} does not have a description in the language: {language_code}"
        }
      },
      "PropertyDescriptionNotDefinedExample": {
        "value": {
          "code": "description-not-defined",
          "message": "Property with the ID {property_id} does not have a description in the language: {language_code}"
        }
      },
      "ItemAliasesNotDefinedExample": {
        "value": {
          "code": "aliases-not-defined",
          "message": "Item with the ID {item_id} does not have aliases in the language: {language_code}"
        }
      },
      "PropertyAliasesNotDefinedExample": {
        "value": {
          "code": "aliases-not-defined",
          "message": "Property with the ID {property_id} does not have aliases in the language: {language_code}"
        }
      },
      "PatchedInvalidSitelinkTypeExample": {
        "value": {
          "code": "patched-invalid-sitelink-type'",
          "message": "Not a valid sitelink type in patched sitelinks",
          "context": {
            "site-id": "{site_id}"
          }
        }
      },
      "PatchedSitelinkSiteIdInvalidExample": {
        "value": {
          "code": "patched-sitelink-invalid-site-id",
          "message": "Not a valid site ID {site_id} in patched sitelinks",
          "context": {
            "site-id": "{site_id}"
          }
        }
      },
      "PatchedSitelinkTitleMissingExample": {
        "value": {
          "code": "patched-sitelink-missing-title",
          "message": "No sitelink title provided for site {site_id} in patched sitelinks",
          "context": {
            "site-id": "{site_id}"
          }
        }
      },
      "PatchedSitelinkTitleEmptyExample": {
        "value": {
          "code": "patched-sitelink-title-empty",
          "message": "Sitelink cannot be empty for site {site_id} in patched sitelinks",
          "context": {
            "site-id": "{site_id}"
          }
        }
      },
      "PatchedSitelinkTitleInvalidExample": {
        "value": {
          "code": "patched-sitelink-invalid-title",
          "message": "Invalid sitelink title {title} for site {site_id} in patched sitelinks",
          "context": {
            "site-id": "{site_id}",
            "title": "{title}"
          }
        }
      },
      "PatchedSitelinkTitleNotExistExample": {
        "value": {
          "code": "patched-sitelink-title-does-not-exist",
          "message": "Incorrect patched sitelinks. Page with title {title} does not exist on site {site_id}",
          "context": {
            "site-id": "{site_id}",
            "title": "{title}"
          }
        }
      },
      "PatchedSitelinkBadgeInvalidExample": {
        "value": {
          "code": "patched-sitelink-invalid-badge",
          "message": "Incorrect patched sitelinks. Badge value {badge} for site {site_id} is not an item ID",
          "context": {
            "site-id": "{site_id}",
            "badge": "{badge}"
          }
        }
      },
      "PatchedSitelinkItemBadgeNotBadgeExample": {
        "value": {
          "code": "patched-sitelink-item-not-a-badge",
          "message": "Incorrect patched sitelinks. Item {badge} used for site {site_id} is not allowed as a badge",
          "context": {
            "site-id": "{site_id}",
            "badge": "{badge}"
          }
        }
      },
      "PatchedSiteLinkBadgeFormatExample": {
        "value": {
          "code": "patched-sitelink-badges-format",
          "message": "Badges for site {site_id} is not a list in patched sitelinks",
          "context": {
            "site-id": "{site_id}",
            "badge": "{badge}"
          }
        }
      },
      "PatchedSitelinkConflictExample": {
        "value": {
          "code": "patched-sitelink-conflict",
          "message": "Site {site_id} is already being used on {other_item_id}",
          "context": {
            "matching-item-id": "{other_item_id}",
            "site-id": "{site_id}"
          }
        }
      },
      "SitelinkUrlNotModifiableExample": {
        "value": {
          "code": "url-not-modifiable",
          "message": "URL of sitelink cannot be modified",
          "context": {
            "site-id": "{site_id}"
          }
        }
      },
      "PatchedLabelsInvalidLanguageCodeExample": {
        "value": {
          "code": "patched-labels-invalid-language-code",
          "message": "Not a valid language code '{language_code}' in changed labels",
          "context": {
            "language": "{language_code}"
          }
        }
      },
      "PatchedLabelEmptyExample": {
        "value": {
          "code": "patched-label-empty",
          "message": "Changed label for '{language_code}' cannot be empty",
          "context": {
            "language": "{language_code}"
          }
        }
      },
      "PatchedLabelTooLongExample": {
        "value": {
          "code": "patched-label-too-long",
          "message": "Changed label for '{language_code}' must not be more than {limit} characters long",
          "context": {
            "language": "{language_code}",
            "value": "{label}",
            "limit": "{limit}"
          }
        }
      },
      "PatchedLabelInvalidExample": {
        "value": {
          "code": "patched-label-invalid",
          "message": "Changed label for '{language_code}' is invalid: '{label}'",
          "context": {
            "language": "{language_code}",
            "value": "{label}"
          }
        }
      },
      "PatchedDescriptionsInvalidLanguageCodeExample": {
        "value": {
          "code": "patched-descriptions-invalid-language-code",
          "message": "Not a valid language code '{language_code}' in changed descriptions",
          "context": {
            "language": "{language_code}"
          }
        }
      },
      "PatchedDescriptionEmptyExample": {
        "value": {
          "code": "patched-description-empty",
          "message": "Changed description for '{language_code}' cannot be empty",
          "context": {
            "language": "{language_code}"
          }
        }
      },
      "PatchedDescriptionTooLongExample": {
        "value": {
          "code": "patched-description-too-long",
          "message": "Changed description for '{language_code}' must not be more than {limit} characters long",
          "context": {
            "language": "{language_code}",
            "value": "{description}",
            "limit": "{limit}"
          }
        }
      },
      "PatchedDescriptionInvalidExample": {
        "value": {
          "code": "patched-description-invalid",
          "message": "Changed description for '{language_code}' is invalid: '{label}'",
          "context": {
            "language": "{language_code}",
            "value": "{description}"
          }
        }
      },
      "PatchedItemLabelDescriptionSameValueExample": {
        "value": {
          "code": "patched-item-label-description-same-value",
          "message": "Label and description for language code '{language}' can not have the same value",
          "context": {
            "language": "{language_code}"
          }
        }
      },
      "PatchedItemInvalidOperationChangeItemIdExample": {
        "value": {
          "code": "patched-item-invalid-operation-change-item-id",
          "message": "Cannot change the ID of the existing item"
        }
      },
      "PatchedItemInvalidFieldExample": {
        "value": {
          "code": "patched-item-invalid-field",
          "message": "Invalid input for '{field}' in the patched item",
          "context": {
            "path": "{field}",
            "value": "{value}"
          }
        }
      },
      "PatchedItemInvalidUnexpectedExample": {
        "value": {
          "code": "patched-item-unexpected-field",
          "message": "The patched request body contains an unexpected field: '{field}'"
        }
      },
      "PatchedPropertyInvalidOperationChangePropertyIdExample": {
        "value": {
          "code": "patched-property-invalid-operation-change-property-id",
          "message": "Cannot change the ID of the existing property"
        }
      },
      "PatchedPropertyInvalidOperationChangePropertyDatatypeExample": {
        "value": {
          "code": "patched-property-invalid-operation-change-property-datatype",
          "message": "Cannot change the datatype of the existing property"
        }
      },
      "PatchedPropertyMissingFieldExample": {
        "value": {
          "code": "patched-property-missing-field",
          "message": "Mandatory field missing in the patched property: '{field}'",
          "context": {
            "path": "{field}"
          }
        }
      },
      "PatchedPropertyInvalidFieldExample": {
        "value": {
          "code": "patched-property-invalid-field",
          "message": "Invalid input for '{field}' in the patched property",
          "context": {
            "path": "{field}",
            "value": "{value}"
          }
        }
      },
      "PatchedPropertyInvalidUnexpectedExample": {
        "value": {
          "code": "patched-property-unexpected-field",
          "message": "The patched property contains an unexpected field: '{field}'"
        }
      },
      "StatementIdNotModifiableExample": {
        "value": {
          "code": "statement-id-not-modifiable",
          "message": "Statement IDs cannot be created or modified",
          "context": {
            "statement-id": "{statement_id}"
          }
        }
      },
      "PatchedStatementPropertyNotModifiableExample": {
        "value": {
          "code": "patched-statement-property-not-modifiable",
          "message": "Property of a statement cannot be modified",
          "context": {
            "statement-id": "{statement_id}",
            "statement-property-id": "{property_of_statement_as_persisted}"
          }
        }
      },
      "PatchedInvalidStatementGroupTypeExample": {
        "value": {
          "code": "patched-invalid-statement-group-type",
          "message": "Not a valid statement group",
          "context": {
            "path": "{property_id}"
          }
        }
      },
      "PatchedInvalidStatementTypeExample": {
        "value": {
          "code": "patched-invalid-statement-type",
          "message": "Not a valid statement type",
          "context": {
            "path": "{property_id}/{index}"
          }
        }
      },
      "PatchedStatementGroupPropertyIdMismatchExample": {
        "value": {
          "code": "patched-statement-group-property-id-mismatch",
          "message": "Statement's Property ID does not match the statement group key",
          "context": {
            "path": "{property_id_key}/{index}/property/id",
            "statement-group-property-id": "{property_id_key}",
            "statement-property-id": "{property_id_value}"
          }
        }
      },
      "PatchedPropertyLabelDescriptionSameValueExample": {
        "value": {
          "code": "patched-property-label-description-same-value",
          "message": "Label and description for language code '{language}' can not have the same value",
          "context": {
            "language": "{language_code}"
          }
        }
      },
      "PatchedItemLabelDescriptionDuplicateExample": {
        "value": {
          "code": "patched-item-label-description-duplicate",
          "message": "Item '{duplicate_id}' already has label '{label}' associated with language code '{language}', using the same description text",
          "context": {
            "language": "{language_code}",
            "label": "{label}",
            "description": "{description}",
            "matching-item-id": "{duplicate_id}"
          }
        }
      },
      "PatchedAliasesInvalidLanguageCodeExample": {
        "value": {
          "code": "patched-aliases-invalid-language-code",
          "message": "Not a valid language code '{language_code}' in changed aliases",
          "context": {
            "language": "{language_code}"
          }
        }
      },
      "PatchedAliasEmptyExample": {
        "value": {
          "code": "patched-alias-empty",
          "message": "Changed alias for '{language_code}' cannot be empty",
          "context": {
            "language": "{language_code}"
          }
        }
      },
      "PatchedAliasTooLongExample": {
        "value": {
          "code": "patched-alias-too-long",
          "message": "Changed alias for '{language_code}' must not be more than {limit} characters long",
          "context": {
            "language": "{language_code}",
            "value": "{alias}",
            "limit": "{limit}"
          }
        }
      },
      "PatchedAliasesInvalidFieldExample": {
        "value": {
          "code": "patched-aliases-invalid-field",
          "message": "Patched value for '{field}' is invalid",
          "context": {
            "path": "{path}",
            "value": "{value}"
          }
        }
      },
      "PatchedDuplicateAliasExample": {
        "value": {
          "code": "patched-duplicate-alias",
          "message": "Aliases in language '{language_code}' contain duplicate alias: '{alias}'",
          "context": {
            "alias": "{alias}",
            "language": "{language_code}"
          }
        }
      },
      "LabelDescriptionSameValueExample": {
        "value": {
          "code": "label-description-same-value",
          "message": "Label and description for language code '{language}' can not have the same value",
          "context": {
            "language": "{language}"
          }
        }
      },
      "ItemLabelDescriptionDuplicateExample": {
        "value": {
          "code": "item-label-description-duplicate",
          "message": "Item '{duplicate_item_id}' already has label '{label}' associated with language code '{language}', using the same description text",
          "context": {
            "language": "{language}",
            "label": "{label}",
            "description": "{description}",
            "matching-item-id": "{duplicate_item_id}"
          }
        }
      },
      "PropertyLabelDuplicateExample": {
        "value": {
          "code": "property-label-duplicate",
          "message": "Property '{duplicate_property_id}' already has label '{label}' associated with language code {language}",
          "context": {
            "language": "{language}",
            "label": "{label}",
            "matching-property-id": "{duplicate_property_id}"
          }
        }
      },
      "PatchedPropertyLabelDuplicateExample": {
        "value": {
          "code": "patched-property-label-duplicate",
          "message": "Property '{duplicate_property_id}' already has label '{label}' associated with language code {language}",
          "context": {
            "language": "{language}",
            "label": "{label}",
            "matching-property-id": "{duplicate_property_id}"
          }
        }
      },
      "DuplicateAliasExample": {
        "value": {
          "code": "duplicate-alias",
          "message": "Alias list contains a duplicate alias: '{alias}'",
          "context": {
            "alias": "{alias}"
          }
        }
      },
      "DuplicateAliasWithLanguageContextExample": {
        "value": {
          "code": "duplicate-alias",
          "message": "Alias list contains a duplicate alias: '{alias}'",
          "context": {
            "alias": "{alias}",
            "language": "{language_code}"
          }
        }
      },
      "ItemDataUnexpectedFieldExample": {
        "value": {
          "code": "unexpected-field",
          "message": "The request body contains an unexpected field",
          "context": {
            "field": "{field}"
          }
        }
      },
      "ItemStatementIdMismatchExample": {
        "value": {
          "code": "item-statement-id-mismatch",
          "message": "IDs of the item and the statement do not match",
          "context": {
            "item-id": "{item_id}",
            "statement-id": "{statement_id}"
          }
        }
      },
      "PropertyStatementIdMismatchExample": {
        "value": {
          "code": "property-statement-id-mismatch",
          "message": "IDs of the property and the statement do not match",
          "context": {
            "property-id": "{property_id}",
            "statement-id": "{statement_id}"
          }
        }
      },
      "ItemStatementIdExample": {
        "value": "Q42$F078E5B3-F9A8-480E-B7AC-D97778CBBEF9"
      },
      "PropertyStatementIdExample": {
        "value": "P31$9d042001-4a7e-2432-a7e1-233360062379"
      },
      "ItemStatementResponseExample": {
        "value": {
          "id": "Q42$F078E5B3-F9A8-480E-B7AC-D97778CBBEF9",
          "rank": "normal",
          "property": {
            "id": "P31",
            "data-type": "wikibase-item"
          },
          "value": {
            "type": "value",
            "content": "Q5"
          },
          "qualifiers": [],
          "references": []
        }
      },
      "PropertyStatementResponseExample": {
        "value": {
          "id": "P31$9d042001-4a7e-2432-a7e1-233360062379",
          "rank": "normal",
          "property": {
            "id": "P31",
            "data-type": "wikibase-item"
          },
          "value": {
            "type": "value",
            "content": "Q5"
          },
          "qualifiers": [],
          "references": []
        }
      },
      "StatementGroupPropertyIdMismatch": {
        "value": {
          "code": "statement-group-property-id-mismatch",
          "message": "Statement's Property ID does not match the statement group key",
          "context": {
            "path": "{property_id_key}/{index}/property/id",
            "statement-group-property-id": "{property_id_key}",
            "statement-property-id": "{property_id_value}"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "items",
      "description": "Wikibase Items",
      "externalDocs": {
        "description": "Wikibase Data Model - Items",
        "url": "https://www.mediawiki.org/wiki/Wikibase/DataModel#Items"
      }
    },
    {
      "name": "sitelinks",
      "description": "Wikibase Item Sitelinks",
      "externalDocs": {
        "description": "Wikibase Data Model - Sitelinks",
        "url": "https://www.mediawiki.org/wiki/Wikibase/DataModel#Sitelinks"
      }
    },
    {
      "name": "properties",
      "description": "Wikibase Properties",
      "externalDocs": {
        "description": "Wikibase Data Model - Properties",
        "url": "https://www.mediawiki.org/wiki/Wikibase/DataModel#Properties"
      }
    },
    {
      "name": "labels",
      "description": "Wikibase Labels",
      "externalDocs": {
        "description": "Wikibase Data Model - Terms",
        "url": "https://www.mediawiki.org/wiki/Wikibase/DataModel#EntityDescriptions_of_Items_and_Properties"
      }
    },
    {
      "name": "descriptions",
      "description": "Wikibase Descriptions",
      "externalDocs": {
        "description": "Wikibase Data Model - Terms",
        "url": "https://www.mediawiki.org/wiki/Wikibase/DataModel#EntityDescriptions_of_Items_and_Properties"
      }
    },
    {
      "name": "aliases",
      "description": "Wikibase Aliases",
      "externalDocs": {
        "description": "Wikibase Data Model - Terms",
        "url": "https://www.mediawiki.org/wiki/Wikibase/DataModel#EntityDescriptions_of_Items_and_Properties"
      }
    },
    {
      "name": "statements",
      "description": "Wikibase Statements",
      "externalDocs": {
        "description": "Wikibase Data Model - Statements",
        "url": "https://www.mediawiki.org/wiki/Wikibase/DataModel#Statements"
      }
    }
  ],
  "servers": [
    {
      "url": "https://www.wikidata.org/w/rest.php/wikibase/v0",
      "description": "Wikidata REST API"
    }
  ]
}
