{
  "openapi": "3.0.3",
  "info": {
    "title": "Wikibase REST API",
    "version": "0.1",
    "description": "OpenAPI definition of Wikibase REST API",
    "contact": {
      "name": "Wikimedia Deutschland - Wikibase Product Platform Team",
      "url": "https://phabricator.wikimedia.org/project/board/6692/"
    },
    "license": {
      "name": "GNU General Public License v2.0 or later",
      "url": "https://spdx.org/licenses/GPL-2.0-or-later.html"
    }
  },
  "paths": {
    "/entities/items/{item_id}": {
      "get": {
        "operationId": "getItem",
        "tags": [
          "items"
        ],
        "summary": "Retrieve a single Wikibase Item by ID",
        "parameters": [
          {
            "in": "path",
            "name": "item_id",
            "description": "The ID of the required Item",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Q[1-9]\\d{0,9}$"
            },
            "examples": {
              "item": {
                "summary": "Example of Item ID",
                "value": "Q42"
              }
            }
          },
          {
            "in": "query",
            "name": "_fields",
            "description": "Comma-separated list of fields to include in each response object.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "type",
                  "labels",
                  "descriptions",
                  "aliases",
                  "statements",
                  "sitelinks"
                ]
              }
            },
            "explode": false,
            "style": "form"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Make authenticated request using a provided bearer token",
            "schema": {
              "type": "string"
            },
            "example": "Bearer mF_9.B5f-4.1JqM"
          }
        ],
        "responses": {
          "200": {
            "description": "A single Wikibase Item",
            "headers": {
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date"
              },
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              },
              "X-Authenticated-User": {
                "schema": {
                  "type": "string"
                },
                "description": "Optional username of the user making the request"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "Q42"
                        },
                        "type": {
                          "type": "string",
                          "example": "item"
                        },
                        "labels": {
                          "allOf": [
                            {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "example": {
                                "en": "en-label",
                                "fr": "fr-label"
                              }
                            },
                            {
                              "example": {
                                "en": "Douglas Adams",
                                "fr": "Douglas Adams"
                              }
                            }
                          ]
                        },
                        "descriptions": {
                          "allOf": [
                            {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "example": {
                                "en": "en-description",
                                "fr": "fr-description"
                              }
                            },
                            {
                              "example": {
                                "en": "English science fiction writer and humourist",
                                "fr": "écrivain de science-fiction et humoriste anglais"
                              }
                            }
                          ]
                        },
                        "aliases": {
                          "allOf": [
                            {
                              "type": "object",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "example": {
                                "en": [
                                  "en-alias1",
                                  "en-alias2"
                                ],
                                "fr": [
                                  "fr-alias1",
                                  "fr-alias2"
                                ]
                              }
                            },
                            {
                              "example": {
                                "en": [
                                  "Douglas Noel Adams",
                                  "Douglas Noël Adams"
                                ],
                                "fr": [
                                  "Douglas Noel Adams"
                                ]
                              }
                            }
                          ]
                        },
                        "sitelinks": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string"
                              },
                              "badges": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "url": {
                                "type": "string"
                              }
                            },
                            "example": {
                              "title": "Douglas Adams",
                              "badges": [],
                              "url": "https://de.wikipedia.org/wiki/Douglas_Adams"
                            }
                          },
                          "example": {
                            "afwiki": {
                              "title": "Douglas Adams",
                              "badges": [
                                "Q17437798"
                              ],
                              "url": "https://af.wikipedia.org/wiki/Douglas_Adams"
                            },
                            "arwiki": {
                              "title": "دوغلاس آدمز",
                              "badges": [],
                              "url": "https://ar.wikipedia.org/wiki/%D8%AF%D9%88%D8%BA%D9%84%D8%A7%D8%B3_%D8%A2%D8%AF%D9%85%D8%B2"
                            }
                          }
                        },
                        "statements": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/Statement"
                            }
                          }
                        }
                      }
                    },
                    {
                      "required": [
                        "id",
                        "type",
                        "labels",
                        "descriptions",
                        "aliases",
                        "statements",
                        "sitelinks"
                      ],
                      "properties": {
                        "sitelinks": {
                          "additionalProperties": {
                            "required": [
                              "title",
                              "badges",
                              "url"
                            ]
                          }
                        },
                        "statements": {
                          "additionalProperties": {
                            "items": {
                              "allOf": [
                                {
                                  "required": [
                                    "property",
                                    "value"
                                  ],
                                  "properties": {
                                    "property": {
                                      "required": [
                                        "id",
                                        "data-type"
                                      ]
                                    },
                                    "value": {
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "id",
                                    "rank",
                                    "qualifiers",
                                    "references"
                                  ],
                                  "properties": {
                                    "qualifiers": {
                                      "items": {
                                        "required": [
                                          "property",
                                          "value"
                                        ],
                                        "properties": {
                                          "property": {
                                            "required": [
                                              "id",
                                              "data-type"
                                            ]
                                          },
                                          "value": {
                                            "type": "object",
                                            "required": [
                                              "type"
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "references": {
                                      "items": {
                                        "required": [
                                          "hash",
                                          "parts"
                                        ],
                                        "properties": {
                                          "parts": {
                                            "items": {
                                              "required": [
                                                "property",
                                                "value"
                                              ],
                                              "properties": {
                                                "property": {
                                                  "required": [
                                                    "id",
                                                    "data-type"
                                                  ]
                                                },
                                                "value": {
                                                  "type": "object",
                                                  "required": [
                                                    "type"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "304": {
            "description": "The specified resource has not been modified since last provided revision number or date",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              }
            }
          },
          "308": {
            "description": "The specified resource has permanently moved to the indicated location",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "The URL to which the requested resource has been moved"
              }
            }
          },
          "400": {
            "description": "The request cannot be processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid-item-id": {
                    "value": {
                      "code": "invalid-item-id",
                      "message": "Not a valid item ID: {item_id}"
                    }
                  },
                  "invalid-field": {
                    "value": {
                      "code": "invalid-field",
                      "message": "Not a valid field: {field}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "404": {
            "description": "The specified Item was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "item-not-found": {
                    "value": {
                      "code": "item-not-found",
                      "message": "Could not find an item with the ID: {item_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "412": {
            "description": "The condition defined by a conditional request header is not fulfilled"
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "unexpected-error",
                  "message": "Unexpected Error"
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          }
        }
      }
    },
    "/entities/items/{item_id}/sitelinks": {
      "get": {
        "operationId": "getSitelinks",
        "tags": [
          "sitelinks"
        ],
        "summary": "Retrieve an Item's sitelinks",
        "parameters": [
          {
            "in": "path",
            "name": "item_id",
            "description": "The ID of the required Item",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Q[1-9]\\d{0,9}$"
            },
            "examples": {
              "item": {
                "summary": "Example of Item ID",
                "value": "Q42"
              }
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Make authenticated request using a provided bearer token",
            "schema": {
              "type": "string"
            },
            "example": "Bearer mF_9.B5f-4.1JqM"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of sitelinks by item id",
            "headers": {
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date"
              },
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              },
              "X-Authenticated-User": {
                "schema": {
                  "type": "string"
                },
                "description": "Optional username of the user making the request"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string"
                      },
                      "badges": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "example": {
                      "title": "Douglas Adams",
                      "badges": [],
                      "url": "https://de.wikipedia.org/wiki/Douglas_Adams"
                    }
                  },
                  "example": {
                    "afwiki": {
                      "title": "Douglas Adams",
                      "badges": [
                        "Q17437798"
                      ],
                      "url": "https://af.wikipedia.org/wiki/Douglas_Adams"
                    },
                    "arwiki": {
                      "title": "دوغلاس آدمز",
                      "badges": [],
                      "url": "https://ar.wikipedia.org/wiki/%D8%AF%D9%88%D8%BA%D9%84%D8%A7%D8%B3_%D8%A2%D8%AF%D9%85%D8%B2"
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "The specified resource has not been modified since last provided revision number or date",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              }
            }
          },
          "308": {
            "description": "The specified resource has permanently moved to the indicated location",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "The URL to which the requested resource has been moved"
              }
            }
          },
          "400": {
            "description": "The request cannot be processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid-item-id": {
                    "value": {
                      "code": "invalid-item-id",
                      "message": "Not a valid item ID: {item_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "404": {
            "description": "The specified Item was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "item-not-found": {
                    "value": {
                      "code": "item-not-found",
                      "message": "Could not find an item with the ID: {item_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "412": {
            "description": "The condition defined by a conditional request header is not fulfilled"
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "unexpected-error",
                  "message": "Unexpected Error"
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          }
        }
      }
    },
    "/entities/items/{item_id}/sitelinks/{site_id}": {
      "get": {
        "operationId": "getSitelink",
        "tags": [
          "sitelinks"
        ],
        "summary": "Retrieve an Item's sitelink",
        "parameters": [
          {
            "in": "path",
            "name": "item_id",
            "description": "The ID of the required Item",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Q[1-9]\\d{0,9}$"
            },
            "examples": {
              "item": {
                "summary": "Example of Item ID",
                "value": "Q42"
              }
            }
          },
          {
            "in": "path",
            "name": "site_id",
            "description": "The ID of the required Site",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "item": {
                "summary": "Example of Site ID",
                "value": "dewiki"
              }
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Make authenticated request using a provided bearer token",
            "schema": {
              "type": "string"
            },
            "example": "Bearer mF_9.B5f-4.1JqM"
          }
        ],
        "responses": {
          "200": {
            "description": "A sitelink by item id",
            "headers": {
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date"
              },
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              },
              "X-Authenticated-User": {
                "schema": {
                  "type": "string"
                },
                "description": "Optional username of the user making the request"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "badges": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "title": "Douglas Adams",
                    "badges": [],
                    "url": "https://de.wikipedia.org/wiki/Douglas_Adams"
                  }
                }
              }
            }
          },
          "304": {
            "description": "The specified resource has not been modified since last provided revision number or date",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              }
            }
          },
          "308": {
            "description": "The specified resource has permanently moved to the indicated location",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "The URL to which the requested resource has been moved"
              }
            }
          },
          "400": {
            "description": "The request cannot be processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid-item-id": {
                    "value": {
                      "code": "invalid-item-id",
                      "message": "Not a valid item ID: {item_id}"
                    }
                  },
                  "invalid-site-id": {
                    "value": {
                      "code": "invalid-site-id",
                      "message": "Not a valid site ID: {site_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "item-not-found": {
                    "value": {
                      "code": "item-not-found",
                      "message": "Could not find an item with the ID: {item_id}"
                    }
                  },
                  "sitelink-not-defined": {
                    "value": {
                      "code": "sitelink-not-defined",
                      "message": "No sitelink found for the ID: {item_id} for the site {site_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "412": {
            "description": "The condition defined by a conditional request header is not fulfilled"
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "unexpected-error",
                  "message": "Unexpected Error"
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          }
        }
      }
    },
    "/entities/properties/{property_id}": {
      "get": {
        "operationId": "getProperty",
        "tags": [
          "properties"
        ],
        "summary": "Retrieve a single Wikibase Property by ID",
        "parameters": [
          {
            "in": "path",
            "name": "property_id",
            "description": "The ID of the required Property",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^P[1-9]\\d{0,9}$"
            },
            "examples": {
              "item": {
                "summary": "Example of Property ID",
                "value": "P31"
              }
            }
          },
          {
            "in": "query",
            "name": "_fields",
            "description": "Comma-separated list of fields to include in each response object.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "type",
                  "data-type",
                  "labels",
                  "descriptions",
                  "aliases",
                  "statements"
                ]
              }
            },
            "explode": false,
            "style": "form"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Make authenticated request using a provided bearer token",
            "schema": {
              "type": "string"
            },
            "example": "Bearer mF_9.B5f-4.1JqM"
          }
        ],
        "responses": {
          "200": {
            "description": "A single Wikibase Property",
            "headers": {
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date"
              },
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              },
              "X-Authenticated-User": {
                "schema": {
                  "type": "string"
                },
                "description": "Optional username of the user making the request"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "P31"
                        },
                        "type": {
                          "type": "string",
                          "example": "property"
                        },
                        "data-type": {
                          "type": "string",
                          "example": "wikibase-item"
                        },
                        "labels": {
                          "allOf": [
                            {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "example": {
                                "en": "en-label",
                                "fr": "fr-label"
                              }
                            },
                            {
                              "example": {
                                "en": "Instance of",
                                "fr": "nature de l'élément"
                              }
                            }
                          ]
                        },
                        "descriptions": {
                          "allOf": [
                            {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "example": {
                                "en": "en-description",
                                "fr": "fr-description"
                              }
                            },
                            {
                              "example": {
                                "en": "that class of which this subject is a particular example and member; different from P279 (subclass of); for example: K2 is an instance of mountain; volcano is a subclass of mountain (and an instance of volcanic landform)",
                                "fr": "cet élément est un exemple spécifique de cette classe qui en précise la nature. Ne pas confondre avec la propriété P279 (sous-classe de)"
                              }
                            }
                          ]
                        },
                        "aliases": {
                          "allOf": [
                            {
                              "type": "object",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "example": {
                                "en": [
                                  "en-alias1",
                                  "en-alias2"
                                ],
                                "fr": [
                                  "fr-alias1",
                                  "fr-alias2"
                                ]
                              }
                            },
                            {
                              "example": {
                                "en": [
                                  "is a",
                                  "is an"
                                ],
                                "fr": [
                                  "est un"
                                ]
                              }
                            }
                          ]
                        },
                        "statements": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/Statement"
                            }
                          }
                        }
                      }
                    },
                    {
                      "required": [
                        "id",
                        "type",
                        "data-type",
                        "labels",
                        "descriptions",
                        "aliases",
                        "statements"
                      ],
                      "properties": {
                        "statements": {
                          "additionalProperties": {
                            "items": {
                              "allOf": [
                                {
                                  "required": [
                                    "property",
                                    "value"
                                  ],
                                  "properties": {
                                    "property": {
                                      "required": [
                                        "id",
                                        "data-type"
                                      ]
                                    },
                                    "value": {
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "required": [
                                    "id",
                                    "rank",
                                    "qualifiers",
                                    "references"
                                  ],
                                  "properties": {
                                    "qualifiers": {
                                      "items": {
                                        "required": [
                                          "property",
                                          "value"
                                        ],
                                        "properties": {
                                          "property": {
                                            "required": [
                                              "id",
                                              "data-type"
                                            ]
                                          },
                                          "value": {
                                            "type": "object",
                                            "required": [
                                              "type"
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "references": {
                                      "items": {
                                        "required": [
                                          "hash",
                                          "parts"
                                        ],
                                        "properties": {
                                          "parts": {
                                            "items": {
                                              "required": [
                                                "property",
                                                "value"
                                              ],
                                              "properties": {
                                                "property": {
                                                  "required": [
                                                    "id",
                                                    "data-type"
                                                  ]
                                                },
                                                "value": {
                                                  "type": "object",
                                                  "required": [
                                                    "type"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The request cannot be processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid-property-id": {
                    "value": {
                      "code": "invalid-property-id",
                      "message": "Not a valid property ID: {property_id}",
                      "context": {
                        "property-id": "{property_id}"
                      }
                    }
                  },
                  "invalid-field": {
                    "value": {
                      "code": "invalid-field",
                      "message": "Not a valid field: {field}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "404": {
            "description": "The specified property was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "property-not-found": {
                    "value": {
                      "code": "property-not-found",
                      "message": "Could not find a property with the ID: {property_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "unexpected-error",
                  "message": "Unexpected Error"
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          }
        }
      }
    },
    "/entities/items/{item_id}/descriptions": {
      "get": {
        "operationId": "getItemDescriptions",
        "tags": [
          "descriptions"
        ],
        "summary": "Retrieve an Item's descriptions",
        "parameters": [
          {
            "in": "path",
            "name": "item_id",
            "description": "The ID of the required Item",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Q[1-9]\\d{0,9}$"
            },
            "examples": {
              "item": {
                "summary": "Example of Item ID",
                "value": "Q42"
              }
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Make authenticated request using a provided bearer token",
            "schema": {
              "type": "string"
            },
            "example": "Bearer mF_9.B5f-4.1JqM"
          }
        ],
        "responses": {
          "200": {
            "description": "Item's descriptions by language",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              },
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date"
              },
              "X-Authenticated-User": {
                "schema": {
                  "type": "string"
                },
                "description": "Optional username of the user making the request"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "example": {
                    "en": "en-description",
                    "fr": "fr-description"
                  }
                }
              }
            }
          },
          "304": {
            "description": "The specified resource has not been modified since last provided revision number or date",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              }
            }
          },
          "308": {
            "description": "The specified resource has permanently moved to the indicated location",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "The URL to which the requested resource has been moved"
              }
            }
          },
          "400": {
            "description": "The request cannot be processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid-item-id": {
                    "value": {
                      "code": "invalid-item-id",
                      "message": "Not a valid item ID: {item_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "404": {
            "description": "The specified Item was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "item-not-found": {
                    "value": {
                      "code": "item-not-found",
                      "message": "Could not find an item with the ID: {item_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "412": {
            "description": "The condition defined by a conditional request header is not fulfilled"
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "unexpected-error",
                  "message": "Unexpected Error"
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          }
        }
      }
    },
    "/entities/properties/{property_id}/descriptions": {
      "get": {
        "operationId": "getPropertyDescriptions",
        "tags": [
          "descriptions"
        ],
        "summary": "Retrieve a Property's descriptions",
        "parameters": [
          {
            "in": "path",
            "name": "property_id",
            "description": "The ID of the required Property",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^P[1-9]\\d{0,9}$"
            },
            "examples": {
              "item": {
                "summary": "Example of Property ID",
                "value": "P31"
              }
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Make authenticated request using a provided bearer token",
            "schema": {
              "type": "string"
            },
            "example": "Bearer mF_9.B5f-4.1JqM"
          }
        ],
        "responses": {
          "200": {
            "description": "Property's descriptions by language",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              },
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date"
              },
              "X-Authenticated-User": {
                "schema": {
                  "type": "string"
                },
                "description": "Optional username of the user making the request"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "example": {
                    "en": "en-description",
                    "fr": "fr-description"
                  }
                }
              }
            }
          },
          "304": {
            "description": "The specified resource has not been modified since last provided revision number or date",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              }
            }
          },
          "400": {
            "description": "The request cannot be processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid-property-id": {
                    "value": {
                      "code": "invalid-property-id",
                      "message": "Not a valid property ID: {property_id}",
                      "context": {
                        "property-id": "{property_id}"
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "404": {
            "description": "The specified property was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "property-not-found": {
                    "value": {
                      "code": "property-not-found",
                      "message": "Could not find a property with the ID: {property_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "412": {
            "description": "The condition defined by a conditional request header is not fulfilled"
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "unexpected-error",
                  "message": "Unexpected Error"
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          }
        }
      }
    },
    "/entities/items/{item_id}/descriptions/{language_code}": {
      "get": {
        "operationId": "getItemDescription",
        "tags": [
          "descriptions"
        ],
        "summary": "Retrieve an Item's description in a specific language",
        "parameters": [
          {
            "in": "path",
            "name": "item_id",
            "description": "The ID of the required Item",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Q[1-9]\\d{0,9}$"
            },
            "examples": {
              "item": {
                "summary": "Example of Item ID",
                "value": "Q42"
              }
            }
          },
          {
            "in": "path",
            "name": "language_code",
            "description": "The requested resource language",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-z]{2}[a-z0-9-]*$"
            },
            "example": "en"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Make authenticated request using a provided bearer token",
            "schema": {
              "type": "string"
            },
            "example": "Bearer mF_9.B5f-4.1JqM"
          }
        ],
        "responses": {
          "200": {
            "description": "A description in a specific language",
            "headers": {
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date"
              },
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              },
              "X-Authenticated-User": {
                "schema": {
                  "type": "string"
                },
                "description": "Optional username of the user making the request"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "an example description"
                }
              }
            }
          },
          "304": {
            "description": "The specified resource has not been modified since last provided revision number or date",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              }
            }
          },
          "308": {
            "description": "The specified resource has permanently moved to the indicated location",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "The URL to which the requested resource has been moved"
              }
            }
          },
          "400": {
            "description": "The request cannot be processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid-item-id": {
                    "value": {
                      "code": "invalid-item-id",
                      "message": "Not a valid item ID: {item_id}"
                    }
                  },
                  "invalid-language-code": {
                    "value": {
                      "code": "invalid-language-code",
                      "message": "Not a valid language code: {language_code}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "item-not-found": {
                    "value": {
                      "code": "item-not-found",
                      "message": "Could not find an item with the ID: {item_id}"
                    }
                  },
                  "description-not-defined": {
                    "value": {
                      "code": "description-not-defined",
                      "message": "Item with the ID {item_id} does not have a description in the language: {language_code}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "412": {
            "description": "The condition defined by a conditional request header is not fulfilled"
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "unexpected-error",
                  "message": "Unexpected Error"
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          }
        }
      }
    },
    "/entities/properties/{property_id}/descriptions/{language_code}": {
      "get": {
        "operationId": "getPropertyDescription",
        "tags": [
          "descriptions"
        ],
        "summary": "Retrieve a Property's description in a specific language",
        "parameters": [
          {
            "in": "path",
            "name": "property_id",
            "description": "The ID of the required Property",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^P[1-9]\\d{0,9}$"
            },
            "examples": {
              "item": {
                "summary": "Example of Property ID",
                "value": "P31"
              }
            }
          },
          {
            "in": "path",
            "name": "language_code",
            "description": "The requested resource language",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-z]{2}[a-z0-9-]*$"
            },
            "example": "en"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Make authenticated request using a provided bearer token",
            "schema": {
              "type": "string"
            },
            "example": "Bearer mF_9.B5f-4.1JqM"
          }
        ],
        "responses": {
          "200": {
            "description": "A description in a specific language",
            "headers": {
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date"
              },
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              },
              "X-Authenticated-User": {
                "schema": {
                  "type": "string"
                },
                "description": "Optional username of the user making the request"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "an example description"
                }
              }
            }
          },
          "304": {
            "description": "The specified resource has not been modified since last provided revision number or date",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              }
            }
          },
          "400": {
            "description": "The request cannot be processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid-property-id": {
                    "value": {
                      "code": "invalid-property-id",
                      "message": "Not a valid property ID: {property_id}",
                      "context": {
                        "property-id": "{property_id}"
                      }
                    }
                  },
                  "invalid-language-code": {
                    "value": {
                      "code": "invalid-language-code",
                      "message": "Not a valid language code: {language_code}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "property-not-found": {
                    "value": {
                      "code": "property-not-found",
                      "message": "Could not find a property with the ID: {property_id}"
                    }
                  },
                  "description-not-defined": {
                    "value": {
                      "code": "description-not-defined",
                      "message": "Property with the ID {property_id} does not have a description in the language: {language_code}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "412": {
            "description": "The condition defined by a conditional request header is not fulfilled"
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "unexpected-error",
                  "message": "Unexpected Error"
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          }
        }
      }
    },
    "/entities/items/{item_id}/statements": {
      "get": {
        "operationId": "getItemStatements",
        "tags": [
          "statements"
        ],
        "summary": "Retrieve Statements from an Item",
        "parameters": [
          {
            "in": "path",
            "name": "item_id",
            "description": "The ID of the required Item",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Q[1-9]\\d{0,9}$"
            },
            "examples": {
              "item": {
                "summary": "Example of Item ID",
                "value": "Q42"
              }
            }
          },
          {
            "in": "query",
            "name": "property",
            "description": "Single property ID to filter statements by.",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^P[1-9]\\d{0,9}$"
            },
            "style": "form",
            "example": "P31"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Make authenticated request using a provided bearer token",
            "schema": {
              "type": "string"
            },
            "example": "Bearer mF_9.B5f-4.1JqM"
          }
        ],
        "responses": {
          "200": {
            "description": "The statements of an Item",
            "headers": {
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date"
              },
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              },
              "X-Authenticated-User": {
                "schema": {
                  "type": "string"
                },
                "description": "Optional username of the user making the request"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Statement"
                    }
                  }
                },
                "example": {
                  "P370": [
                    {
                      "id": "Q11$6403c562-401a-2b26-85cc-8327801145e1",
                      "rank": "normal",
                      "property": {
                        "id": "P370",
                        "data-type": "string"
                      },
                      "value": {
                        "content": "I am a goat",
                        "type": "value"
                      },
                      "qualifiers": [],
                      "references": []
                    }
                  ],
                  "P92": [
                    {
                      "id": "Q11$6403c562-401a-2b26-85cc-8327801145e1",
                      "rank": "normal",
                      "property": {
                        "id": "P92",
                        "data-type": "string"
                      },
                      "value": {
                        "content": "I am a goat",
                        "type": "value"
                      },
                      "qualifiers": [],
                      "references": []
                    }
                  ]
                }
              }
            }
          },
          "304": {
            "description": "The specified resource has not been modified since last provided revision number or date",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              }
            }
          },
          "308": {
            "description": "The specified resource has permanently moved to the indicated location",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "The URL to which the requested resource has been moved"
              }
            }
          },
          "400": {
            "description": "The request cannot be processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid-item-id": {
                    "value": {
                      "code": "invalid-item-id",
                      "message": "Not a valid item ID: {item_id}"
                    }
                  },
                  "invalid-property-id": {
                    "value": {
                      "code": "invalid-property-id",
                      "message": "Not a valid property ID: {property_id}",
                      "context": {
                        "property-id": "{property_id}"
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "404": {
            "description": "The specified Item was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "item-not-found": {
                    "value": {
                      "code": "item-not-found",
                      "message": "Could not find an item with the ID: {item_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "412": {
            "description": "The condition defined by a conditional request header is not fulfilled"
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "unexpected-error",
                  "message": "Unexpected Error"
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          }
        }
      }
    },
    "/entities/items/{item_id}/statements/{statement_id}": {
      "get": {
        "operationId": "getItemStatement",
        "tags": [
          "statements"
        ],
        "summary": "Retrieve a single Statement from an Item",
        "description": "This endpoint is also accessible through `/statements/{statement_id}`",
        "parameters": [
          {
            "in": "path",
            "name": "item_id",
            "description": "The ID of the required Item",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Q[1-9]\\d{0,9}$"
            },
            "examples": {
              "item": {
                "summary": "Example of Item ID",
                "value": "Q42"
              }
            }
          },
          {
            "in": "path",
            "name": "statement_id",
            "description": "The ID of the required Item Statement",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^(Q|q)[1-9]\\d{0,9}\\$.+$"
            },
            "example": "Q42$F078E5B3-F9A8-480E-B7AC-D97778CBBEF9"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Make authenticated request using a provided bearer token",
            "schema": {
              "type": "string"
            },
            "example": "Bearer mF_9.B5f-4.1JqM"
          }
        ],
        "responses": {
          "200": {
            "description": "A single Wikibase Statement. Please note that the value of the `ETag` header field refers to the Item's revision ID.",
            "headers": {
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date"
              },
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              },
              "X-Authenticated-User": {
                "schema": {
                  "type": "string"
                },
                "description": "Optional username of the user making the request"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Statement"
                },
                "example": {
                  "id": "Q42$F078E5B3-F9A8-480E-B7AC-D97778CBBEF9",
                  "rank": "normal",
                  "property": {
                    "id": "P31",
                    "data-type": "wikibase-item"
                  },
                  "value": {
                    "type": "value",
                    "content": "Q5"
                  },
                  "qualifiers": [],
                  "references": []
                }
              }
            }
          },
          "304": {
            "description": "The specified resource has not been modified since last provided revision number or date",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              }
            }
          },
          "400": {
            "description": "The request cannot be processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid-item-id": {
                    "value": {
                      "code": "invalid-item-id",
                      "message": "Not a valid item ID: {item_id}"
                    }
                  },
                  "invalid-statement-id": {
                    "value": {
                      "code": "invalid-statement-id",
                      "message": "Not a valid statement ID: {statement_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "item-not-found": {
                    "value": {
                      "code": "item-not-found",
                      "message": "Could not find an item with the ID: {item_id}"
                    }
                  },
                  "statement-not-found": {
                    "value": {
                      "code": "statement-not-found",
                      "message": "Could not find a statement with the ID: {statement_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "412": {
            "description": "The condition defined by a conditional request header is not fulfilled"
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "unexpected-error",
                  "message": "Unexpected Error"
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          }
        }
      }
    },
    "/entities/items/{item_id}/labels": {
      "get": {
        "operationId": "getItemLabels",
        "tags": [
          "labels"
        ],
        "summary": "Retrieve an Item's labels",
        "parameters": [
          {
            "in": "path",
            "name": "item_id",
            "description": "The ID of the required Item",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Q[1-9]\\d{0,9}$"
            },
            "examples": {
              "item": {
                "summary": "Example of Item ID",
                "value": "Q42"
              }
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Make authenticated request using a provided bearer token",
            "schema": {
              "type": "string"
            },
            "example": "Bearer mF_9.B5f-4.1JqM"
          }
        ],
        "responses": {
          "200": {
            "description": "Item's labels by language",
            "headers": {
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date"
              },
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              },
              "X-Authenticated-User": {
                "schema": {
                  "type": "string"
                },
                "description": "Optional username of the user making the request"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "example": {
                    "en": "en-label",
                    "fr": "fr-label"
                  }
                }
              }
            }
          },
          "304": {
            "description": "The specified resource has not been modified since last provided revision number or date",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              }
            }
          },
          "308": {
            "description": "The specified resource has permanently moved to the indicated location",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "The URL to which the requested resource has been moved"
              }
            }
          },
          "400": {
            "description": "The request cannot be processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid-item-id": {
                    "value": {
                      "code": "invalid-item-id",
                      "message": "Not a valid item ID: {item_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "404": {
            "description": "The specified Item was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "item-not-found": {
                    "value": {
                      "code": "item-not-found",
                      "message": "Could not find an item with the ID: {item_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "412": {
            "description": "The condition defined by a conditional request header is not fulfilled"
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "unexpected-error",
                  "message": "Unexpected Error"
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          }
        }
      }
    },
    "/entities/properties/{property_id}/labels": {
      "get": {
        "operationId": "getPropertyLabels",
        "tags": [
          "labels"
        ],
        "summary": "Retrieve a Property's labels",
        "parameters": [
          {
            "in": "path",
            "name": "property_id",
            "description": "The ID of the required Property",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^P[1-9]\\d{0,9}$"
            },
            "examples": {
              "item": {
                "summary": "Example of Property ID",
                "value": "P31"
              }
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Make authenticated request using a provided bearer token",
            "schema": {
              "type": "string"
            },
            "example": "Bearer mF_9.B5f-4.1JqM"
          }
        ],
        "responses": {
          "200": {
            "description": "Property's labels by language",
            "headers": {
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date"
              },
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              },
              "X-Authenticated-User": {
                "schema": {
                  "type": "string"
                },
                "description": "Optional username of the user making the request"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "example": {
                    "en": "en-label",
                    "fr": "fr-label"
                  }
                }
              }
            }
          },
          "304": {
            "description": "The specified resource has not been modified since last provided revision number or date",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              }
            }
          },
          "400": {
            "description": "The request cannot be processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid-property-id": {
                    "value": {
                      "code": "invalid-property-id",
                      "message": "Not a valid property ID: {property_id}",
                      "context": {
                        "property-id": "{property_id}"
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "404": {
            "description": "The specified property was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "property-not-found": {
                    "value": {
                      "code": "property-not-found",
                      "message": "Could not find a property with the ID: {property_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "412": {
            "description": "The condition defined by a conditional request header is not fulfilled"
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "unexpected-error",
                  "message": "Unexpected Error"
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          }
        }
      }
    },
    "/entities/items/{item_id}/labels/{language_code}": {
      "get": {
        "operationId": "getItemLabel",
        "tags": [
          "labels"
        ],
        "summary": "Retrieve an Item's label in a specific language",
        "parameters": [
          {
            "in": "path",
            "name": "item_id",
            "description": "The ID of the required Item",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Q[1-9]\\d{0,9}$"
            },
            "examples": {
              "item": {
                "summary": "Example of Item ID",
                "value": "Q42"
              }
            }
          },
          {
            "in": "path",
            "name": "language_code",
            "description": "The requested resource language",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-z]{2}[a-z0-9-]*$"
            },
            "example": "en"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Make authenticated request using a provided bearer token",
            "schema": {
              "type": "string"
            },
            "example": "Bearer mF_9.B5f-4.1JqM"
          }
        ],
        "responses": {
          "200": {
            "description": "A label in a specific language",
            "headers": {
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date"
              },
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              },
              "X-Authenticated-User": {
                "schema": {
                  "type": "string"
                },
                "description": "Optional username of the user making the request"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "an example label"
                }
              }
            }
          },
          "304": {
            "description": "The specified resource has not been modified since last provided revision number or date",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              }
            }
          },
          "308": {
            "description": "The specified resource has permanently moved to the indicated location",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "The URL to which the requested resource has been moved"
              }
            }
          },
          "400": {
            "description": "The request cannot be processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid-item-id": {
                    "value": {
                      "code": "invalid-item-id",
                      "message": "Not a valid item ID: {item_id}"
                    }
                  },
                  "invalid-language-code": {
                    "value": {
                      "code": "invalid-language-code",
                      "message": "Not a valid language code: {language_code}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "item-not-found": {
                    "value": {
                      "code": "item-not-found",
                      "message": "Could not find an item with the ID: {item_id}"
                    }
                  },
                  "label-not-defined": {
                    "value": {
                      "code": "label-not-defined",
                      "message": "Item with the ID {item_id} does not have a label in the language: {language_code}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "412": {
            "description": "The condition defined by a conditional request header is not fulfilled"
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "unexpected-error",
                  "message": "Unexpected Error"
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          }
        }
      }
    },
    "/entities/properties/{property_id}/labels/{language_code}": {
      "get": {
        "operationId": "getPropertyLabel",
        "tags": [
          "labels"
        ],
        "summary": "Retrieve a Property's label in a specific language",
        "parameters": [
          {
            "in": "path",
            "name": "property_id",
            "description": "The ID of the required Property",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^P[1-9]\\d{0,9}$"
            },
            "examples": {
              "item": {
                "summary": "Example of Property ID",
                "value": "P31"
              }
            }
          },
          {
            "in": "path",
            "name": "language_code",
            "description": "The requested resource language",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-z]{2}[a-z0-9-]*$"
            },
            "example": "en"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Make authenticated request using a provided bearer token",
            "schema": {
              "type": "string"
            },
            "example": "Bearer mF_9.B5f-4.1JqM"
          }
        ],
        "responses": {
          "200": {
            "description": "A label in a specific language",
            "headers": {
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date"
              },
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              },
              "X-Authenticated-User": {
                "schema": {
                  "type": "string"
                },
                "description": "Optional username of the user making the request"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "an example label"
                }
              }
            }
          },
          "304": {
            "description": "The specified resource has not been modified since last provided revision number or date",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              }
            }
          },
          "400": {
            "description": "The request cannot be processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid-property-id": {
                    "value": {
                      "code": "invalid-property-id",
                      "message": "Not a valid property ID: {property_id}",
                      "context": {
                        "property-id": "{property_id}"
                      }
                    }
                  },
                  "invalid-language-code": {
                    "value": {
                      "code": "invalid-language-code",
                      "message": "Not a valid language code: {language_code}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "property-not-found": {
                    "value": {
                      "code": "property-not-found",
                      "message": "Could not find a property with the ID: {property_id}"
                    }
                  },
                  "label-not-defined": {
                    "value": {
                      "code": "label-not-defined",
                      "message": "Property with the ID {property_id} does not have a label in the language: {language_code}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "412": {
            "description": "The condition defined by a conditional request header is not fulfilled"
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "unexpected-error",
                  "message": "Unexpected Error"
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          }
        }
      }
    },
    "/entities/items/{item_id}/aliases": {
      "get": {
        "operationId": "getItemAliases",
        "tags": [
          "aliases"
        ],
        "summary": "Retrieve an Item's aliases",
        "parameters": [
          {
            "in": "path",
            "name": "item_id",
            "description": "The ID of the required Item",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Q[1-9]\\d{0,9}$"
            },
            "examples": {
              "item": {
                "summary": "Example of Item ID",
                "value": "Q42"
              }
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Make authenticated request using a provided bearer token",
            "schema": {
              "type": "string"
            },
            "example": "Bearer mF_9.B5f-4.1JqM"
          }
        ],
        "responses": {
          "200": {
            "description": "Item's aliases by language",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              },
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date"
              },
              "X-Authenticated-User": {
                "schema": {
                  "type": "string"
                },
                "description": "Optional username of the user making the request"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "en": [
                      "en-alias1",
                      "en-alias2"
                    ],
                    "fr": [
                      "fr-alias1",
                      "fr-alias2"
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "The specified resource has not been modified since last provided revision number or date",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              }
            }
          },
          "308": {
            "description": "The specified resource has permanently moved to the indicated location",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "The URL to which the requested resource has been moved"
              }
            }
          },
          "400": {
            "description": "The request cannot be processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid-item-id": {
                    "value": {
                      "code": "invalid-item-id",
                      "message": "Not a valid item ID: {item_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "404": {
            "description": "The specified Item was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "item-not-found": {
                    "value": {
                      "code": "item-not-found",
                      "message": "Could not find an item with the ID: {item_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "412": {
            "description": "The condition defined by a conditional request header is not fulfilled"
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "unexpected-error",
                  "message": "Unexpected Error"
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          }
        }
      }
    },
    "/entities/properties/{property_id}/aliases": {
      "get": {
        "operationId": "getPropertyAliases",
        "tags": [
          "aliases"
        ],
        "summary": "Retrieve a Property's aliases",
        "parameters": [
          {
            "in": "path",
            "name": "property_id",
            "description": "The ID of the required Property",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^P[1-9]\\d{0,9}$"
            },
            "examples": {
              "item": {
                "summary": "Example of Property ID",
                "value": "P31"
              }
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Make authenticated request using a provided bearer token",
            "schema": {
              "type": "string"
            },
            "example": "Bearer mF_9.B5f-4.1JqM"
          }
        ],
        "responses": {
          "200": {
            "description": "Property's aliases by language",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              },
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date"
              },
              "X-Authenticated-User": {
                "schema": {
                  "type": "string"
                },
                "description": "Optional username of the user making the request"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "en": [
                      "en-alias1",
                      "en-alias2"
                    ],
                    "fr": [
                      "fr-alias1",
                      "fr-alias2"
                    ]
                  }
                }
              }
            }
          },
          "304": {
            "description": "The specified resource has not been modified since last provided revision number or date",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              }
            }
          },
          "400": {
            "description": "The request cannot be processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid-property-id": {
                    "value": {
                      "code": "invalid-property-id",
                      "message": "Not a valid property ID: {property_id}",
                      "context": {
                        "property-id": "{property_id}"
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "404": {
            "description": "The specified property was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "property-not-found": {
                    "value": {
                      "code": "property-not-found",
                      "message": "Could not find a property with the ID: {property_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "412": {
            "description": "The condition defined by a conditional request header is not fulfilled"
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "unexpected-error",
                  "message": "Unexpected Error"
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          }
        }
      }
    },
    "/entities/items/{item_id}/aliases/{language_code}": {
      "get": {
        "operationId": "getItemAliasesInLanguage",
        "tags": [
          "aliases"
        ],
        "summary": "Retrieve an Item's aliases in a specific language",
        "parameters": [
          {
            "in": "path",
            "name": "item_id",
            "description": "The ID of the required Item",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^Q[1-9]\\d{0,9}$"
            },
            "examples": {
              "item": {
                "summary": "Example of Item ID",
                "value": "Q42"
              }
            }
          },
          {
            "in": "path",
            "name": "language_code",
            "description": "The requested resource language",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-z]{2}[a-z0-9-]*$"
            },
            "example": "en"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Make authenticated request using a provided bearer token",
            "schema": {
              "type": "string"
            },
            "example": "Bearer mF_9.B5f-4.1JqM"
          }
        ],
        "responses": {
          "200": {
            "description": "Item's aliases in a specific language",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              },
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date"
              },
              "X-Authenticated-User": {
                "schema": {
                  "type": "string"
                },
                "description": "Optional username of the user making the request"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "Douglas Noel Adams",
                    "Douglas Noël Adams"
                  ]
                }
              }
            }
          },
          "304": {
            "description": "The specified resource has not been modified since last provided revision number or date",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              }
            }
          },
          "308": {
            "description": "The specified resource has permanently moved to the indicated location",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "The URL to which the requested resource has been moved"
              }
            }
          },
          "400": {
            "description": "The request cannot be processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid-item-id": {
                    "value": {
                      "code": "invalid-item-id",
                      "message": "Not a valid item ID: {item_id}"
                    }
                  },
                  "invalid-language-code": {
                    "value": {
                      "code": "invalid-language-code",
                      "message": "Not a valid language code: {language_code}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "item-not-found": {
                    "value": {
                      "code": "item-not-found",
                      "message": "Could not find an item with the ID: {item_id}"
                    }
                  },
                  "aliases-not-defined": {
                    "value": {
                      "code": "aliases-not-defined",
                      "message": "Item with the ID {item_id} does not have aliases in the language: {language_code}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "412": {
            "description": "The condition defined by a conditional request header is not fulfilled"
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "unexpected-error",
                  "message": "Unexpected Error"
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          }
        }
      }
    },
    "/entities/properties/{property_id}/aliases/{language_code}": {
      "get": {
        "operationId": "getPropertyAliasesInLanguage",
        "tags": [
          "aliases"
        ],
        "summary": "Retrieve a Property's aliases in a specific language",
        "parameters": [
          {
            "in": "path",
            "name": "property_id",
            "description": "The ID of the required Property",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^P[1-9]\\d{0,9}$"
            },
            "examples": {
              "item": {
                "summary": "Example of Property ID",
                "value": "P31"
              }
            }
          },
          {
            "in": "path",
            "name": "language_code",
            "description": "The requested resource language",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-z]{2}[a-z0-9-]*$"
            },
            "example": "en"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Make authenticated request using a provided bearer token",
            "schema": {
              "type": "string"
            },
            "example": "Bearer mF_9.B5f-4.1JqM"
          }
        ],
        "responses": {
          "200": {
            "description": "Property's aliases in a specific language",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              },
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date"
              },
              "X-Authenticated-User": {
                "schema": {
                  "type": "string"
                },
                "description": "Optional username of the user making the request"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "is a",
                    "example of"
                  ]
                }
              }
            }
          },
          "304": {
            "description": "The specified resource has not been modified since last provided revision number or date",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              }
            }
          },
          "400": {
            "description": "The request cannot be processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid-property-id": {
                    "value": {
                      "code": "invalid-property-id",
                      "message": "Not a valid property ID: {property_id}",
                      "context": {
                        "property-id": "{property_id}"
                      }
                    }
                  },
                  "invalid-language-code": {
                    "value": {
                      "code": "invalid-language-code",
                      "message": "Not a valid language code: {language_code}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "property-not-found": {
                    "value": {
                      "code": "property-not-found",
                      "message": "Could not find a property with the ID: {property_id}"
                    }
                  },
                  "aliases-not-defined": {
                    "value": {
                      "code": "aliases-not-defined",
                      "message": "Property with the ID {property_id} does not have aliases in the language: {language_code}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "412": {
            "description": "The condition defined by a conditional request header is not fulfilled"
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "unexpected-error",
                  "message": "Unexpected Error"
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          }
        }
      }
    },
    "/entities/properties/{property_id}/statements": {
      "get": {
        "operationId": "getPropertyStatements",
        "tags": [
          "statements"
        ],
        "summary": "Retrieve Statements from a Property",
        "parameters": [
          {
            "in": "path",
            "name": "property_id",
            "description": "The ID of the required Property",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^P[1-9]\\d{0,9}$"
            },
            "examples": {
              "item": {
                "summary": "Example of Property ID",
                "value": "P31"
              }
            }
          },
          {
            "in": "query",
            "name": "property",
            "description": "Single property ID to filter statements by.",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^P[1-9]\\d{0,9}$"
            },
            "style": "form",
            "example": "P31"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Make authenticated request using a provided bearer token",
            "schema": {
              "type": "string"
            },
            "example": "Bearer mF_9.B5f-4.1JqM"
          }
        ],
        "responses": {
          "200": {
            "description": "The statements of a Property",
            "headers": {
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date"
              },
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              },
              "X-Authenticated-User": {
                "schema": {
                  "type": "string"
                },
                "description": "Optional username of the user making the request"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Statement"
                    }
                  }
                },
                "example": {
                  "P370": [
                    {
                      "id": "P11$6403c562-401a-2b26-85cc-8327801145e1",
                      "rank": "normal",
                      "property": {
                        "id": "P370",
                        "data-type": "string"
                      },
                      "value": {
                        "content": "I am a goat",
                        "type": "value"
                      },
                      "qualifiers": [],
                      "references": []
                    }
                  ],
                  "P92": [
                    {
                      "id": "P11$6403c562-401a-2b26-85cc-8327801145e1",
                      "rank": "normal",
                      "property": {
                        "id": "P92",
                        "data-type": "string"
                      },
                      "value": {
                        "content": "I am a goat",
                        "type": "value"
                      },
                      "qualifiers": [],
                      "references": []
                    }
                  ]
                }
              }
            }
          },
          "304": {
            "description": "The specified resource has not been modified since last provided revision number or date",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              }
            }
          },
          "400": {
            "description": "The request cannot be processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid-property-id": {
                    "value": {
                      "code": "invalid-property-id",
                      "message": "Not a valid property ID: {property_id}",
                      "context": {
                        "property-id": "{property_id}"
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "404": {
            "description": "The specified property was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "property-not-found": {
                    "value": {
                      "code": "property-not-found",
                      "message": "Could not find a property with the ID: {property_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "412": {
            "description": "The condition defined by a conditional request header is not fulfilled"
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "unexpected-error",
                  "message": "Unexpected Error"
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          }
        }
      }
    },
    "/entities/properties/{property_id}/statements/{statement_id}": {
      "get": {
        "operationId": "getPropertyStatement",
        "tags": [
          "statements"
        ],
        "summary": "Retrieve a single Statement from a Property",
        "description": "This endpoint is also accessible through `/statements/{statement_id}`",
        "parameters": [
          {
            "in": "path",
            "name": "property_id",
            "description": "The ID of the required Property",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^P[1-9]\\d{0,9}$"
            },
            "examples": {
              "item": {
                "summary": "Example of Property ID",
                "value": "P31"
              }
            }
          },
          {
            "in": "path",
            "name": "statement_id",
            "description": "The ID of the required Property Statement",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^(P|p)[1-9]\\d{0,9}\\$.+$"
            },
            "example": "P31$9d042001-4a7e-2432-a7e1-233360062379"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Make authenticated request using a provided bearer token",
            "schema": {
              "type": "string"
            },
            "example": "Bearer mF_9.B5f-4.1JqM"
          }
        ],
        "responses": {
          "200": {
            "description": "A single Wikibase Statement. Please note that the value of the `ETag` header field refers to the Property's Revision ID.",
            "headers": {
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date"
              },
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              },
              "X-Authenticated-User": {
                "schema": {
                  "type": "string"
                },
                "description": "Optional username of the user making the request"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Statement"
                },
                "example": {
                  "id": "P31$9d042001-4a7e-2432-a7e1-233360062379",
                  "rank": "normal",
                  "property": {
                    "id": "P31",
                    "data-type": "wikibase-item"
                  },
                  "value": {
                    "type": "value",
                    "content": "Q5"
                  },
                  "qualifiers": [],
                  "references": []
                }
              }
            }
          },
          "304": {
            "description": "The specified resource has not been modified since last provided revision number or date",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              }
            }
          },
          "400": {
            "description": "The request cannot be processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid-property-id": {
                    "value": {
                      "code": "invalid-property-id",
                      "message": "Not a valid property ID: {property_id}",
                      "context": {
                        "property-id": "{property_id}"
                      }
                    }
                  },
                  "invalid-statement-id": {
                    "value": {
                      "code": "invalid-statement-id",
                      "message": "Not a valid statement ID: {statement_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "property-not-found": {
                    "value": {
                      "code": "property-not-found",
                      "message": "Could not find a property with the ID: {property_id}"
                    }
                  },
                  "statement-not-found": {
                    "value": {
                      "code": "statement-not-found",
                      "message": "Could not find a statement with the ID: {statement_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "412": {
            "description": "The condition defined by a conditional request header is not fulfilled"
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "unexpected-error",
                  "message": "Unexpected Error"
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          }
        }
      }
    },
    "/statements/{statement_id}": {
      "get": {
        "operationId": "getStatement",
        "tags": [
          "statements"
        ],
        "summary": "Retrieve a single Statement",
        "description": "This endpoint is also accessible through `/entities/items/{item_id}/statements/{statement_id}` and `/entities/properties/{property_id}/statements/{statement_id}`",
        "parameters": [
          {
            "in": "path",
            "name": "statement_id",
            "description": "The ID of the required Statement",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^(Q|q|P|p)[1-9]\\d{0,9}\\$.+$"
            },
            "examples": {
              "Statement on an Item": {
                "value": "Q42$F078E5B3-F9A8-480E-B7AC-D97778CBBEF9"
              },
              "Statement on a Property": {
                "value": "P31$9d042001-4a7e-2432-a7e1-233360062379"
              }
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?:\".+\"|\\*)$"
              }
            },
            "examples": {
              "strong-etag": {
                "summary": "Single ETag",
                "value": [
                  "\"1276705620\""
                ]
              },
              "multiple-etags": {
                "summary": "Multiple ETags",
                "value": [
                  "\"1276703231\"",
                  "\"1276705620\""
                ]
              }
            }
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
            "schema": {
              "type": "string",
              "format": "http-date"
            },
            "example": "Sat, 06 Jun 2020 16:38:47 GMT"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Make authenticated request using a provided bearer token",
            "schema": {
              "type": "string"
            },
            "example": "Bearer mF_9.B5f-4.1JqM"
          }
        ],
        "responses": {
          "200": {
            "description": "A single Wikibase Statement. Please note that the value of the `ETag` header field refers to the entity's revision ID.",
            "headers": {
              "Last-Modified": {
                "schema": {
                  "type": "string"
                },
                "description": "Last modified date"
              },
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              },
              "X-Authenticated-User": {
                "schema": {
                  "type": "string"
                },
                "description": "Optional username of the user making the request"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Statement"
                },
                "examples": {
                  "Statement on an Item": {
                    "value": {
                      "id": "Q42$F078E5B3-F9A8-480E-B7AC-D97778CBBEF9",
                      "rank": "normal",
                      "property": {
                        "id": "P31",
                        "data-type": "wikibase-item"
                      },
                      "value": {
                        "type": "value",
                        "content": "Q5"
                      },
                      "qualifiers": [],
                      "references": []
                    }
                  },
                  "Statement on a Property": {
                    "value": {
                      "id": "P31$9d042001-4a7e-2432-a7e1-233360062379",
                      "rank": "normal",
                      "property": {
                        "id": "P31",
                        "data-type": "wikibase-item"
                      },
                      "value": {
                        "type": "value",
                        "content": "Q5"
                      },
                      "qualifiers": [],
                      "references": []
                    }
                  }
                }
              }
            }
          },
          "304": {
            "description": "The specified resource has not been modified since last provided revision number or date",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                },
                "description": "Last entity revision number"
              }
            }
          },
          "400": {
            "description": "The request cannot be processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid-statement-id": {
                    "value": {
                      "code": "invalid-statement-id",
                      "message": "Not a valid statement ID: {statement_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "404": {
            "description": "The specified Statement was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "statement-not-found": {
                    "value": {
                      "code": "statement-not-found",
                      "message": "Could not find a statement with the ID: {statement_id}"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          },
          "412": {
            "description": "The condition defined by a conditional request header is not fulfilled"
          },
          "500": {
            "description": "An unexpected error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "unexpected-error",
                  "message": "Unexpected Error"
                }
              }
            },
            "headers": {
              "Content-Language": {
                "schema": {
                  "type": "string"
                },
                "description": "Language code of the language in which error message is provided"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ItemId": {
        "in": "path",
        "name": "item_id",
        "description": "The ID of the required Item",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^Q[1-9]\\d{0,9}$"
        },
        "examples": {
          "item": {
            "summary": "Example of Item ID",
            "value": "Q42"
          }
        }
      },
      "PropertyId": {
        "in": "path",
        "name": "property_id",
        "description": "The ID of the required Property",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^P[1-9]\\d{0,9}$"
        },
        "examples": {
          "item": {
            "summary": "Example of Property ID",
            "value": "P31"
          }
        }
      },
      "StatementId": {
        "in": "path",
        "name": "statement_id",
        "description": "The ID of the required Statement",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^(Q|q|P|p)[1-9]\\d{0,9}\\$.+$"
        },
        "examples": {
          "Statement on an Item": {
            "value": "Q42$F078E5B3-F9A8-480E-B7AC-D97778CBBEF9"
          },
          "Statement on a Property": {
            "value": "P31$9d042001-4a7e-2432-a7e1-233360062379"
          }
        }
      },
      "ItemStatementId": {
        "in": "path",
        "name": "statement_id",
        "description": "The ID of the required Item Statement",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^(Q|q)[1-9]\\d{0,9}\\$.+$"
        },
        "example": "Q42$F078E5B3-F9A8-480E-B7AC-D97778CBBEF9"
      },
      "PropertyStatementId": {
        "in": "path",
        "name": "statement_id",
        "description": "The ID of the required Property Statement",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^(P|p)[1-9]\\d{0,9}\\$.+$"
        },
        "example": "P31$9d042001-4a7e-2432-a7e1-233360062379"
      },
      "LanguageCode": {
        "in": "path",
        "name": "language_code",
        "description": "The requested resource language",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^[a-z]{2}[a-z0-9-]*$"
        },
        "example": "en"
      },
      "SiteId": {
        "in": "path",
        "name": "site_id",
        "description": "The ID of the required Site",
        "required": true,
        "schema": {
          "type": "string"
        },
        "examples": {
          "item": {
            "summary": "Example of Site ID",
            "value": "dewiki"
          }
        }
      },
      "ItemFields": {
        "in": "query",
        "name": "_fields",
        "description": "Comma-separated list of fields to include in each response object.",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "type",
              "labels",
              "descriptions",
              "aliases",
              "statements",
              "sitelinks"
            ]
          }
        },
        "explode": false,
        "style": "form"
      },
      "PropertyFields": {
        "in": "query",
        "name": "_fields",
        "description": "Comma-separated list of fields to include in each response object.",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "type",
              "data-type",
              "labels",
              "descriptions",
              "aliases",
              "statements"
            ]
          }
        },
        "explode": false,
        "style": "form"
      },
      "PropertyFilter": {
        "in": "query",
        "name": "property",
        "description": "Single property ID to filter statements by.",
        "required": false,
        "schema": {
          "type": "string",
          "pattern": "^P[1-9]\\d{0,9}$"
        },
        "style": "form",
        "example": "P31"
      },
      "IfNoneMatch": {
        "name": "If-None-Match",
        "in": "header",
        "description": "Conditionally perform the request only if the resource has been modified since the specified entity revision numbers",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^(?:\".+\"|\\*)$"
          }
        },
        "examples": {
          "strong-etag": {
            "summary": "Single ETag",
            "value": [
              "\"1276705620\""
            ]
          },
          "multiple-etags": {
            "summary": "Multiple ETags",
            "value": [
              "\"1276703231\"",
              "\"1276705620\""
            ]
          }
        }
      },
      "IfModifiedSince": {
        "name": "If-Modified-Since",
        "in": "header",
        "description": "Conditionally perform the request only if the resource has been modified after the specified date",
        "schema": {
          "type": "string",
          "format": "http-date"
        },
        "example": "Sat, 06 Jun 2020 16:38:47 GMT"
      },
      "IfMatch": {
        "name": "If-Match",
        "in": "header",
        "description": "Conditionally perform the request only if the resource has not been modified since one of the specified entity revision numbers",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^(?:\".+\"|\\*)$"
          }
        },
        "examples": {
          "strong-etag": {
            "summary": "Single ETag",
            "value": [
              "\"1276705620\""
            ]
          },
          "multiple-etags": {
            "summary": "Multiple ETags",
            "value": [
              "\"1276703231\"",
              "\"1276705620\""
            ]
          }
        }
      },
      "IfUnmodifiedSince": {
        "name": "If-Unmodified-Since",
        "in": "header",
        "description": "Conditionally perform the request only if the resource has not been modified after the specified date",
        "schema": {
          "type": "string",
          "format": "http-date"
        },
        "example": "Sat, 06 Jun 2020 16:38:47 GMT"
      },
      "Authorization": {
        "name": "Authorization",
        "in": "header",
        "description": "Make authenticated request using a provided bearer token",
        "schema": {
          "type": "string"
        },
        "example": "Bearer mF_9.B5f-4.1JqM"
      }
    },
    "requestBodies": {
      "Label": {
        "description": "Payload containing a Wikibase label in the specified language and edit metadata",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "label": {
                      "type": "string",
                      "example": "an example label"
                    }
                  },
                  "required": [
                    "label"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "default": [],
                      "example": [
                        "mobile edit",
                        "external tool edit"
                      ]
                    },
                    "bot": {
                      "type": "boolean",
                      "default": false
                    },
                    "comment": {
                      "type": "string",
                      "example": "API edit fixing the modelling as discussed in ..."
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "LabelsPatch": {
        "description": "Payload containing a JSON Patch document to be applied to Labels and edit metadata",
        "required": true,
        "content": {
          "application/json-patch+json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "patch": {
                      "description": "A JSON Patch document as defined by RFC 6902",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "op": {
                            "description": "The operation to perform",
                            "type": "string",
                            "enum": [
                              "add",
                              "copy",
                              "move",
                              "remove",
                              "replace",
                              "test"
                            ],
                            "example": "replace"
                          },
                          "path": {
                            "description": "A JSON Pointer for the property to manipulate",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value to be used within the operation"
                          }
                        },
                        "required": [
                          "op",
                          "path"
                        ]
                      }
                    }
                  },
                  "required": [
                    "patch"
                  ]
                },
                {
                  "properties": {
                    "patch": {
                      "items": {
                        "properties": {
                          "path": {
                            "example": "/en"
                          },
                          "value": {
                            "example": "en-label"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "default": [],
                      "example": [
                        "mobile edit",
                        "external tool edit"
                      ]
                    },
                    "bot": {
                      "type": "boolean",
                      "default": false
                    },
                    "comment": {
                      "type": "string",
                      "example": "API edit fixing the modelling as discussed in ..."
                    }
                  }
                }
              ]
            }
          },
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "patch": {
                      "description": "A JSON Patch document as defined by RFC 6902",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "op": {
                            "description": "The operation to perform",
                            "type": "string",
                            "enum": [
                              "add",
                              "copy",
                              "move",
                              "remove",
                              "replace",
                              "test"
                            ],
                            "example": "replace"
                          },
                          "path": {
                            "description": "A JSON Pointer for the property to manipulate",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value to be used within the operation"
                          }
                        },
                        "required": [
                          "op",
                          "path"
                        ]
                      }
                    }
                  },
                  "required": [
                    "patch"
                  ]
                },
                {
                  "properties": {
                    "patch": {
                      "items": {
                        "properties": {
                          "path": {
                            "example": "/en"
                          },
                          "value": {
                            "example": "en-label"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "default": [],
                      "example": [
                        "mobile edit",
                        "external tool edit"
                      ]
                    },
                    "bot": {
                      "type": "boolean",
                      "default": false
                    },
                    "comment": {
                      "type": "string",
                      "example": "API edit fixing the modelling as discussed in ..."
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "Aliases": {
        "description": "Payload containing a list of Wikibase aliases in the specified language and edit metadata",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "aliases": {
                      "type": "array",
                      "example": [
                        "alias-1",
                        "alias-2"
                      ]
                    }
                  },
                  "required": [
                    "aliases"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "default": [],
                      "example": [
                        "mobile edit",
                        "external tool edit"
                      ]
                    },
                    "bot": {
                      "type": "boolean",
                      "default": false
                    },
                    "comment": {
                      "type": "string",
                      "example": "API edit fixing the modelling as discussed in ..."
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "AliasesPatch": {
        "description": "Payload containing a JSON Patch document to be applied to an Item's aliases and edit metadata",
        "required": true,
        "content": {
          "application/json-patch+json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "patch": {
                      "description": "A JSON Patch document as defined by RFC 6902",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "op": {
                            "description": "The operation to perform",
                            "type": "string",
                            "enum": [
                              "add",
                              "copy",
                              "move",
                              "remove",
                              "replace",
                              "test"
                            ],
                            "example": "replace"
                          },
                          "path": {
                            "description": "A JSON Pointer for the property to manipulate",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value to be used within the operation"
                          }
                        },
                        "required": [
                          "op",
                          "path"
                        ]
                      }
                    }
                  },
                  "required": [
                    "patch"
                  ]
                },
                {
                  "properties": {
                    "patch": {
                      "items": {
                        "properties": {
                          "path": {
                            "example": "/en/0"
                          },
                          "value": {
                            "example": "en-alias1"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "default": [],
                      "example": [
                        "mobile edit",
                        "external tool edit"
                      ]
                    },
                    "bot": {
                      "type": "boolean",
                      "default": false
                    },
                    "comment": {
                      "type": "string",
                      "example": "API edit fixing the modelling as discussed in ..."
                    }
                  }
                }
              ]
            }
          },
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "patch": {
                      "description": "A JSON Patch document as defined by RFC 6902",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "op": {
                            "description": "The operation to perform",
                            "type": "string",
                            "enum": [
                              "add",
                              "copy",
                              "move",
                              "remove",
                              "replace",
                              "test"
                            ],
                            "example": "replace"
                          },
                          "path": {
                            "description": "A JSON Pointer for the property to manipulate",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value to be used within the operation"
                          }
                        },
                        "required": [
                          "op",
                          "path"
                        ]
                      }
                    }
                  },
                  "required": [
                    "patch"
                  ]
                },
                {
                  "properties": {
                    "patch": {
                      "items": {
                        "properties": {
                          "path": {
                            "example": "/en/0"
                          },
                          "value": {
                            "example": "en-alias1"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "default": [],
                      "example": [
                        "mobile edit",
                        "external tool edit"
                      ]
                    },
                    "bot": {
                      "type": "boolean",
                      "default": false
                    },
                    "comment": {
                      "type": "string",
                      "example": "API edit fixing the modelling as discussed in ..."
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "Description": {
        "description": "Payload containing a Wikibase description in the specified language and edit metadata",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "example": "an example description"
                    }
                  },
                  "required": [
                    "description"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "default": [],
                      "example": [
                        "mobile edit",
                        "external tool edit"
                      ]
                    },
                    "bot": {
                      "type": "boolean",
                      "default": false
                    },
                    "comment": {
                      "type": "string",
                      "example": "API edit fixing the modelling as discussed in ..."
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "DescriptionsPatch": {
        "required": true,
        "content": {
          "application/json-patch+json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "patch": {
                      "description": "A JSON Patch document as defined by RFC 6902",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "op": {
                            "description": "The operation to perform",
                            "type": "string",
                            "enum": [
                              "add",
                              "copy",
                              "move",
                              "remove",
                              "replace",
                              "test"
                            ],
                            "example": "replace"
                          },
                          "path": {
                            "description": "A JSON Pointer for the property to manipulate",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value to be used within the operation"
                          }
                        },
                        "required": [
                          "op",
                          "path"
                        ]
                      }
                    }
                  },
                  "required": [
                    "patch"
                  ]
                },
                {
                  "properties": {
                    "patch": {
                      "items": {
                        "properties": {
                          "path": {
                            "example": "/en"
                          },
                          "value": {
                            "example": "en-description"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "default": [],
                      "example": [
                        "mobile edit",
                        "external tool edit"
                      ]
                    },
                    "bot": {
                      "type": "boolean",
                      "default": false
                    },
                    "comment": {
                      "type": "string",
                      "example": "API edit fixing the modelling as discussed in ..."
                    }
                  }
                }
              ]
            }
          },
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "patch": {
                      "description": "A JSON Patch document as defined by RFC 6902",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "op": {
                            "description": "The operation to perform",
                            "type": "string",
                            "enum": [
                              "add",
                              "copy",
                              "move",
                              "remove",
                              "replace",
                              "test"
                            ],
                            "example": "replace"
                          },
                          "path": {
                            "description": "A JSON Pointer for the property to manipulate",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value to be used within the operation"
                          }
                        },
                        "required": [
                          "op",
                          "path"
                        ]
                      }
                    }
                  },
                  "required": [
                    "patch"
                  ]
                },
                {
                  "properties": {
                    "patch": {
                      "items": {
                        "properties": {
                          "path": {
                            "example": "/en"
                          },
                          "value": {
                            "example": "en-description"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "default": [],
                      "example": [
                        "mobile edit",
                        "external tool edit"
                      ]
                    },
                    "bot": {
                      "type": "boolean",
                      "default": false
                    },
                    "comment": {
                      "type": "string",
                      "example": "API edit fixing the modelling as discussed in ..."
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "Statement": {
        "description": "Payload containing a Wikibase Statement object and edit metadata",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "statement": {
                      "$ref": "#/components/schemas/Statement"
                    }
                  },
                  "required": [
                    "statement"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "default": [],
                      "example": [
                        "mobile edit",
                        "external tool edit"
                      ]
                    },
                    "bot": {
                      "type": "boolean",
                      "default": false
                    },
                    "comment": {
                      "type": "string",
                      "example": "API edit fixing the modelling as discussed in ..."
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "StatementPatch": {
        "description": "Payload containing a JSON Patch document to be applied to a Statement and edit metadata",
        "required": true,
        "content": {
          "application/json-patch+json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "patch": {
                      "description": "A JSON Patch document as defined by RFC 6902",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "op": {
                            "description": "The operation to perform",
                            "type": "string",
                            "enum": [
                              "add",
                              "copy",
                              "move",
                              "remove",
                              "replace",
                              "test"
                            ],
                            "example": "replace"
                          },
                          "path": {
                            "description": "A JSON Pointer for the property to manipulate",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value to be used within the operation"
                          }
                        },
                        "required": [
                          "op",
                          "path"
                        ]
                      }
                    }
                  },
                  "required": [
                    "patch"
                  ]
                },
                {
                  "properties": {
                    "patch": {
                      "items": {
                        "properties": {
                          "path": {
                            "example": "/value/content"
                          },
                          "value": {
                            "example": "Q5"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "default": [],
                      "example": [
                        "mobile edit",
                        "external tool edit"
                      ]
                    },
                    "bot": {
                      "type": "boolean",
                      "default": false
                    },
                    "comment": {
                      "type": "string",
                      "example": "API edit fixing the modelling as discussed in ..."
                    }
                  }
                }
              ]
            }
          },
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "patch": {
                      "description": "A JSON Patch document as defined by RFC 6902",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "op": {
                            "description": "The operation to perform",
                            "type": "string",
                            "enum": [
                              "add",
                              "copy",
                              "move",
                              "remove",
                              "replace",
                              "test"
                            ],
                            "example": "replace"
                          },
                          "path": {
                            "description": "A JSON Pointer for the property to manipulate",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value to be used within the operation"
                          }
                        },
                        "required": [
                          "op",
                          "path"
                        ]
                      }
                    }
                  },
                  "required": [
                    "patch"
                  ]
                },
                {
                  "properties": {
                    "patch": {
                      "items": {
                        "properties": {
                          "path": {
                            "example": "/value/content"
                          },
                          "value": {
                            "example": "Q5"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "default": [],
                      "example": [
                        "mobile edit",
                        "external tool edit"
                      ]
                    },
                    "bot": {
                      "type": "boolean",
                      "default": false
                    },
                    "comment": {
                      "type": "string",
                      "example": "API edit fixing the modelling as discussed in ..."
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "Sitelink": {
        "description": "Payload containing a Wikibase Sitelink object and edit metadata",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "sitelink": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "Sitelink page title"
                        },
                        "badges": {
                          "type": "array",
                          "example": [
                            "Q45678",
                            "Q87654"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "title"
                      ]
                    }
                  },
                  "required": [
                    "sitelink"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "default": [],
                      "example": [
                        "mobile edit",
                        "external tool edit"
                      ]
                    },
                    "bot": {
                      "type": "boolean",
                      "default": false
                    },
                    "comment": {
                      "type": "string",
                      "example": "API edit fixing the modelling as discussed in ..."
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "Edit": {
        "description": "Edit payload containing edit metadata",
        "required": false,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "example": [
                    "mobile edit",
                    "external tool edit"
                  ]
                },
                "bot": {
                  "type": "boolean",
                  "default": false
                },
                "comment": {
                  "type": "string",
                  "example": "API edit fixing the modelling as discussed in ..."
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "LabelDeleted": {
        "description": "The resource was deleted",
        "headers": {
          "Content-Language": {
            "description": "Language code of the language in which response is provided",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "string"
            },
            "example": "Label deleted"
          }
        }
      },
      "DescriptionDeleted": {
        "description": "The resource was deleted",
        "headers": {
          "Content-Language": {
            "description": "Language code of the language in which response is provided",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "string"
            },
            "example": "Description deleted"
          }
        }
      },
      "StatementDeleted": {
        "description": "The resource was deleted",
        "headers": {
          "Content-Language": {
            "description": "Language code of the language in which response is provided",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "string"
            },
            "example": "Statement deleted"
          }
        }
      },
      "SitelinkDeleted": {
        "description": "The resource was deleted",
        "headers": {
          "Content-Language": {
            "description": "Language code of the language in which response is provided",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "string"
            },
            "example": "Sitelink deleted"
          }
        }
      },
      "ItemNotFound": {
        "description": "The specified Item was not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "item-not-found": {
                "value": {
                  "code": "item-not-found",
                  "message": "Could not find an item with the ID: {item_id}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "PropertyNotFound": {
        "description": "The specified property was not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "property-not-found": {
                "value": {
                  "code": "property-not-found",
                  "message": "Could not find a property with the ID: {property_id}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "ItemRedirected": {
        "description": "The specified Item was redirected",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "redirected-item": {
                "value": {
                  "code": "redirected-item",
                  "message": "Item {item_id} has been merged into {other_id}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "ItemRedirectedOrSitelinkConflict": {
        "description": "The specified Item was redirected or there is a Sitelink conflict",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "redirected-item": {
                "value": {
                  "code": "redirected-item",
                  "message": "Item {item_id} has been merged into {other_id}"
                }
              },
              "sitelink-conflict": {
                "value": {
                  "code": "sitelink-conflict",
                  "message": "Sitelink is already being used on {other_item_id}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "StatementNotFound": {
        "description": "The specified Statement was not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "statement-not-found": {
                "value": {
                  "code": "statement-not-found",
                  "message": "Could not find a statement with the ID: {statement_id}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "ItemStatementNotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "item-not-found": {
                "value": {
                  "code": "item-not-found",
                  "message": "Could not find an item with the ID: {item_id}"
                }
              },
              "statement-not-found": {
                "value": {
                  "code": "statement-not-found",
                  "message": "Could not find a statement with the ID: {statement_id}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "PropertyStatementNotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "property-not-found": {
                "value": {
                  "code": "property-not-found",
                  "message": "Could not find a property with the ID: {property_id}"
                }
              },
              "statement-not-found": {
                "value": {
                  "code": "statement-not-found",
                  "message": "Could not find a statement with the ID: {statement_id}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "SitelinkNotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "item-not-found": {
                "value": {
                  "code": "item-not-found",
                  "message": "Could not find an item with the ID: {item_id}"
                }
              },
              "sitelink-not-defined": {
                "value": {
                  "code": "sitelink-not-defined",
                  "message": "No sitelink found for the ID: {item_id} for the site {site_id}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "ItemLabelNotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "item-not-found": {
                "value": {
                  "code": "item-not-found",
                  "message": "Could not find an item with the ID: {item_id}"
                }
              },
              "label-not-defined": {
                "value": {
                  "code": "label-not-defined",
                  "message": "Item with the ID {item_id} does not have a label in the language: {language_code}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "PropertyLabelNotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "property-not-found": {
                "value": {
                  "code": "property-not-found",
                  "message": "Could not find a property with the ID: {property_id}"
                }
              },
              "label-not-defined": {
                "value": {
                  "code": "label-not-defined",
                  "message": "Property with the ID {property_id} does not have a label in the language: {language_code}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "ItemAliasesInLanguageNotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "item-not-found": {
                "value": {
                  "code": "item-not-found",
                  "message": "Could not find an item with the ID: {item_id}"
                }
              },
              "aliases-not-defined": {
                "value": {
                  "code": "aliases-not-defined",
                  "message": "Item with the ID {item_id} does not have aliases in the language: {language_code}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "PropertyAliasesInLanguageNotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "property-not-found": {
                "value": {
                  "code": "property-not-found",
                  "message": "Could not find a property with the ID: {property_id}"
                }
              },
              "aliases-not-defined": {
                "value": {
                  "code": "aliases-not-defined",
                  "message": "Property with the ID {property_id} does not have aliases in the language: {language_code}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "ItemDescriptionNotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "item-not-found": {
                "value": {
                  "code": "item-not-found",
                  "message": "Could not find an item with the ID: {item_id}"
                }
              },
              "description-not-defined": {
                "value": {
                  "code": "description-not-defined",
                  "message": "Item with the ID {item_id} does not have a description in the language: {language_code}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "PropertyDescriptionNotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "property-not-found": {
                "value": {
                  "code": "property-not-found",
                  "message": "Could not find a property with the ID: {property_id}"
                }
              },
              "description-not-defined": {
                "value": {
                  "code": "description-not-defined",
                  "message": "Property with the ID {property_id} does not have a description in the language: {language_code}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidItemInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "invalid-item-id": {
                "value": {
                  "code": "invalid-item-id",
                  "message": "Not a valid item ID: {item_id}"
                }
              },
              "invalid-field": {
                "value": {
                  "code": "invalid-field",
                  "message": "Not a valid field: {field}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPropertyInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "invalid-property-id": {
                "value": {
                  "code": "invalid-property-id",
                  "message": "Not a valid property ID: {property_id}",
                  "context": {
                    "property-id": "{property_id}"
                  }
                }
              },
              "invalid-field": {
                "value": {
                  "code": "invalid-field",
                  "message": "Not a valid field: {field}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidItemIdInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "invalid-item-id": {
                "value": {
                  "code": "invalid-item-id",
                  "message": "Not a valid item ID: {item_id}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPropertyIdInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "invalid-property-id": {
                "value": {
                  "code": "invalid-property-id",
                  "message": "Not a valid property ID: {property_id}",
                  "context": {
                    "property-id": "{property_id}"
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRetrieveItemStatementsInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "invalid-item-id": {
                "value": {
                  "code": "invalid-item-id",
                  "message": "Not a valid item ID: {item_id}"
                }
              },
              "invalid-property-id": {
                "value": {
                  "code": "invalid-property-id",
                  "message": "Not a valid property ID: {property_id}",
                  "context": {
                    "property-id": "{property_id}"
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRetrievePropertyStatementsInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "invalid-property-id": {
                "value": {
                  "code": "invalid-property-id",
                  "message": "Not a valid property ID: {property_id}",
                  "context": {
                    "property-id": "{property_id}"
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRetrieveStatementInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "invalid-statement-id": {
                "value": {
                  "code": "invalid-statement-id",
                  "message": "Not a valid statement ID: {statement_id}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRetrieveItemStatementInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "invalid-item-id": {
                "value": {
                  "code": "invalid-item-id",
                  "message": "Not a valid item ID: {item_id}"
                }
              },
              "invalid-statement-id": {
                "value": {
                  "code": "invalid-statement-id",
                  "message": "Not a valid statement ID: {statement_id}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRetrievePropertyStatementInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "invalid-property-id": {
                "value": {
                  "code": "invalid-property-id",
                  "message": "Not a valid property ID: {property_id}",
                  "context": {
                    "property-id": "{property_id}"
                  }
                }
              },
              "invalid-statement-id": {
                "value": {
                  "code": "invalid-statement-id",
                  "message": "Not a valid statement ID: {statement_id}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidNewItemStatementInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "invalid-item-id": {
                "value": {
                  "code": "invalid-item-id",
                  "message": "Not a valid item ID: {item_id}"
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              },
              "statement-data-missing-field": {
                "value": {
                  "code": "statement-data-missing-field",
                  "message": "Mandatory field missing in the statement data: {field}",
                  "context": {
                    "path": "{field}"
                  }
                }
              },
              "statement-data-invalid-field": {
                "value": {
                  "code": "statement-data-invalid-field",
                  "message": "Invalid input for '{field}'",
                  "context": {
                    "path": "{field}",
                    "value": "{value}"
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidNewPropertyStatementInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "invalid-property-id": {
                "value": {
                  "code": "invalid-property-id",
                  "message": "Not a valid property ID: {property_id}",
                  "context": {
                    "property-id": "{property_id}"
                  }
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              },
              "statement-data-missing-field": {
                "value": {
                  "code": "statement-data-missing-field",
                  "message": "Mandatory field missing in the statement data: {field}",
                  "context": {
                    "path": "{field}"
                  }
                }
              },
              "statement-data-invalid-field": {
                "value": {
                  "code": "statement-data-invalid-field",
                  "message": "Invalid input for '{field}'",
                  "context": {
                    "path": "{field}",
                    "value": "{value}"
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidReplaceStatementInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "invalid-statement-id": {
                "value": {
                  "code": "invalid-statement-id",
                  "message": "Not a valid statement ID: {statement_id}"
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              },
              "statement-data-missing-field": {
                "value": {
                  "code": "statement-data-missing-field",
                  "message": "Mandatory field missing in the statement data: {field}",
                  "context": {
                    "path": "{field}"
                  }
                }
              },
              "statement-data-invalid-field": {
                "value": {
                  "code": "statement-data-invalid-field",
                  "message": "Invalid input for '{field}'",
                  "context": {
                    "path": "{field}",
                    "value": "{value}"
                  }
                }
              },
              "invalid-operation-change-statement-id": {
                "value": {
                  "code": "invalid-operation-change-statement-id",
                  "message": "Cannot change the ID of the existing statement"
                }
              },
              "invalid-operation-change-property-of-statement": {
                "value": {
                  "code": "invalid-operation-change-property-of-statement",
                  "message": "Cannot change the property of the existing statement"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidReplaceItemStatementInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "invalid-item-id": {
                "value": {
                  "code": "invalid-item-id",
                  "message": "Not a valid item ID: {item_id}"
                }
              },
              "invalid-statement-id": {
                "value": {
                  "code": "invalid-statement-id",
                  "message": "Not a valid statement ID: {statement_id}"
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              },
              "statement-data-missing-field": {
                "value": {
                  "code": "statement-data-missing-field",
                  "message": "Mandatory field missing in the statement data: {field}",
                  "context": {
                    "path": "{field}"
                  }
                }
              },
              "statement-data-invalid-field": {
                "value": {
                  "code": "statement-data-invalid-field",
                  "message": "Invalid input for '{field}'",
                  "context": {
                    "path": "{field}",
                    "value": "{value}"
                  }
                }
              },
              "invalid-operation-change-statement-id": {
                "value": {
                  "code": "invalid-operation-change-statement-id",
                  "message": "Cannot change the ID of the existing statement"
                }
              },
              "invalid-operation-change-property-of-statement": {
                "value": {
                  "code": "invalid-operation-change-property-of-statement",
                  "message": "Cannot change the property of the existing statement"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidReplacePropertyStatementInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "invalid-property-id": {
                "value": {
                  "code": "invalid-property-id",
                  "message": "Not a valid property ID: {property_id}",
                  "context": {
                    "property-id": "{property_id}"
                  }
                }
              },
              "invalid-statement-id": {
                "value": {
                  "code": "invalid-statement-id",
                  "message": "Not a valid statement ID: {statement_id}"
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              },
              "statement-data-missing-field": {
                "value": {
                  "code": "statement-data-missing-field",
                  "message": "Mandatory field missing in the statement data: {field}",
                  "context": {
                    "path": "{field}"
                  }
                }
              },
              "statement-data-invalid-field": {
                "value": {
                  "code": "statement-data-invalid-field",
                  "message": "Invalid input for '{field}'",
                  "context": {
                    "path": "{field}",
                    "value": "{value}"
                  }
                }
              },
              "invalid-operation-change-statement-id": {
                "value": {
                  "code": "invalid-operation-change-statement-id",
                  "message": "Cannot change the ID of the existing statement"
                }
              },
              "invalid-operation-change-property-of-statement": {
                "value": {
                  "code": "invalid-operation-change-property-of-statement",
                  "message": "Cannot change the property of the existing statement"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRemoveStatementInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "invalid-statement-id": {
                "value": {
                  "code": "invalid-statement-id",
                  "message": "Not a valid statement ID: {statement_id}"
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRemoveItemStatementInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "invalid-item-id": {
                "value": {
                  "code": "invalid-item-id",
                  "message": "Not a valid item ID: {item_id}"
                }
              },
              "invalid-statement-id": {
                "value": {
                  "code": "invalid-statement-id",
                  "message": "Not a valid statement ID: {statement_id}"
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRemovePropertyStatementInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "invalid-property-id": {
                "value": {
                  "code": "invalid-property-id",
                  "message": "Not a valid property ID: {property_id}",
                  "context": {
                    "property-id": "{property_id}"
                  }
                }
              },
              "invalid-statement-id": {
                "value": {
                  "code": "invalid-statement-id",
                  "message": "Not a valid statement ID: {statement_id}"
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRemoveSitelinkInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "invalid-item-id": {
                "value": {
                  "code": "invalid-item-id",
                  "message": "Not a valid item ID: {item_id}"
                }
              },
              "invalid-site-id": {
                "value": {
                  "code": "invalid-site-id",
                  "message": "Not a valid site ID: {site_id}"
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidSetSitelinkInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "invalid-item-id": {
                "value": {
                  "code": "invalid-item-id",
                  "message": "Not a valid item ID: {item_id}"
                }
              },
              "invalid-site-id": {
                "value": {
                  "code": "invalid-site-id",
                  "message": "Not a valid site ID: {site_id}"
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              },
              "invalid-title-field": {
                "value": {
                  "code": "invalid-title-field",
                  "message": "Not a valid input for title field"
                }
              },
              "title-field-empty": {
                "value": {
                  "code": "title-field-empty",
                  "message": "Title must not be empty"
                }
              },
              "title-does-not-exist": {
                "value": {
                  "code": "title-does-not-exist",
                  "message": "Page with title {title} does not exist on the given site"
                }
              },
              "sitelink-data-missing-title": {
                "value": {
                  "code": "sitelink-data-missing-title",
                  "message": "Mandatory sitelink title missing"
                }
              },
              "invalid-sitelink-badges-format": {
                "value": {
                  "code": "invalid-sitelink-badges-format",
                  "message": "Value of badges field is not a list"
                }
              },
              "item-not-a-badge": {
                "value": {
                  "code": "item-not-a-badge",
                  "message": "Item ID provided as badge is not allowed as a badge: {item_id}"
                }
              },
              "invalid-input-sitelink-badge": {
                "value": {
                  "code": "invalid-input-sitelink-badge",
                  "message": "Badge input is not an item ID: {value}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidSetItemLabelInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "invalid-item-id": {
                "value": {
                  "code": "invalid-item-id",
                  "message": "Not a valid item ID: {item_id}"
                }
              },
              "invalid-language-code": {
                "value": {
                  "code": "invalid-language-code",
                  "message": "Not a valid language code: {language_code}"
                }
              },
              "invalid-label": {
                "value": {
                  "code": "invalid-label",
                  "message": "Not a valid label: {label}"
                }
              },
              "label-empty": {
                "value": {
                  "code": "label-empty",
                  "message": "Label must not be empty"
                }
              },
              "label-too-long": {
                "value": {
                  "code": "label-too-long",
                  "message": "Label must be no more than {limit} characters long",
                  "context": {
                    "value": "{label}",
                    "character-limit": "{limit}"
                  }
                }
              },
              "label-description-same-value": {
                "value": {
                  "code": "label-description-same-value",
                  "message": "Label and description for language code '{language}' can not have the same value",
                  "context": {
                    "language": "{language}"
                  }
                }
              },
              "item-label-description-duplicate": {
                "value": {
                  "code": "item-label-description-duplicate",
                  "message": "Item '{duplicate_item_id}' already has label '{label}' associated with language code '{language}', using the same description text",
                  "context": {
                    "language": "{language}",
                    "label": "{label}",
                    "description": "{description}",
                    "matching-item-id": "{duplicate_item_id}"
                  }
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidSetPropertyLabelInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "invalid-property-id": {
                "value": {
                  "code": "invalid-property-id",
                  "message": "Not a valid property ID: {property_id}",
                  "context": {
                    "property-id": "{property_id}"
                  }
                }
              },
              "invalid-language-code": {
                "value": {
                  "code": "invalid-language-code",
                  "message": "Not a valid language code: {language_code}"
                }
              },
              "invalid-label": {
                "value": {
                  "code": "invalid-label",
                  "message": "Not a valid label: {label}"
                }
              },
              "label-empty": {
                "value": {
                  "code": "label-empty",
                  "message": "Label must not be empty"
                }
              },
              "label-too-long": {
                "value": {
                  "code": "label-too-long",
                  "message": "Label must be no more than {limit} characters long",
                  "context": {
                    "value": "{label}",
                    "character-limit": "{limit}"
                  }
                }
              },
              "label-description-same-value": {
                "value": {
                  "code": "label-description-same-value",
                  "message": "Label and description for language code '{language}' can not have the same value",
                  "context": {
                    "language": "{language}"
                  }
                }
              },
              "property-label-duplicate": {
                "value": {
                  "code": "property-label-duplicate",
                  "message": "Property '{duplicate_property_id}' already has label '{label}' associated with language code {language}",
                  "context": {
                    "language": "{language}",
                    "label": "{label}",
                    "matching-property-id": "{duplicate_property_id}"
                  }
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidSetItemDescriptionInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "invalid-item-id": {
                "value": {
                  "code": "invalid-item-id",
                  "message": "Not a valid item ID: {item_id}"
                }
              },
              "invalid-language-code": {
                "value": {
                  "code": "invalid-language-code",
                  "message": "Not a valid language code: {language_code}"
                }
              },
              "invalid-description": {
                "value": {
                  "code": "invalid-description",
                  "message": "Not a valid description: {description}"
                }
              },
              "description-empty": {
                "value": {
                  "code": "description-empty",
                  "message": "Description must not be empty"
                }
              },
              "description-too-long": {
                "value": {
                  "code": "description-too-long",
                  "message": "Description must be no more than {limit} characters long",
                  "context": {
                    "value": "{description}",
                    "character-limit": "{limit}"
                  }
                }
              },
              "label-description-same-value": {
                "value": {
                  "code": "label-description-same-value",
                  "message": "Label and description for language code '{language}' can not have the same value",
                  "context": {
                    "language": "{language}"
                  }
                }
              },
              "item-label-description-duplicate": {
                "value": {
                  "code": "item-label-description-duplicate",
                  "message": "Item '{duplicate_item_id}' already has label '{label}' associated with language code '{language}', using the same description text",
                  "context": {
                    "language": "{language}",
                    "label": "{label}",
                    "description": "{description}",
                    "matching-item-id": "{duplicate_item_id}"
                  }
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidSetPropertyDescriptionInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "invalid-property-id": {
                "value": {
                  "code": "invalid-property-id",
                  "message": "Not a valid property ID: {property_id}",
                  "context": {
                    "property-id": "{property_id}"
                  }
                }
              },
              "invalid-language-code": {
                "value": {
                  "code": "invalid-language-code",
                  "message": "Not a valid language code: {language_code}"
                }
              },
              "invalid-description": {
                "value": {
                  "code": "invalid-description",
                  "message": "Not a valid description: {description}"
                }
              },
              "description-empty": {
                "value": {
                  "code": "description-empty",
                  "message": "Description must not be empty"
                }
              },
              "description-too-long": {
                "value": {
                  "code": "description-too-long",
                  "message": "Description must be no more than {limit} characters long",
                  "context": {
                    "value": "{description}",
                    "character-limit": "{limit}"
                  }
                }
              },
              "label-description-same-value": {
                "value": {
                  "code": "label-description-same-value",
                  "message": "Label and description for language code '{language}' can not have the same value",
                  "context": {
                    "language": "{language}"
                  }
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRemoveItemLabelInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "invalid-item-id": {
                "value": {
                  "code": "invalid-item-id",
                  "message": "Not a valid item ID: {item_id}"
                }
              },
              "invalid-language-code": {
                "value": {
                  "code": "invalid-language-code",
                  "message": "Not a valid language code: {language_code}"
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRemovePropertyLabelInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "invalid-property-id": {
                "value": {
                  "code": "invalid-property-id",
                  "message": "Not a valid property ID: {property_id}",
                  "context": {
                    "property-id": "{property_id}"
                  }
                }
              },
              "invalid-language-code": {
                "value": {
                  "code": "invalid-language-code",
                  "message": "Not a valid language code: {language_code}"
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRemoveItemDescriptionInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "invalid-item-id": {
                "value": {
                  "code": "invalid-item-id",
                  "message": "Not a valid item ID: {item_id}"
                }
              },
              "invalid-language-code": {
                "value": {
                  "code": "invalid-language-code",
                  "message": "Not a valid language code: {language_code}"
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidRemovePropertyDescriptionInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "invalid-property-id": {
                "value": {
                  "code": "invalid-property-id",
                  "message": "Not a valid property ID: {property_id}",
                  "context": {
                    "property-id": "{property_id}"
                  }
                }
              },
              "invalid-language-code": {
                "value": {
                  "code": "invalid-language-code",
                  "message": "Not a valid language code: {language_code}"
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidAddItemAliasesInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "invalid-item-id": {
                "value": {
                  "code": "invalid-item-id",
                  "message": "Not a valid item ID: {item_id}"
                }
              },
              "invalid-language-code": {
                "value": {
                  "code": "invalid-language-code",
                  "message": "Not a valid language code: {language_code}"
                }
              },
              "alias-empty": {
                "value": {
                  "code": "alias-empty",
                  "message": "Alias must not be empty"
                }
              },
              "alias-list-empty": {
                "value": {
                  "code": "alias-list-empty",
                  "message": "Alias list must not be empty"
                }
              },
              "alias-too-long": {
                "value": {
                  "code": "alias-too-long",
                  "message": "Alias must be no more than {limit} characters long",
                  "context": {
                    "value": "{alias}",
                    "character-limit": "{limit}"
                  }
                }
              },
              "invalid-alias": {
                "value": {
                  "code": "invalid-alias",
                  "message": "Not a valid alias: '{alias}'",
                  "context": {
                    "alias": "{alias}"
                  }
                }
              },
              "duplicate-alias": {
                "value": {
                  "code": "duplicate-alias",
                  "message": "Alias list contains a duplicate alias: '{alias}'",
                  "context": {
                    "alias": "{alias}"
                  }
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidAddPropertyAliasesInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "invalid-property-id": {
                "value": {
                  "code": "invalid-property-id",
                  "message": "Not a valid property ID: {property_id}",
                  "context": {
                    "property-id": "{property_id}"
                  }
                }
              },
              "invalid-language-code": {
                "value": {
                  "code": "invalid-language-code",
                  "message": "Not a valid language code: {language_code}"
                }
              },
              "alias-empty": {
                "value": {
                  "code": "alias-empty",
                  "message": "Alias must not be empty"
                }
              },
              "alias-list-empty": {
                "value": {
                  "code": "alias-list-empty",
                  "message": "Alias list must not be empty"
                }
              },
              "alias-too-long": {
                "value": {
                  "code": "alias-too-long",
                  "message": "Alias must be no more than {limit} characters long",
                  "context": {
                    "value": "{alias}",
                    "character-limit": "{limit}"
                  }
                }
              },
              "invalid-alias": {
                "value": {
                  "code": "invalid-alias",
                  "message": "Not a valid alias: '{alias}'",
                  "context": {
                    "alias": "{alias}"
                  }
                }
              },
              "duplicate-alias": {
                "value": {
                  "code": "duplicate-alias",
                  "message": "Alias list contains a duplicate alias: '{alias}'",
                  "context": {
                    "alias": "{alias}"
                  }
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidGetSitelinkInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "invalid-item-id": {
                "value": {
                  "code": "invalid-item-id",
                  "message": "Not a valid item ID: {item_id}"
                }
              },
              "invalid-site-id": {
                "value": {
                  "code": "invalid-site-id",
                  "message": "Not a valid site ID: {site_id}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidItemTermByLanguageInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "invalid-item-id": {
                "value": {
                  "code": "invalid-item-id",
                  "message": "Not a valid item ID: {item_id}"
                }
              },
              "invalid-language-code": {
                "value": {
                  "code": "invalid-language-code",
                  "message": "Not a valid language code: {language_code}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPropertyTermByLanguageInput": {
        "description": "The request cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "examples": {
              "invalid-property-id": {
                "value": {
                  "code": "invalid-property-id",
                  "message": "Not a valid property ID: {property_id}",
                  "context": {
                    "property-id": "{property_id}"
                  }
                }
              },
              "invalid-language-code": {
                "value": {
                  "code": "invalid-language-code",
                  "message": "Not a valid language code: {language_code}"
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidItemPatchRequest": {
        "description": "The provided JSON Patch request is invalid",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "invalid-item-id": {
                "value": {
                  "code": "invalid-item-id",
                  "message": "Not a valid item ID: {item_id}"
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              },
              "invalid-patch": {
                "value": {
                  "code": "invalid-patch",
                  "message": "The provided patch is invalid"
                }
              },
              "invalid-patch-operation": {
                "value": {
                  "code": "invalid-patch-operation",
                  "message": "Incorrect JSON patch operation: '{op}'",
                  "context": {
                    "operation": {
                      "op": "{op}",
                      "path": "/some/path"
                    }
                  }
                }
              },
              "invalid-patch-field-type": {
                "value": {
                  "code": "invalid-patch-field-type",
                  "message": "The value of '{field}' must be of type string",
                  "context": {
                    "operation": {
                      "op": "remove",
                      "path": [
                        "not",
                        "a",
                        "string"
                      ]
                    },
                    "field": "path"
                  }
                }
              },
              "missing-json-patch-field": {
                "value": {
                  "code": "missing-json-patch-field",
                  "message": "Missing '{field}' in JSON patch",
                  "context": {
                    "operation": {
                      "op": "remove"
                    },
                    "field": "path"
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPropertyPatchRequest": {
        "description": "The provided JSON Patch request is invalid",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "invalid-property-id": {
                "value": {
                  "code": "invalid-property-id",
                  "message": "Not a valid property ID: {property_id}",
                  "context": {
                    "property-id": "{property_id}"
                  }
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              },
              "invalid-patch": {
                "value": {
                  "code": "invalid-patch",
                  "message": "The provided patch is invalid"
                }
              },
              "invalid-patch-operation": {
                "value": {
                  "code": "invalid-patch-operation",
                  "message": "Incorrect JSON patch operation: '{op}'",
                  "context": {
                    "operation": {
                      "op": "{op}",
                      "path": "/some/path"
                    }
                  }
                }
              },
              "invalid-patch-field-type": {
                "value": {
                  "code": "invalid-patch-field-type",
                  "message": "The value of '{field}' must be of type string",
                  "context": {
                    "operation": {
                      "op": "remove",
                      "path": [
                        "not",
                        "a",
                        "string"
                      ]
                    },
                    "field": "path"
                  }
                }
              },
              "missing-json-patch-field": {
                "value": {
                  "code": "missing-json-patch-field",
                  "message": "Missing '{field}' in JSON patch",
                  "context": {
                    "operation": {
                      "op": "remove"
                    },
                    "field": "path"
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "CannotApplyItemPatch": {
        "description": "The provided JSON Patch cannot be applied",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "redirected-item": {
                "value": {
                  "code": "redirected-item",
                  "message": "Item {item_id} has been merged into {other_id}"
                }
              },
              "patch-test-failed": {
                "value": {
                  "code": "patch-test-failed",
                  "message": "Test operation in the provided patch failed. At path '{path}' expected '{expected}', actual: '{actual}'",
                  "context": {
                    "operation": {
                      "op": "test",
                      "path": "/some/path",
                      "value": "expected value"
                    },
                    "actual-value": "actual value"
                  }
                }
              },
              "patch-target-not-found": {
                "value": {
                  "code": "patch-target-not-found",
                  "message": "Target '{target}' not found on the resource",
                  "context": {
                    "operation": {
                      "op": "replace",
                      "path": "/some/path",
                      "value": "some value"
                    },
                    "field": "path"
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "CannotApplyPropertyPatch": {
        "description": "The provided JSON Patch cannot be applied",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "patch-test-failed": {
                "value": {
                  "code": "patch-test-failed",
                  "message": "Test operation in the provided patch failed. At path '{path}' expected '{expected}', actual: '{actual}'",
                  "context": {
                    "operation": {
                      "op": "test",
                      "path": "/some/path",
                      "value": "expected value"
                    },
                    "actual-value": "actual value"
                  }
                }
              },
              "patch-target-not-found": {
                "value": {
                  "code": "patch-target-not-found",
                  "message": "Target '{target}' not found on the resource",
                  "context": {
                    "operation": {
                      "op": "replace",
                      "path": "/some/path",
                      "value": "some value"
                    },
                    "field": "path"
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPatchedItemLabels": {
        "description": "Applying the provided JSON Patch results in invalid Labels",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "patched-labels-invalid-language-code": {
                "value": {
                  "code": "patched-labels-invalid-language-code",
                  "message": "Not a valid language code '{language_code}' in changed labels",
                  "context": {
                    "language": "{language_code}"
                  }
                }
              },
              "patched-label-empty": {
                "value": {
                  "code": "patched-label-empty",
                  "message": "Changed label for '{language_code}' cannot be empty",
                  "context": {
                    "language": "{language_code}"
                  }
                }
              },
              "patched-label-too-long": {
                "value": {
                  "code": "patched-label-too-long",
                  "message": "Changed label for '{language_code}' must not be more than {limit} characters long",
                  "context": {
                    "language": "{language_code}",
                    "value": "{label}",
                    "limit": 250
                  }
                }
              },
              "patched-label-invalid": {
                "value": {
                  "code": "patched-label-invalid",
                  "message": "Changed label for '{language_code}' is invalid: '{label}'",
                  "context": {
                    "language": "{language_code}",
                    "value": "{label}"
                  }
                }
              },
              "patched-item-label-description-same-value": {
                "value": {
                  "code": "patched-item-label-description-same-value",
                  "message": "Label and description for language code '{language}' can not have the same value",
                  "context": {
                    "language": "{language_code}"
                  }
                }
              },
              "patched-item-label-description-duplicate": {
                "value": {
                  "code": "patched-item-label-description-duplicate",
                  "message": "Item '{duplicate_id}' already has label '{label}' associated with language code '{language}', using the same description text",
                  "context": {
                    "language": "{language_code}",
                    "label": "{label}",
                    "description": "{description}",
                    "matching-item-id": "{duplicate_id}"
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPatchedPropertyLabels": {
        "description": "Applying the provided JSON Patch results in invalid Labels",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "patched-labels-invalid-language-code": {
                "value": {
                  "code": "patched-labels-invalid-language-code",
                  "message": "Not a valid language code '{language_code}' in changed labels",
                  "context": {
                    "language": "{language_code}"
                  }
                }
              },
              "patched-label-empty": {
                "value": {
                  "code": "patched-label-empty",
                  "message": "Changed label for '{language_code}' cannot be empty",
                  "context": {
                    "language": "{language_code}"
                  }
                }
              },
              "patched-label-too-long": {
                "value": {
                  "code": "patched-label-too-long",
                  "message": "Changed label for '{language_code}' must not be more than {limit} characters long",
                  "context": {
                    "language": "{language_code}",
                    "value": "{label}",
                    "limit": 250
                  }
                }
              },
              "patched-label-invalid": {
                "value": {
                  "code": "patched-label-invalid",
                  "message": "Changed label for '{language_code}' is invalid: '{label}'",
                  "context": {
                    "language": "{language_code}",
                    "value": "{label}"
                  }
                }
              },
              "patched-property-label-description-same-value": {
                "value": {
                  "code": "patched-property-label-description-same-value",
                  "message": "Label and description for language code '{language}' can not have the same value",
                  "context": {
                    "language": "{language_code}"
                  }
                }
              },
              "patched-property-label-duplicate": {
                "value": {
                  "code": "patched-property-label-duplicate",
                  "message": "Property '{duplicate_property_id}' already has label '{label}' associated with language code {language}",
                  "context": {
                    "language": "{language}",
                    "label": "{label}",
                    "matching-property-id": "{duplicate_property_id}"
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPatchedItemDescriptions": {
        "description": "Applying the provided JSON Patch results in invalid descriptions",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "patched-descriptions-invalid-language-code": {
                "value": {
                  "code": "patched-descriptions-invalid-language-code",
                  "message": "Not a valid language code '{language_code}' in changed descriptions",
                  "context": {
                    "language": "{language_code}"
                  }
                }
              },
              "patched-description-empty": {
                "value": {
                  "code": "patched-description-empty",
                  "message": "Changed description for '{language_code}' cannot be empty",
                  "context": {
                    "language": "{language_code}"
                  }
                }
              },
              "patched-description-too-long": {
                "value": {
                  "code": "patched-description-too-long",
                  "message": "Changed description for '{language_code}' must not be more than {limit} characters long",
                  "context": {
                    "language": "{language_code}",
                    "value": "{description}",
                    "limit": 250
                  }
                }
              },
              "patched-description-invalid": {
                "value": {
                  "code": "patched-description-invalid",
                  "message": "Changed description for '{language_code}' is invalid: '{label}'",
                  "context": {
                    "language": "{language_code}",
                    "value": "{description}"
                  }
                }
              },
              "patched-item-label-description-same-value": {
                "value": {
                  "code": "patched-item-label-description-same-value",
                  "message": "Label and description for language code '{language}' can not have the same value",
                  "context": {
                    "language": "{language_code}"
                  }
                }
              },
              "patched-item-label-description-duplicate": {
                "value": {
                  "code": "patched-item-label-description-duplicate",
                  "message": "Item '{duplicate_id}' already has label '{label}' associated with language code '{language}', using the same description text",
                  "context": {
                    "language": "{language_code}",
                    "label": "{label}",
                    "description": "{description}",
                    "matching-item-id": "{duplicate_id}"
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPatchedPropertyDescriptions": {
        "description": "Applying the provided JSON Patch results in invalid descriptions",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "patched-descriptions-invalid-language-code": {
                "value": {
                  "code": "patched-descriptions-invalid-language-code",
                  "message": "Not a valid language code '{language_code}' in changed descriptions",
                  "context": {
                    "language": "{language_code}"
                  }
                }
              },
              "patched-description-empty": {
                "value": {
                  "code": "patched-description-empty",
                  "message": "Changed description for '{language_code}' cannot be empty",
                  "context": {
                    "language": "{language_code}"
                  }
                }
              },
              "patched-description-too-long": {
                "value": {
                  "code": "patched-description-too-long",
                  "message": "Changed description for '{language_code}' must not be more than {limit} characters long",
                  "context": {
                    "language": "{language_code}",
                    "value": "{description}",
                    "limit": 250
                  }
                }
              },
              "patched-description-invalid": {
                "value": {
                  "code": "patched-description-invalid",
                  "message": "Changed description for '{language_code}' is invalid: '{label}'",
                  "context": {
                    "language": "{language_code}",
                    "value": "{description}"
                  }
                }
              },
              "patched-property-label-description-same-value": {
                "value": {
                  "code": "patched-property-label-description-same-value",
                  "message": "Label and description for language code '{language}' can not have the same value",
                  "context": {
                    "language": "{language_code}"
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPatchedAliases": {
        "description": "Applying the provided JSON Patch results in invalid Aliases",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "patched-aliases-invalid-language-code": {
                "value": {
                  "code": "patched-aliases-invalid-language-code",
                  "message": "Not a valid language code '{language_code}' in changed aliases",
                  "context": {
                    "language": "{language_code}"
                  }
                }
              },
              "patched-alias-empty": {
                "value": {
                  "code": "patched-alias-empty",
                  "message": "Changed alias for '{language_code}' cannot be empty",
                  "context": {
                    "language": "{language_code}"
                  }
                }
              },
              "patched-alias-too-long": {
                "value": {
                  "code": "patched-alias-too-long",
                  "message": "Changed alias for '{language_code}' must not be more than {limit} characters long",
                  "context": {
                    "language": "{language_code}",
                    "value": "{alias}",
                    "limit": 250
                  }
                }
              },
              "patched-aliases-invalid-field": {
                "value": {
                  "code": "patched-aliases-invalid-field",
                  "message": "Patched value for '{field}' is invalid",
                  "context": {
                    "path": "{field}",
                    "value": "{value}"
                  }
                }
              },
              "patched-duplicate-alias": {
                "value": {
                  "code": "patched-duplicate-alias",
                  "message": "Aliases in language '{language_code}' contain duplicate alias: '{alias}'",
                  "context": {
                    "alias": "{alias}",
                    "language": "{language_code}"
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidStatementPatch": {
        "description": "The provided JSON Patch is invalid",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "invalid-statement-id": {
                "value": {
                  "code": "invalid-statement-id",
                  "message": "Not a valid statement ID: {statement_id}"
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              },
              "invalid-operation-change-statement-id": {
                "value": {
                  "code": "invalid-operation-change-statement-id",
                  "message": "Cannot change the ID of the existing statement"
                }
              },
              "invalid-operation-change-property-of-statement": {
                "value": {
                  "code": "invalid-operation-change-property-of-statement",
                  "message": "Cannot change the property of the existing statement"
                }
              },
              "invalid-patch": {
                "value": {
                  "code": "invalid-patch",
                  "message": "The provided patch is invalid"
                }
              },
              "invalid-patch-operation": {
                "value": {
                  "code": "invalid-patch-operation",
                  "message": "Incorrect JSON patch operation: '{op}'",
                  "context": {
                    "operation": {
                      "op": "{op}",
                      "path": "/some/path"
                    }
                  }
                }
              },
              "invalid-patch-field-type": {
                "value": {
                  "code": "invalid-patch-field-type",
                  "message": "The value of '{field}' must be of type string",
                  "context": {
                    "operation": {
                      "op": "remove",
                      "path": [
                        "not",
                        "a",
                        "string"
                      ]
                    },
                    "field": "path"
                  }
                }
              },
              "missing-json-patch-field": {
                "value": {
                  "code": "missing-json-patch-field",
                  "message": "Missing '{field}' in JSON patch",
                  "context": {
                    "operation": {
                      "op": "remove"
                    },
                    "field": "path"
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidItemStatementPatch": {
        "description": "The provided JSON Patch is invalid",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "invalid-item-id": {
                "value": {
                  "code": "invalid-item-id",
                  "message": "Not a valid item ID: {item_id}"
                }
              },
              "invalid-statement-id": {
                "value": {
                  "code": "invalid-statement-id",
                  "message": "Not a valid statement ID: {statement_id}"
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              },
              "invalid-operation-change-statement-id": {
                "value": {
                  "code": "invalid-operation-change-statement-id",
                  "message": "Cannot change the ID of the existing statement"
                }
              },
              "invalid-operation-change-property-of-statement": {
                "value": {
                  "code": "invalid-operation-change-property-of-statement",
                  "message": "Cannot change the property of the existing statement"
                }
              },
              "invalid-patch": {
                "value": {
                  "code": "invalid-patch",
                  "message": "The provided patch is invalid"
                }
              },
              "invalid-patch-operation": {
                "value": {
                  "code": "invalid-patch-operation",
                  "message": "Incorrect JSON patch operation: '{op}'",
                  "context": {
                    "operation": {
                      "op": "{op}",
                      "path": "/some/path"
                    }
                  }
                }
              },
              "invalid-patch-field-type": {
                "value": {
                  "code": "invalid-patch-field-type",
                  "message": "The value of '{field}' must be of type string",
                  "context": {
                    "operation": {
                      "op": "remove",
                      "path": [
                        "not",
                        "a",
                        "string"
                      ]
                    },
                    "field": "path"
                  }
                }
              },
              "missing-json-patch-field": {
                "value": {
                  "code": "missing-json-patch-field",
                  "message": "Missing '{field}' in JSON patch",
                  "context": {
                    "operation": {
                      "op": "remove"
                    },
                    "field": "path"
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPropertyStatementPatch": {
        "description": "The provided JSON Patch is invalid",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "invalid-property-id": {
                "value": {
                  "code": "invalid-property-id",
                  "message": "Not a valid property ID: {property_id}",
                  "context": {
                    "property-id": "{property_id}"
                  }
                }
              },
              "invalid-statement-id": {
                "value": {
                  "code": "invalid-statement-id",
                  "message": "Not a valid statement ID: {statement_id}"
                }
              },
              "invalid-edit-tag": {
                "value": {
                  "code": "invalid-edit-tag",
                  "message": "Invalid MediaWiki tag: {tag}"
                }
              },
              "comment-too-long": {
                "value": {
                  "code": "comment-too-long",
                  "message": "Comment must not be longer than 500 characters"
                }
              },
              "invalid-operation-change-statement-id": {
                "value": {
                  "code": "invalid-operation-change-statement-id",
                  "message": "Cannot change the ID of the existing statement"
                }
              },
              "invalid-operation-change-property-of-statement": {
                "value": {
                  "code": "invalid-operation-change-property-of-statement",
                  "message": "Cannot change the property of the existing statement"
                }
              },
              "invalid-patch": {
                "value": {
                  "code": "invalid-patch",
                  "message": "The provided patch is invalid"
                }
              },
              "invalid-patch-operation": {
                "value": {
                  "code": "invalid-patch-operation",
                  "message": "Incorrect JSON patch operation: '{op}'",
                  "context": {
                    "operation": {
                      "op": "{op}",
                      "path": "/some/path"
                    }
                  }
                }
              },
              "invalid-patch-field-type": {
                "value": {
                  "code": "invalid-patch-field-type",
                  "message": "The value of '{field}' must be of type string",
                  "context": {
                    "operation": {
                      "op": "remove",
                      "path": [
                        "not",
                        "a",
                        "string"
                      ]
                    },
                    "field": "path"
                  }
                }
              },
              "missing-json-patch-field": {
                "value": {
                  "code": "missing-json-patch-field",
                  "message": "Missing '{field}' in JSON patch",
                  "context": {
                    "operation": {
                      "op": "remove"
                    },
                    "field": "path"
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "CannotApplyStatementPatch": {
        "description": "The provided JSON Patch cannot be applied",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "patch-test-failed": {
                "value": {
                  "code": "patch-test-failed",
                  "message": "Test operation in the provided patch failed. At path '{path}' expected '{expected}', actual: '{actual}'",
                  "context": {
                    "operation": {
                      "op": "test",
                      "path": "/some/path",
                      "value": "expected value"
                    },
                    "actual-value": "actual value"
                  }
                }
              },
              "patch-target-not-found": {
                "value": {
                  "code": "patch-target-not-found",
                  "message": "Target '{target}' not found on the resource",
                  "context": {
                    "operation": {
                      "op": "replace",
                      "path": "/some/path",
                      "value": "some value"
                    },
                    "field": "path"
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "InvalidPatchedStatement": {
        "description": "Applying the provided JSON Patch results in an invalid statement",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                {
                  "properties": {
                    "context": {
                      "type": "object"
                    }
                  }
                }
              ]
            },
            "examples": {
              "patched-statement-missing-field": {
                "value": {
                  "code": "patched-statement-missing-field",
                  "message": "Mandatory field missing in the patched statement: {field}",
                  "context": {
                    "path": "{field}"
                  }
                }
              },
              "patched-statement-invalid-field": {
                "value": {
                  "code": "patched-statement-invalid-field",
                  "message": "Invalid input for '{field}' in the patched statement",
                  "context": {
                    "path": "{field}",
                    "value": "{value}"
                  }
                }
              }
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "PreconditionFailedError": {
        "description": "The condition defined by a conditional request header is not fulfilled"
      },
      "InvalidMediaType": {
        "description": "The media type specified by the `Content-Type` header is not allowed on this endpoint",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "example": {
              "code": "unsupported-content-type",
              "message": "Unsupported Content-Type: 'application/x-www-form-urlencoded'",
              "httpCode": 415,
              "httpReason": "Unsupported Media Type"
            }
          }
        }
      },
      "UnexpectedError": {
        "description": "An unexpected error has occurred",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            },
            "example": {
              "code": "unexpected-error",
              "message": "Unexpected Error"
            }
          }
        },
        "headers": {
          "Content-Language": {
            "schema": {
              "type": "string"
            },
            "description": "Language code of the language in which error message is provided"
          }
        }
      },
      "Item": {
        "description": "A single Wikibase Item",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "Q42"
                    },
                    "type": {
                      "type": "string",
                      "example": "item"
                    },
                    "labels": {
                      "allOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "example": {
                            "en": "en-label",
                            "fr": "fr-label"
                          }
                        },
                        {
                          "example": {
                            "en": "Douglas Adams",
                            "fr": "Douglas Adams"
                          }
                        }
                      ]
                    },
                    "descriptions": {
                      "allOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "example": {
                            "en": "en-description",
                            "fr": "fr-description"
                          }
                        },
                        {
                          "example": {
                            "en": "English science fiction writer and humourist",
                            "fr": "écrivain de science-fiction et humoriste anglais"
                          }
                        }
                      ]
                    },
                    "aliases": {
                      "allOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "example": {
                            "en": [
                              "en-alias1",
                              "en-alias2"
                            ],
                            "fr": [
                              "fr-alias1",
                              "fr-alias2"
                            ]
                          }
                        },
                        {
                          "example": {
                            "en": [
                              "Douglas Noel Adams",
                              "Douglas Noël Adams"
                            ],
                            "fr": [
                              "Douglas Noel Adams"
                            ]
                          }
                        }
                      ]
                    },
                    "sitelinks": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "badges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "title": "Douglas Adams",
                          "badges": [],
                          "url": "https://de.wikipedia.org/wiki/Douglas_Adams"
                        }
                      },
                      "example": {
                        "afwiki": {
                          "title": "Douglas Adams",
                          "badges": [
                            "Q17437798"
                          ],
                          "url": "https://af.wikipedia.org/wiki/Douglas_Adams"
                        },
                        "arwiki": {
                          "title": "دوغلاس آدمز",
                          "badges": [],
                          "url": "https://ar.wikipedia.org/wiki/%D8%AF%D9%88%D8%BA%D9%84%D8%A7%D8%B3_%D8%A2%D8%AF%D9%85%D8%B2"
                        }
                      }
                    },
                    "statements": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Statement"
                        }
                      }
                    }
                  }
                },
                {
                  "required": [
                    "id",
                    "type",
                    "labels",
                    "descriptions",
                    "aliases",
                    "statements",
                    "sitelinks"
                  ],
                  "properties": {
                    "sitelinks": {
                      "additionalProperties": {
                        "required": [
                          "title",
                          "badges",
                          "url"
                        ]
                      }
                    },
                    "statements": {
                      "additionalProperties": {
                        "items": {
                          "allOf": [
                            {
                              "required": [
                                "property",
                                "value"
                              ],
                              "properties": {
                                "property": {
                                  "required": [
                                    "id",
                                    "data-type"
                                  ]
                                },
                                "value": {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ]
                                }
                              }
                            },
                            {
                              "required": [
                                "id",
                                "rank",
                                "qualifiers",
                                "references"
                              ],
                              "properties": {
                                "qualifiers": {
                                  "items": {
                                    "required": [
                                      "property",
                                      "value"
                                    ],
                                    "properties": {
                                      "property": {
                                        "required": [
                                          "id",
                                          "data-type"
                                        ]
                                      },
                                      "value": {
                                        "type": "object",
                                        "required": [
                                          "type"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "references": {
                                  "items": {
                                    "required": [
                                      "hash",
                                      "parts"
                                    ],
                                    "properties": {
                                      "parts": {
                                        "items": {
                                          "required": [
                                            "property",
                                            "value"
                                          ],
                                          "properties": {
                                            "property": {
                                              "required": [
                                                "id",
                                                "data-type"
                                              ]
                                            },
                                            "value": {
                                              "type": "object",
                                              "required": [
                                                "type"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "Sitelinks": {
        "description": "A list of sitelinks by item id",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "badges": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "example": {
                  "title": "Douglas Adams",
                  "badges": [],
                  "url": "https://de.wikipedia.org/wiki/Douglas_Adams"
                }
              },
              "example": {
                "afwiki": {
                  "title": "Douglas Adams",
                  "badges": [
                    "Q17437798"
                  ],
                  "url": "https://af.wikipedia.org/wiki/Douglas_Adams"
                },
                "arwiki": {
                  "title": "دوغلاس آدمز",
                  "badges": [],
                  "url": "https://ar.wikipedia.org/wiki/%D8%AF%D9%88%D8%BA%D9%84%D8%A7%D8%B3_%D8%A2%D8%AF%D9%85%D8%B2"
                }
              }
            }
          }
        }
      },
      "Sitelink": {
        "description": "A sitelink by item id",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "badges": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "url": {
                  "type": "string"
                }
              },
              "example": {
                "title": "Douglas Adams",
                "badges": [],
                "url": "https://de.wikipedia.org/wiki/Douglas_Adams"
              }
            }
          }
        }
      },
      "ItemLabels": {
        "description": "Item's labels by language",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "en": "en-label",
                "fr": "fr-label"
              }
            }
          }
        }
      },
      "ItemDescriptions": {
        "description": "Item's descriptions by language",
        "headers": {
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "en": "en-description",
                "fr": "fr-description"
              }
            }
          }
        }
      },
      "ItemAliases": {
        "description": "Item's aliases by language",
        "headers": {
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "example": {
                "en": [
                  "en-alias1",
                  "en-alias2"
                ],
                "fr": [
                  "fr-alias1",
                  "fr-alias2"
                ]
              }
            }
          }
        }
      },
      "ItemAliasesInLanguage": {
        "description": "Item's aliases in a specific language",
        "headers": {
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "Douglas Noel Adams",
                "Douglas Noël Adams"
              ]
            }
          }
        }
      },
      "Property": {
        "description": "A single Wikibase Property",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "P31"
                    },
                    "type": {
                      "type": "string",
                      "example": "property"
                    },
                    "data-type": {
                      "type": "string",
                      "example": "wikibase-item"
                    },
                    "labels": {
                      "allOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "example": {
                            "en": "en-label",
                            "fr": "fr-label"
                          }
                        },
                        {
                          "example": {
                            "en": "Instance of",
                            "fr": "nature de l'élément"
                          }
                        }
                      ]
                    },
                    "descriptions": {
                      "allOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "example": {
                            "en": "en-description",
                            "fr": "fr-description"
                          }
                        },
                        {
                          "example": {
                            "en": "that class of which this subject is a particular example and member; different from P279 (subclass of); for example: K2 is an instance of mountain; volcano is a subclass of mountain (and an instance of volcanic landform)",
                            "fr": "cet élément est un exemple spécifique de cette classe qui en précise la nature. Ne pas confondre avec la propriété P279 (sous-classe de)"
                          }
                        }
                      ]
                    },
                    "aliases": {
                      "allOf": [
                        {
                          "type": "object",
                          "additionalProperties": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "example": {
                            "en": [
                              "en-alias1",
                              "en-alias2"
                            ],
                            "fr": [
                              "fr-alias1",
                              "fr-alias2"
                            ]
                          }
                        },
                        {
                          "example": {
                            "en": [
                              "is a",
                              "is an"
                            ],
                            "fr": [
                              "est un"
                            ]
                          }
                        }
                      ]
                    },
                    "statements": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "allOf": [
                            {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "description": "The globally unique identifier for this Statement",
                                      "type": "string",
                                      "readOnly": true,
                                      "example": "Q11$6403c562-401a-2b26-85cc-8327801145e1"
                                    },
                                    "rank": {
                                      "description": "The rank of the Statement",
                                      "type": "string",
                                      "enum": [
                                        "deprecated",
                                        "normal",
                                        "preferred"
                                      ],
                                      "default": "normal"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "property": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "The ID of the Property",
                                          "type": "string",
                                          "example": "P92"
                                        },
                                        "data-type": {
                                          "description": "The data type of the Property",
                                          "type": "string",
                                          "readOnly": true,
                                          "nullable": true,
                                          "example": "string"
                                        }
                                      }
                                    },
                                    "value": {
                                      "type": "object",
                                      "properties": {
                                        "content": {
                                          "description": "The value, if type == \"value\", otherwise omitted",
                                          "example": "I am a goat"
                                        },
                                        "type": {
                                          "description": "The value type",
                                          "type": "string",
                                          "enum": [
                                            "value",
                                            "somevalue",
                                            "novalue"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "qualifiers": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "property": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "description": "The ID of the Property",
                                                "type": "string",
                                                "example": "P92"
                                              },
                                              "data-type": {
                                                "description": "The data type of the Property",
                                                "type": "string",
                                                "readOnly": true,
                                                "nullable": true,
                                                "example": "string"
                                              }
                                            }
                                          },
                                          "value": {
                                            "type": "object",
                                            "properties": {
                                              "content": {
                                                "description": "The value, if type == \"value\", otherwise omitted",
                                                "example": "I am a goat"
                                              },
                                              "type": {
                                                "description": "The value type",
                                                "type": "string",
                                                "enum": [
                                                  "value",
                                                  "somevalue",
                                                  "novalue"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "default": []
                                    },
                                    "references": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "hash": {
                                            "description": "Hash of the Reference",
                                            "type": "string",
                                            "readOnly": true,
                                            "example": "455481eeac76e6a8af71a6b493c073d54788e7e9"
                                          },
                                          "parts": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "property": {
                                                  "type": "object",
                                                  "properties": {
                                                    "id": {
                                                      "description": "The ID of the Property",
                                                      "type": "string",
                                                      "example": "P92"
                                                    },
                                                    "data-type": {
                                                      "description": "The data type of the Property",
                                                      "type": "string",
                                                      "readOnly": true,
                                                      "nullable": true,
                                                      "example": "string"
                                                    }
                                                  }
                                                },
                                                "value": {
                                                  "type": "object",
                                                  "properties": {
                                                    "content": {
                                                      "description": "The value, if type == \"value\", otherwise omitted",
                                                      "example": "I am a goat"
                                                    },
                                                    "type": {
                                                      "description": "The value type",
                                                      "type": "string",
                                                      "enum": [
                                                        "value",
                                                        "somevalue",
                                                        "novalue"
                                                      ]
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "default": []
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "properties": {
                                "id": {
                                  "example": "P31$6403c562-401a-2b26-85cc-8327801145e1"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "required": [
                    "id",
                    "type",
                    "data-type",
                    "labels",
                    "descriptions",
                    "aliases",
                    "statements"
                  ],
                  "properties": {
                    "statements": {
                      "additionalProperties": {
                        "items": {
                          "allOf": [
                            {
                              "required": [
                                "property",
                                "value"
                              ],
                              "properties": {
                                "property": {
                                  "required": [
                                    "id",
                                    "data-type"
                                  ]
                                },
                                "value": {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ]
                                }
                              }
                            },
                            {
                              "required": [
                                "id",
                                "rank",
                                "qualifiers",
                                "references"
                              ],
                              "properties": {
                                "qualifiers": {
                                  "items": {
                                    "required": [
                                      "property",
                                      "value"
                                    ],
                                    "properties": {
                                      "property": {
                                        "required": [
                                          "id",
                                          "data-type"
                                        ]
                                      },
                                      "value": {
                                        "type": "object",
                                        "required": [
                                          "type"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "references": {
                                  "items": {
                                    "required": [
                                      "hash",
                                      "parts"
                                    ],
                                    "properties": {
                                      "parts": {
                                        "items": {
                                          "required": [
                                            "property",
                                            "value"
                                          ],
                                          "properties": {
                                            "property": {
                                              "required": [
                                                "id",
                                                "data-type"
                                              ]
                                            },
                                            "value": {
                                              "type": "object",
                                              "required": [
                                                "type"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "PropertyLabels": {
        "description": "Property's labels by language",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "en": "en-label",
                "fr": "fr-label"
              }
            }
          }
        }
      },
      "Label": {
        "description": "A label in a specific language",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "string",
              "example": "an example label"
            }
          }
        }
      },
      "PropertyDescriptions": {
        "description": "Property's descriptions by language",
        "headers": {
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "en": "en-description",
                "fr": "fr-description"
              }
            }
          }
        }
      },
      "Description": {
        "description": "A description in a specific language",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "string",
              "example": "an example description"
            }
          }
        }
      },
      "PropertyAliases": {
        "description": "Property's aliases by language",
        "headers": {
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "example": {
                "en": [
                  "en-alias1",
                  "en-alias2"
                ],
                "fr": [
                  "fr-alias1",
                  "fr-alias2"
                ]
              }
            }
          }
        }
      },
      "PropertyAliasesInLanguage": {
        "description": "Property's aliases in a specific language",
        "headers": {
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "is a",
                "example of"
              ]
            }
          }
        }
      },
      "Statement": {
        "description": "A single Wikibase Statement. Please note that the value of the `ETag` header field refers to the entity's revision ID.",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Statement"
            },
            "examples": {
              "Statement on an Item": {
                "value": {
                  "id": "Q42$F078E5B3-F9A8-480E-B7AC-D97778CBBEF9",
                  "rank": "normal",
                  "property": {
                    "id": "P31",
                    "data-type": "wikibase-item"
                  },
                  "value": {
                    "type": "value",
                    "content": "Q5"
                  },
                  "qualifiers": [],
                  "references": []
                }
              },
              "Statement on a Property": {
                "value": {
                  "id": "P31$9d042001-4a7e-2432-a7e1-233360062379",
                  "rank": "normal",
                  "property": {
                    "id": "P31",
                    "data-type": "wikibase-item"
                  },
                  "value": {
                    "type": "value",
                    "content": "Q5"
                  },
                  "qualifiers": [],
                  "references": []
                }
              }
            }
          }
        }
      },
      "ItemStatement": {
        "description": "A single Wikibase Statement. Please note that the value of the `ETag` header field refers to the Item's revision ID.",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Statement"
            },
            "example": {
              "id": "Q42$F078E5B3-F9A8-480E-B7AC-D97778CBBEF9",
              "rank": "normal",
              "property": {
                "id": "P31",
                "data-type": "wikibase-item"
              },
              "value": {
                "type": "value",
                "content": "Q5"
              },
              "qualifiers": [],
              "references": []
            }
          }
        }
      },
      "PropertyStatement": {
        "description": "A single Wikibase Statement. Please note that the value of the `ETag` header field refers to the Property's Revision ID.",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Statement"
            },
            "example": {
              "id": "P31$9d042001-4a7e-2432-a7e1-233360062379",
              "rank": "normal",
              "property": {
                "id": "P31",
                "data-type": "wikibase-item"
              },
              "value": {
                "type": "value",
                "content": "Q5"
              },
              "qualifiers": [],
              "references": []
            }
          }
        }
      },
      "ItemStatementCreated": {
        "description": "A single newly created Wikibase Statement. Please note that the value of the `ETag` header field refers to the entity's revision ID.",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          },
          "Location": {
            "schema": {
              "type": "string"
            },
            "description": "The URI of the newly created statement"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Statement"
            }
          }
        }
      },
      "PropertyStatementCreated": {
        "description": "A single newly created Wikibase Statement. Please note that the value of the `ETag` header field refers to the entity's revision ID.",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          },
          "Location": {
            "schema": {
              "type": "string"
            },
            "description": "The URI of the newly created statement"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Statement"
            },
            "example": {
              "id": "P31$9d042001-4a7e-2432-a7e1-233360062379",
              "rank": "normal",
              "property": {
                "id": "P31",
                "data-type": "wikibase-item"
              },
              "value": {
                "type": "value",
                "content": "Q5"
              },
              "qualifiers": [],
              "references": []
            }
          }
        }
      },
      "ItemStatements": {
        "description": "The statements of an Item",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Statement"
                }
              }
            },
            "example": {
              "P370": [
                {
                  "id": "Q11$6403c562-401a-2b26-85cc-8327801145e1",
                  "rank": "normal",
                  "property": {
                    "id": "P370",
                    "data-type": "string"
                  },
                  "value": {
                    "content": "I am a goat",
                    "type": "value"
                  },
                  "qualifiers": [],
                  "references": []
                }
              ],
              "P92": [
                {
                  "id": "Q11$6403c562-401a-2b26-85cc-8327801145e1",
                  "rank": "normal",
                  "property": {
                    "id": "P92",
                    "data-type": "string"
                  },
                  "value": {
                    "content": "I am a goat",
                    "type": "value"
                  },
                  "qualifiers": [],
                  "references": []
                }
              ]
            }
          }
        }
      },
      "PropertyStatements": {
        "description": "The statements of a Property",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          },
          "X-Authenticated-User": {
            "schema": {
              "type": "string"
            },
            "description": "Optional username of the user making the request"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Statement"
                }
              }
            },
            "example": {
              "P370": [
                {
                  "id": "P11$6403c562-401a-2b26-85cc-8327801145e1",
                  "rank": "normal",
                  "property": {
                    "id": "P370",
                    "data-type": "string"
                  },
                  "value": {
                    "content": "I am a goat",
                    "type": "value"
                  },
                  "qualifiers": [],
                  "references": []
                }
              ],
              "P92": [
                {
                  "id": "P11$6403c562-401a-2b26-85cc-8327801145e1",
                  "rank": "normal",
                  "property": {
                    "id": "P92",
                    "data-type": "string"
                  },
                  "value": {
                    "content": "I am a goat",
                    "type": "value"
                  },
                  "qualifiers": [],
                  "references": []
                }
              ]
            }
          }
        }
      },
      "NotModified": {
        "description": "The specified resource has not been modified since last provided revision number or date",
        "headers": {
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          }
        }
      },
      "Moved": {
        "description": "The specified resource has permanently moved to the indicated location",
        "headers": {
          "Location": {
            "schema": {
              "type": "string"
            },
            "description": "The URL to which the requested resource has been moved"
          }
        }
      }
    },
    "schemas": {
      "Item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "Q42"
          },
          "type": {
            "type": "string",
            "example": "item"
          },
          "labels": {
            "allOf": [
              {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "example": {
                  "en": "en-label",
                  "fr": "fr-label"
                }
              },
              {
                "example": {
                  "en": "Douglas Adams",
                  "fr": "Douglas Adams"
                }
              }
            ]
          },
          "descriptions": {
            "allOf": [
              {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "example": {
                  "en": "en-description",
                  "fr": "fr-description"
                }
              },
              {
                "example": {
                  "en": "English science fiction writer and humourist",
                  "fr": "écrivain de science-fiction et humoriste anglais"
                }
              }
            ]
          },
          "aliases": {
            "allOf": [
              {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "example": {
                  "en": [
                    "en-alias1",
                    "en-alias2"
                  ],
                  "fr": [
                    "fr-alias1",
                    "fr-alias2"
                  ]
                }
              },
              {
                "example": {
                  "en": [
                    "Douglas Noel Adams",
                    "Douglas Noël Adams"
                  ],
                  "fr": [
                    "Douglas Noel Adams"
                  ]
                }
              }
            ]
          },
          "sitelinks": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "badges": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "url": {
                  "type": "string"
                }
              },
              "example": {
                "title": "Douglas Adams",
                "badges": [],
                "url": "https://de.wikipedia.org/wiki/Douglas_Adams"
              }
            },
            "example": {
              "afwiki": {
                "title": "Douglas Adams",
                "badges": [
                  "Q17437798"
                ],
                "url": "https://af.wikipedia.org/wiki/Douglas_Adams"
              },
              "arwiki": {
                "title": "دوغلاس آدمز",
                "badges": [],
                "url": "https://ar.wikipedia.org/wiki/%D8%AF%D9%88%D8%BA%D9%84%D8%A7%D8%B3_%D8%A2%D8%AF%D9%85%D8%B2"
              }
            }
          },
          "statements": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The globally unique identifier for this Statement",
                        "type": "string",
                        "readOnly": true,
                        "example": "Q11$6403c562-401a-2b26-85cc-8327801145e1"
                      },
                      "rank": {
                        "description": "The rank of the Statement",
                        "type": "string",
                        "enum": [
                          "deprecated",
                          "normal",
                          "preferred"
                        ],
                        "default": "normal"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "property": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "The ID of the Property",
                            "type": "string",
                            "example": "P92"
                          },
                          "data-type": {
                            "description": "The data type of the Property",
                            "type": "string",
                            "readOnly": true,
                            "nullable": true,
                            "example": "string"
                          }
                        }
                      },
                      "value": {
                        "type": "object",
                        "properties": {
                          "content": {
                            "description": "The value, if type == \"value\", otherwise omitted",
                            "example": "I am a goat"
                          },
                          "type": {
                            "description": "The value type",
                            "type": "string",
                            "enum": [
                              "value",
                              "somevalue",
                              "novalue"
                            ]
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "qualifiers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "property": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "The ID of the Property",
                                  "type": "string",
                                  "example": "P92"
                                },
                                "data-type": {
                                  "description": "The data type of the Property",
                                  "type": "string",
                                  "readOnly": true,
                                  "nullable": true,
                                  "example": "string"
                                }
                              }
                            },
                            "value": {
                              "type": "object",
                              "properties": {
                                "content": {
                                  "description": "The value, if type == \"value\", otherwise omitted",
                                  "example": "I am a goat"
                                },
                                "type": {
                                  "description": "The value type",
                                  "type": "string",
                                  "enum": [
                                    "value",
                                    "somevalue",
                                    "novalue"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "default": []
                      },
                      "references": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "hash": {
                              "description": "Hash of the Reference",
                              "type": "string",
                              "readOnly": true,
                              "example": "455481eeac76e6a8af71a6b493c073d54788e7e9"
                            },
                            "parts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "property": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "The ID of the Property",
                                        "type": "string",
                                        "example": "P92"
                                      },
                                      "data-type": {
                                        "description": "The data type of the Property",
                                        "type": "string",
                                        "readOnly": true,
                                        "nullable": true,
                                        "example": "string"
                                      }
                                    }
                                  },
                                  "value": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "description": "The value, if type == \"value\", otherwise omitted",
                                        "example": "I am a goat"
                                      },
                                      "type": {
                                        "description": "The value type",
                                        "type": "string",
                                        "enum": [
                                          "value",
                                          "somevalue",
                                          "novalue"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "default": []
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "Property": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "P31"
          },
          "type": {
            "type": "string",
            "example": "property"
          },
          "data-type": {
            "type": "string",
            "example": "wikibase-item"
          },
          "labels": {
            "allOf": [
              {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "example": {
                  "en": "en-label",
                  "fr": "fr-label"
                }
              },
              {
                "example": {
                  "en": "Instance of",
                  "fr": "nature de l'élément"
                }
              }
            ]
          },
          "descriptions": {
            "allOf": [
              {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "example": {
                  "en": "en-description",
                  "fr": "fr-description"
                }
              },
              {
                "example": {
                  "en": "that class of which this subject is a particular example and member; different from P279 (subclass of); for example: K2 is an instance of mountain; volcano is a subclass of mountain (and an instance of volcanic landform)",
                  "fr": "cet élément est un exemple spécifique de cette classe qui en précise la nature. Ne pas confondre avec la propriété P279 (sous-classe de)"
                }
              }
            ]
          },
          "aliases": {
            "allOf": [
              {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "example": {
                  "en": [
                    "en-alias1",
                    "en-alias2"
                  ],
                  "fr": [
                    "fr-alias1",
                    "fr-alias2"
                  ]
                }
              },
              {
                "example": {
                  "en": [
                    "is a",
                    "is an"
                  ],
                  "fr": [
                    "est un"
                  ]
                }
              }
            ]
          },
          "statements": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "The globally unique identifier for this Statement",
                            "type": "string",
                            "readOnly": true,
                            "example": "Q11$6403c562-401a-2b26-85cc-8327801145e1"
                          },
                          "rank": {
                            "description": "The rank of the Statement",
                            "type": "string",
                            "enum": [
                              "deprecated",
                              "normal",
                              "preferred"
                            ],
                            "default": "normal"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "property": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "The ID of the Property",
                                "type": "string",
                                "example": "P92"
                              },
                              "data-type": {
                                "description": "The data type of the Property",
                                "type": "string",
                                "readOnly": true,
                                "nullable": true,
                                "example": "string"
                              }
                            }
                          },
                          "value": {
                            "type": "object",
                            "properties": {
                              "content": {
                                "description": "The value, if type == \"value\", otherwise omitted",
                                "example": "I am a goat"
                              },
                              "type": {
                                "description": "The value type",
                                "type": "string",
                                "enum": [
                                  "value",
                                  "somevalue",
                                  "novalue"
                                ]
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "qualifiers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "property": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "description": "The ID of the Property",
                                      "type": "string",
                                      "example": "P92"
                                    },
                                    "data-type": {
                                      "description": "The data type of the Property",
                                      "type": "string",
                                      "readOnly": true,
                                      "nullable": true,
                                      "example": "string"
                                    }
                                  }
                                },
                                "value": {
                                  "type": "object",
                                  "properties": {
                                    "content": {
                                      "description": "The value, if type == \"value\", otherwise omitted",
                                      "example": "I am a goat"
                                    },
                                    "type": {
                                      "description": "The value type",
                                      "type": "string",
                                      "enum": [
                                        "value",
                                        "somevalue",
                                        "novalue"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "default": []
                          },
                          "references": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "hash": {
                                  "description": "Hash of the Reference",
                                  "type": "string",
                                  "readOnly": true,
                                  "example": "455481eeac76e6a8af71a6b493c073d54788e7e9"
                                },
                                "parts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "property": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "description": "The ID of the Property",
                                            "type": "string",
                                            "example": "P92"
                                          },
                                          "data-type": {
                                            "description": "The data type of the Property",
                                            "type": "string",
                                            "readOnly": true,
                                            "nullable": true,
                                            "example": "string"
                                          }
                                        }
                                      },
                                      "value": {
                                        "type": "object",
                                        "properties": {
                                          "content": {
                                            "description": "The value, if type == \"value\", otherwise omitted",
                                            "example": "I am a goat"
                                          },
                                          "type": {
                                            "description": "The value type",
                                            "type": "string",
                                            "enum": [
                                              "value",
                                              "somevalue",
                                              "novalue"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "default": []
                          }
                        }
                      }
                    ]
                  },
                  {
                    "properties": {
                      "id": {
                        "example": "P31$6403c562-401a-2b26-85cc-8327801145e1"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "Labels": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "example": {
          "en": "en-label",
          "fr": "fr-label"
        }
      },
      "Descriptions": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "example": {
          "en": "en-description",
          "fr": "fr-description"
        }
      },
      "Aliases": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "example": {
          "en": [
            "en-alias1",
            "en-alias2"
          ],
          "fr": [
            "fr-alias1",
            "fr-alias2"
          ]
        }
      },
      "Sitelink": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "badges": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "url": {
            "type": "string"
          }
        },
        "example": {
          "title": "Douglas Adams",
          "badges": [],
          "url": "https://de.wikipedia.org/wiki/Douglas_Adams"
        }
      },
      "Statement": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "description": "The globally unique identifier for this Statement",
                "type": "string",
                "readOnly": true,
                "example": "Q11$6403c562-401a-2b26-85cc-8327801145e1"
              },
              "rank": {
                "description": "The rank of the Statement",
                "type": "string",
                "enum": [
                  "deprecated",
                  "normal",
                  "preferred"
                ],
                "default": "normal"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "property": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The ID of the Property",
                    "type": "string",
                    "example": "P92"
                  },
                  "data-type": {
                    "description": "The data type of the Property",
                    "type": "string",
                    "readOnly": true,
                    "nullable": true,
                    "example": "string"
                  }
                }
              },
              "value": {
                "type": "object",
                "properties": {
                  "content": {
                    "description": "The value, if type == \"value\", otherwise omitted",
                    "example": "I am a goat"
                  },
                  "type": {
                    "description": "The value type",
                    "type": "string",
                    "enum": [
                      "value",
                      "somevalue",
                      "novalue"
                    ]
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "qualifiers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "property": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The ID of the Property",
                          "type": "string",
                          "example": "P92"
                        },
                        "data-type": {
                          "description": "The data type of the Property",
                          "type": "string",
                          "readOnly": true,
                          "nullable": true,
                          "example": "string"
                        }
                      }
                    },
                    "value": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "description": "The value, if type == \"value\", otherwise omitted",
                          "example": "I am a goat"
                        },
                        "type": {
                          "description": "The value type",
                          "type": "string",
                          "enum": [
                            "value",
                            "somevalue",
                            "novalue"
                          ]
                        }
                      }
                    }
                  }
                },
                "default": []
              },
              "references": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "hash": {
                      "description": "Hash of the Reference",
                      "type": "string",
                      "readOnly": true,
                      "example": "455481eeac76e6a8af71a6b493c073d54788e7e9"
                    },
                    "parts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "property": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "The ID of the Property",
                                "type": "string",
                                "example": "P92"
                              },
                              "data-type": {
                                "description": "The data type of the Property",
                                "type": "string",
                                "readOnly": true,
                                "nullable": true,
                                "example": "string"
                              }
                            }
                          },
                          "value": {
                            "type": "object",
                            "properties": {
                              "content": {
                                "description": "The value, if type == \"value\", otherwise omitted",
                                "example": "I am a goat"
                              },
                              "type": {
                                "description": "The value type",
                                "type": "string",
                                "enum": [
                                  "value",
                                  "somevalue",
                                  "novalue"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "default": []
              }
            }
          }
        ]
      },
      "Qualifier": {
        "type": "object",
        "properties": {
          "property": {
            "type": "object",
            "properties": {
              "id": {
                "description": "The ID of the Property",
                "type": "string",
                "example": "P92"
              },
              "data-type": {
                "description": "The data type of the Property",
                "type": "string",
                "readOnly": true,
                "nullable": true,
                "example": "string"
              }
            }
          },
          "value": {
            "type": "object",
            "properties": {
              "content": {
                "description": "The value, if type == \"value\", otherwise omitted",
                "example": "I am a goat"
              },
              "type": {
                "description": "The value type",
                "type": "string",
                "enum": [
                  "value",
                  "somevalue",
                  "novalue"
                ]
              }
            }
          }
        }
      },
      "Reference": {
        "type": "object",
        "properties": {
          "hash": {
            "description": "Hash of the Reference",
            "type": "string",
            "readOnly": true,
            "example": "455481eeac76e6a8af71a6b493c073d54788e7e9"
          },
          "parts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "property": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The ID of the Property",
                      "type": "string",
                      "example": "P92"
                    },
                    "data-type": {
                      "description": "The data type of the Property",
                      "type": "string",
                      "readOnly": true,
                      "nullable": true,
                      "example": "string"
                    }
                  }
                },
                "value": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "description": "The value, if type == \"value\", otherwise omitted",
                      "example": "I am a goat"
                    },
                    "type": {
                      "description": "The value type",
                      "type": "string",
                      "enum": [
                        "value",
                        "somevalue",
                        "novalue"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "examples": {
      "InvalidEditTagExample": {
        "value": {
          "code": "invalid-edit-tag",
          "message": "Invalid MediaWiki tag: {tag}"
        }
      },
      "CommentTooLongExample": {
        "value": {
          "code": "comment-too-long",
          "message": "Comment must not be longer than 500 characters"
        }
      },
      "InvalidFieldExample": {
        "value": {
          "code": "invalid-field",
          "message": "Not a valid field: {field}"
        }
      },
      "InvalidItemIdExample": {
        "value": {
          "code": "invalid-item-id",
          "message": "Not a valid item ID: {item_id}"
        }
      },
      "InvalidPropertyIdExample": {
        "value": {
          "code": "invalid-property-id",
          "message": "Not a valid property ID: {property_id}",
          "context": {
            "property-id": "{property_id}"
          }
        }
      },
      "InvalidStatementIdExample": {
        "value": {
          "code": "invalid-statement-id",
          "message": "Not a valid statement ID: {statement_id}"
        }
      },
      "InvalidLanguageCodeExample": {
        "value": {
          "code": "invalid-language-code",
          "message": "Not a valid language code: {language_code}"
        }
      },
      "InvalidSiteIdExample": {
        "value": {
          "code": "invalid-site-id",
          "message": "Not a valid site ID: {site_id}"
        }
      },
      "InvalidTitleExample": {
        "value": {
          "code": "invalid-title-field",
          "message": "Not a valid input for title field"
        }
      },
      "TitleIsEmptyExample": {
        "value": {
          "code": "title-field-empty",
          "message": "Title must not be empty"
        }
      },
      "TitleDoesNotExistOnGivenSiteExample": {
        "value": {
          "code": "title-does-not-exist",
          "message": "Page with title {title} does not exist on the given site"
        }
      },
      "SitelinkTitleFieldNotProvidedExample": {
        "value": {
          "code": "sitelink-data-missing-title",
          "message": "Mandatory sitelink title missing"
        }
      },
      "ValueOfBadgesFieldIsNotAListExample": {
        "value": {
          "code": "invalid-sitelink-badges-format",
          "message": "Value of badges field is not a list"
        }
      },
      "ItemProvidedIsNotAllowedAsSitelinkBadgeExample": {
        "value": {
          "code": "item-not-a-badge",
          "message": "Item ID provided as badge is not allowed as a badge: {item_id}"
        }
      },
      "ValueProvidedAsABadgeIsNotAnItemIDExample": {
        "value": {
          "code": "invalid-input-sitelink-badge",
          "message": "Badge input is not an item ID: {value}"
        }
      },
      "StatementDataMissingFieldExample": {
        "value": {
          "code": "statement-data-missing-field",
          "message": "Mandatory field missing in the statement data: {field}",
          "context": {
            "path": "{field}"
          }
        }
      },
      "StatementDataInvalidFieldExample": {
        "value": {
          "code": "statement-data-invalid-field",
          "message": "Invalid input for '{field}'",
          "context": {
            "path": "{field}",
            "value": "{value}"
          }
        }
      },
      "InvalidOperationChangeStatementId": {
        "value": {
          "code": "invalid-operation-change-statement-id",
          "message": "Cannot change the ID of the existing statement"
        }
      },
      "InvalidOperationChangePropertyOfStatement": {
        "value": {
          "code": "invalid-operation-change-property-of-statement",
          "message": "Cannot change the property of the existing statement"
        }
      },
      "InvalidPatchExample": {
        "value": {
          "code": "invalid-patch",
          "message": "The provided patch is invalid"
        }
      },
      "InvalidPatchOperationExample": {
        "value": {
          "code": "invalid-patch-operation",
          "message": "Incorrect JSON patch operation: '{op}'",
          "context": {
            "operation": {
              "op": "{op}",
              "path": "/some/path"
            }
          }
        }
      },
      "InvalidPatchFieldTypeExample": {
        "value": {
          "code": "invalid-patch-field-type",
          "message": "The value of '{field}' must be of type string",
          "context": {
            "operation": {
              "op": "remove",
              "path": [
                "not",
                "a",
                "string"
              ]
            },
            "field": "path"
          }
        }
      },
      "MissingJsonPatchFieldExample": {
        "value": {
          "code": "missing-json-patch-field",
          "message": "Missing '{field}' in JSON patch",
          "context": {
            "operation": {
              "op": "remove"
            },
            "field": "path"
          }
        }
      },
      "PatchTestFailedExample": {
        "value": {
          "code": "patch-test-failed",
          "message": "Test operation in the provided patch failed. At path '{path}' expected '{expected}', actual: '{actual}'",
          "context": {
            "operation": {
              "op": "test",
              "path": "/some/path",
              "value": "expected value"
            },
            "actual-value": "actual value"
          }
        }
      },
      "PatchTargetNotFoundExample": {
        "value": {
          "code": "patch-target-not-found",
          "message": "Target '{target}' not found on the resource",
          "context": {
            "operation": {
              "op": "replace",
              "path": "/some/path",
              "value": "some value"
            },
            "field": "path"
          }
        }
      },
      "PatchedStatementMissingFieldExample": {
        "value": {
          "code": "patched-statement-missing-field",
          "message": "Mandatory field missing in the patched statement: {field}",
          "context": {
            "path": "{field}"
          }
        }
      },
      "PatchedStatementInvalidFieldExample": {
        "value": {
          "code": "patched-statement-invalid-field",
          "message": "Invalid input for '{field}' in the patched statement",
          "context": {
            "path": "{field}",
            "value": "{value}"
          }
        }
      },
      "ItemNotFoundExample": {
        "value": {
          "code": "item-not-found",
          "message": "Could not find an item with the ID: {item_id}"
        }
      },
      "PropertyNotFoundExample": {
        "value": {
          "code": "property-not-found",
          "message": "Could not find a property with the ID: {property_id}"
        }
      },
      "RedirectedItemExample": {
        "value": {
          "code": "redirected-item",
          "message": "Item {item_id} has been merged into {other_id}"
        }
      },
      "SitelinkConflictExample": {
        "value": {
          "code": "sitelink-conflict",
          "message": "Sitelink is already being used on {other_item_id}"
        }
      },
      "StatementNotFoundExample": {
        "value": {
          "code": "statement-not-found",
          "message": "Could not find a statement with the ID: {statement_id}"
        }
      },
      "SitelinkNotDefinedExample": {
        "value": {
          "code": "sitelink-not-defined",
          "message": "No sitelink found for the ID: {item_id} for the site {site_id}"
        }
      },
      "ItemLabelNotDefinedExample": {
        "value": {
          "code": "label-not-defined",
          "message": "Item with the ID {item_id} does not have a label in the language: {language_code}"
        }
      },
      "PropertyLabelNotDefinedExample": {
        "value": {
          "code": "label-not-defined",
          "message": "Property with the ID {property_id} does not have a label in the language: {language_code}"
        }
      },
      "ItemDescriptionNotDefinedExample": {
        "value": {
          "code": "description-not-defined",
          "message": "Item with the ID {item_id} does not have a description in the language: {language_code}"
        }
      },
      "PropertyDescriptionNotDefinedExample": {
        "value": {
          "code": "description-not-defined",
          "message": "Property with the ID {property_id} does not have a description in the language: {language_code}"
        }
      },
      "ItemAliasesNotDefinedExample": {
        "value": {
          "code": "aliases-not-defined",
          "message": "Item with the ID {item_id} does not have aliases in the language: {language_code}"
        }
      },
      "PropertyAliasesNotDefinedExample": {
        "value": {
          "code": "aliases-not-defined",
          "message": "Property with the ID {property_id} does not have aliases in the language: {language_code}"
        }
      },
      "InvalidLabelExample": {
        "value": {
          "code": "invalid-label",
          "message": "Not a valid label: {label}"
        }
      },
      "LabelEmptyExample": {
        "value": {
          "code": "label-empty",
          "message": "Label must not be empty"
        }
      },
      "LabelTooLongExample": {
        "value": {
          "code": "label-too-long",
          "message": "Label must be no more than {limit} characters long",
          "context": {
            "value": "{label}",
            "character-limit": "{limit}"
          }
        }
      },
      "PatchedLabelsInvalidLanguageCodeExample": {
        "value": {
          "code": "patched-labels-invalid-language-code",
          "message": "Not a valid language code '{language_code}' in changed labels",
          "context": {
            "language": "{language_code}"
          }
        }
      },
      "PatchedLabelEmptyExample": {
        "value": {
          "code": "patched-label-empty",
          "message": "Changed label for '{language_code}' cannot be empty",
          "context": {
            "language": "{language_code}"
          }
        }
      },
      "PatchedLabelTooLongExample": {
        "value": {
          "code": "patched-label-too-long",
          "message": "Changed label for '{language_code}' must not be more than {limit} characters long",
          "context": {
            "language": "{language_code}",
            "value": "{label}",
            "limit": 250
          }
        }
      },
      "PatchedLabelInvalidExample": {
        "value": {
          "code": "patched-label-invalid",
          "message": "Changed label for '{language_code}' is invalid: '{label}'",
          "context": {
            "language": "{language_code}",
            "value": "{label}"
          }
        }
      },
      "PatchedDescriptionsInvalidLanguageCodeExample": {
        "value": {
          "code": "patched-descriptions-invalid-language-code",
          "message": "Not a valid language code '{language_code}' in changed descriptions",
          "context": {
            "language": "{language_code}"
          }
        }
      },
      "PatchedDescriptionEmptyExample": {
        "value": {
          "code": "patched-description-empty",
          "message": "Changed description for '{language_code}' cannot be empty",
          "context": {
            "language": "{language_code}"
          }
        }
      },
      "PatchedDescriptionTooLongExample": {
        "value": {
          "code": "patched-description-too-long",
          "message": "Changed description for '{language_code}' must not be more than {limit} characters long",
          "context": {
            "language": "{language_code}",
            "value": "{description}",
            "limit": 250
          }
        }
      },
      "PatchedDescriptionInvalidExample": {
        "value": {
          "code": "patched-description-invalid",
          "message": "Changed description for '{language_code}' is invalid: '{label}'",
          "context": {
            "language": "{language_code}",
            "value": "{description}"
          }
        }
      },
      "PatchedItemLabelDescriptionSameValueExample": {
        "value": {
          "code": "patched-item-label-description-same-value",
          "message": "Label and description for language code '{language}' can not have the same value",
          "context": {
            "language": "{language_code}"
          }
        }
      },
      "PatchedPropertyLabelDescriptionSameValueExample": {
        "value": {
          "code": "patched-property-label-description-same-value",
          "message": "Label and description for language code '{language}' can not have the same value",
          "context": {
            "language": "{language_code}"
          }
        }
      },
      "PatchedItemLabelDescriptionDuplicateExample": {
        "value": {
          "code": "patched-item-label-description-duplicate",
          "message": "Item '{duplicate_id}' already has label '{label}' associated with language code '{language}', using the same description text",
          "context": {
            "language": "{language_code}",
            "label": "{label}",
            "description": "{description}",
            "matching-item-id": "{duplicate_id}"
          }
        }
      },
      "PatchedAliasesInvalidLanguageCodeExample": {
        "value": {
          "code": "patched-aliases-invalid-language-code",
          "message": "Not a valid language code '{language_code}' in changed aliases",
          "context": {
            "language": "{language_code}"
          }
        }
      },
      "PatchedAliasEmptyExample": {
        "value": {
          "code": "patched-alias-empty",
          "message": "Changed alias for '{language_code}' cannot be empty",
          "context": {
            "language": "{language_code}"
          }
        }
      },
      "PatchedAliasTooLongExample": {
        "value": {
          "code": "patched-alias-too-long",
          "message": "Changed alias for '{language_code}' must not be more than {limit} characters long",
          "context": {
            "language": "{language_code}",
            "value": "{alias}",
            "limit": 250
          }
        }
      },
      "PatchedAliasesInvalidFieldExample": {
        "value": {
          "code": "patched-aliases-invalid-field",
          "message": "Patched value for '{field}' is invalid",
          "context": {
            "path": "{field}",
            "value": "{value}"
          }
        }
      },
      "PatchedDuplicateAliasExample": {
        "value": {
          "code": "patched-duplicate-alias",
          "message": "Aliases in language '{language_code}' contain duplicate alias: '{alias}'",
          "context": {
            "alias": "{alias}",
            "language": "{language_code}"
          }
        }
      },
      "InvalidDescriptionExample": {
        "value": {
          "code": "invalid-description",
          "message": "Not a valid description: {description}"
        }
      },
      "DescriptionEmptyExample": {
        "value": {
          "code": "description-empty",
          "message": "Description must not be empty"
        }
      },
      "DescriptionTooLongExample": {
        "value": {
          "code": "description-too-long",
          "message": "Description must be no more than {limit} characters long",
          "context": {
            "value": "{description}",
            "character-limit": "{limit}"
          }
        }
      },
      "LabelDescriptionSameValueExample": {
        "value": {
          "code": "label-description-same-value",
          "message": "Label and description for language code '{language}' can not have the same value",
          "context": {
            "language": "{language}"
          }
        }
      },
      "ItemLabelDescriptionDuplicateExample": {
        "value": {
          "code": "item-label-description-duplicate",
          "message": "Item '{duplicate_item_id}' already has label '{label}' associated with language code '{language}', using the same description text",
          "context": {
            "language": "{language}",
            "label": "{label}",
            "description": "{description}",
            "matching-item-id": "{duplicate_item_id}"
          }
        }
      },
      "PropertyLabelDuplicateExample": {
        "value": {
          "code": "property-label-duplicate",
          "message": "Property '{duplicate_property_id}' already has label '{label}' associated with language code {language}",
          "context": {
            "language": "{language}",
            "label": "{label}",
            "matching-property-id": "{duplicate_property_id}"
          }
        }
      },
      "PatchedPropertyLabelDuplicateExample": {
        "value": {
          "code": "patched-property-label-duplicate",
          "message": "Property '{duplicate_property_id}' already has label '{label}' associated with language code {language}",
          "context": {
            "language": "{language}",
            "label": "{label}",
            "matching-property-id": "{duplicate_property_id}"
          }
        }
      },
      "AliasEmptyExample": {
        "value": {
          "code": "alias-empty",
          "message": "Alias must not be empty"
        }
      },
      "AliasListEmptyExample": {
        "value": {
          "code": "alias-list-empty",
          "message": "Alias list must not be empty"
        }
      },
      "AliasTooLongExample": {
        "value": {
          "code": "alias-too-long",
          "message": "Alias must be no more than {limit} characters long",
          "context": {
            "value": "{alias}",
            "character-limit": "{limit}"
          }
        }
      },
      "InvalidAliasExample": {
        "value": {
          "code": "invalid-alias",
          "message": "Not a valid alias: '{alias}'",
          "context": {
            "alias": "{alias}"
          }
        }
      },
      "DuplicateAliasExample": {
        "value": {
          "code": "duplicate-alias",
          "message": "Alias list contains a duplicate alias: '{alias}'",
          "context": {
            "alias": "{alias}"
          }
        }
      },
      "ItemStatementIdExample": {
        "value": "Q42$F078E5B3-F9A8-480E-B7AC-D97778CBBEF9"
      },
      "PropertyStatementIdExample": {
        "value": "P31$9d042001-4a7e-2432-a7e1-233360062379"
      },
      "ItemStatementResponseExample": {
        "value": {
          "id": "Q42$F078E5B3-F9A8-480E-B7AC-D97778CBBEF9",
          "rank": "normal",
          "property": {
            "id": "P31",
            "data-type": "wikibase-item"
          },
          "value": {
            "type": "value",
            "content": "Q5"
          },
          "qualifiers": [],
          "references": []
        }
      },
      "PropertyStatementResponseExample": {
        "value": {
          "id": "P31$9d042001-4a7e-2432-a7e1-233360062379",
          "rank": "normal",
          "property": {
            "id": "P31",
            "data-type": "wikibase-item"
          },
          "value": {
            "type": "value",
            "content": "Q5"
          },
          "qualifiers": [],
          "references": []
        }
      }
    }
  },
  "tags": [
    {
      "name": "items",
      "description": "Wikibase Items",
      "externalDocs": {
        "description": "Wikibase Data Model - Items",
        "url": "https://www.mediawiki.org/wiki/Wikibase/DataModel#Items"
      }
    },
    {
      "name": "sitelinks",
      "description": "Wikibase Item Sitelinks",
      "externalDocs": {
        "description": "Wikibase Data Model - Sitelinks",
        "url": "https://www.mediawiki.org/wiki/Wikibase/DataModel#Sitelinks"
      }
    },
    {
      "name": "properties",
      "description": "Wikibase Properties",
      "externalDocs": {
        "description": "Wikibase Data Model - Properties",
        "url": "https://www.mediawiki.org/wiki/Wikibase/DataModel#Properties"
      }
    },
    {
      "name": "labels",
      "description": "Wikibase Labels",
      "externalDocs": {
        "description": "Wikibase Data Model - Terms",
        "url": "https://www.mediawiki.org/wiki/Wikibase/DataModel#EntityDescriptions_of_Items_and_Properties"
      }
    },
    {
      "name": "descriptions",
      "description": "Wikibase Descriptions",
      "externalDocs": {
        "description": "Wikibase Data Model - Terms",
        "url": "https://www.mediawiki.org/wiki/Wikibase/DataModel#EntityDescriptions_of_Items_and_Properties"
      }
    },
    {
      "name": "aliases",
      "description": "Wikibase Aliases",
      "externalDocs": {
        "description": "Wikibase Data Model - Terms",
        "url": "https://www.mediawiki.org/wiki/Wikibase/DataModel#EntityDescriptions_of_Items_and_Properties"
      }
    },
    {
      "name": "statements",
      "description": "Wikibase Statements",
      "externalDocs": {
        "description": "Wikibase Data Model - Statements",
        "url": "https://www.mediawiki.org/wiki/Wikibase/DataModel#Statements"
      }
    }
  ],
  "servers": [
    {
      "url": "https://wikibase.example/w/rest.php/wikibase/v0"
    }
  ]
}
