/* tslint:disable */
/* eslint-disable */
/**
 * OSM-Wikidata Map Framework API
 * Programmatically interact with a site based on OSM-Wikidata Map Framework
 *
 * The version of the OpenAPI document: 1.13.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EtymologyStat
 */
export interface EtymologyStat {
    /**
     * 
     * @type {string}
     * @memberof EtymologyStat
     */
    color?: string;
    /**
     * 
     * @type {number}
     * @memberof EtymologyStat
     */
    count: number;
    /**
     * 
     * @type {string}
     * @memberof EtymologyStat
     */
    descr?: string;
    /**
     * 
     * @type {string}
     * @memberof EtymologyStat
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof EtymologyStat
     */
    name: string;
}

/**
 * Check if a given object implements the EtymologyStat interface.
 */
export function instanceOfEtymologyStat(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "count" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function EtymologyStatFromJSON(json: any): EtymologyStat {
    return EtymologyStatFromJSONTyped(json, false);
}

export function EtymologyStatFromJSONTyped(json: any, ignoreDiscriminator: boolean): EtymologyStat {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'color': !exists(json, 'color') ? undefined : json['color'],
        'count': json['count'],
        'descr': !exists(json, 'descr') ? undefined : json['descr'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': json['name'],
    };
}

export function EtymologyStatToJSON(value?: EtymologyStat | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'color': value.color,
        'count': value.count,
        'descr': value.descr,
        'id': value.id,
        'name': value.name,
    };
}

