/* tslint:disable */
/* eslint-disable */
/**
 * OSM-Wikidata Map Framework API
 * Programmatically interact with a site based on OSM-Wikidata Map Framework
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FeatureCollectionMetadata
 */
export interface FeatureCollectionMetadata {
    /**
     * Total number of etymologies linked to the features
     * @type {number}
     * @memberof FeatureCollectionMetadata
     */
    etymology_count?: number;
    /**
     * Wikidata SPARQL query used to fetch the features
     * @type {string}
     * @memberof FeatureCollectionMetadata
     */
    wikidata_query?: string;
    /**
     * OverpassQL query used to fetch the features
     * @type {string}
     * @memberof FeatureCollectionMetadata
     */
    overpass_query?: string;
}

/**
 * Check if a given object implements the FeatureCollectionMetadata interface.
 */
export function instanceOfFeatureCollectionMetadata(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FeatureCollectionMetadataFromJSON(json: any): FeatureCollectionMetadata {
    return FeatureCollectionMetadataFromJSONTyped(json, false);
}

export function FeatureCollectionMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeatureCollectionMetadata {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'etymology_count': !exists(json, 'etymology_count') ? undefined : json['etymology_count'],
        'wikidata_query': !exists(json, 'wikidata_query') ? undefined : json['wikidata_query'],
        'overpass_query': !exists(json, 'overpass_query') ? undefined : json['overpass_query'],
    };
}

export function FeatureCollectionMetadataToJSON(value?: FeatureCollectionMetadata | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'etymology_count': value.etymology_count,
        'wikidata_query': value.wikidata_query,
        'overpass_query': value.overpass_query,
    };
}

