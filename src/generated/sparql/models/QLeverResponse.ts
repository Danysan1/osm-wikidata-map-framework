/* tslint:disable */
/* eslint-disable */
/**
 * SPARQL endpoint API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface QLeverResponse
 */
export interface QLeverResponse {
    /**
     * 
     * @type {string}
     * @memberof QLeverResponse
     */
    query?: string;
    /**
     * The result set
     * @type {Array<Array<string>>}
     * @memberof QLeverResponse
     */
    res?: Array<Array<string>>;
    /**
     * 
     * @type {number}
     * @memberof QLeverResponse
     */
    resultSize?: number;
    /**
     * 
     * @type {object}
     * @memberof QLeverResponse
     */
    runtimeInformation?: object;
    /**
     * The names of the columns in the result set (the variables selected in the query)
     * @type {Array<string>}
     * @memberof QLeverResponse
     */
    selected?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof QLeverResponse
     */
    status?: string;
    /**
     * 
     * @type {object}
     * @memberof QLeverResponse
     */
    time?: object;
    /**
     * 
     * @type {Array<string>}
     * @memberof QLeverResponse
     */
    warnings?: Array<string>;
}

/**
 * Check if a given object implements the QLeverResponse interface.
 */
export function instanceOfQLeverResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function QLeverResponseFromJSON(json: any): QLeverResponse {
    return QLeverResponseFromJSONTyped(json, false);
}

export function QLeverResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): QLeverResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'query': !exists(json, 'query') ? undefined : json['query'],
        'res': !exists(json, 'res') ? undefined : json['res'],
        'resultSize': !exists(json, 'resultSize') ? undefined : json['resultSize'],
        'runtimeInformation': !exists(json, 'runtimeInformation') ? undefined : json['runtimeInformation'],
        'selected': !exists(json, 'selected') ? undefined : json['selected'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'time': !exists(json, 'time') ? undefined : json['time'],
        'warnings': !exists(json, 'warnings') ? undefined : json['warnings'],
    };
}

export function QLeverResponseToJSON(value?: QLeverResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'query': value.query,
        'res': value.res,
        'resultSize': value.resultSize,
        'runtimeInformation': value.runtimeInformation,
        'selected': value.selected,
        'status': value.status,
        'time': value.time,
        'warnings': value.warnings,
    };
}

