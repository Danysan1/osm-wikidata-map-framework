/* tslint:disable */
/* eslint-disable */
/**
 * Wikibase REST API
 * OpenAPI definition of Wikibase REST API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GetItem200ResponseAllOfSitelinksValue } from './GetItem200ResponseAllOfSitelinksValue';
import {
    GetItem200ResponseAllOfSitelinksValueFromJSON,
    GetItem200ResponseAllOfSitelinksValueFromJSONTyped,
    GetItem200ResponseAllOfSitelinksValueToJSON,
} from './GetItem200ResponseAllOfSitelinksValue';
import type { Statement } from './Statement';
import {
    StatementFromJSON,
    StatementFromJSONTyped,
    StatementToJSON,
} from './Statement';

/**
 * 
 * @export
 * @interface GetItem200ResponseAllOf
 */
export interface GetItem200ResponseAllOf {
    /**
     * 
     * @type {string}
     * @memberof GetItem200ResponseAllOf
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof GetItem200ResponseAllOf
     */
    type?: string;
    /**
     * 
     * @type {any}
     * @memberof GetItem200ResponseAllOf
     */
    labels?: any;
    /**
     * 
     * @type {any}
     * @memberof GetItem200ResponseAllOf
     */
    descriptions?: any;
    /**
     * 
     * @type {any}
     * @memberof GetItem200ResponseAllOf
     */
    aliases?: any;
    /**
     * 
     * @type {{ [key: string]: GetItem200ResponseAllOfSitelinksValue; }}
     * @memberof GetItem200ResponseAllOf
     */
    sitelinks?: { [key: string]: GetItem200ResponseAllOfSitelinksValue; };
    /**
     * 
     * @type {{ [key: string]: Array<Statement>; }}
     * @memberof GetItem200ResponseAllOf
     */
    statements?: { [key: string]: Array<Statement>; };
}

/**
 * Check if a given object implements the GetItem200ResponseAllOf interface.
 */
export function instanceOfGetItem200ResponseAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetItem200ResponseAllOfFromJSON(json: any): GetItem200ResponseAllOf {
    return GetItem200ResponseAllOfFromJSONTyped(json, false);
}

export function GetItem200ResponseAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetItem200ResponseAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'labels': !exists(json, 'labels') ? undefined : json['labels'],
        'descriptions': !exists(json, 'descriptions') ? undefined : json['descriptions'],
        'aliases': !exists(json, 'aliases') ? undefined : json['aliases'],
        'sitelinks': !exists(json, 'sitelinks') ? undefined : (mapValues(json['sitelinks'], GetItem200ResponseAllOfSitelinksValueFromJSON)),
        'statements': !exists(json, 'statements') ? undefined : json['statements'],
    };
}

export function GetItem200ResponseAllOfToJSON(value?: GetItem200ResponseAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'type': value.type,
        'labels': value.labels,
        'descriptions': value.descriptions,
        'aliases': value.aliases,
        'sitelinks': value.sitelinks === undefined ? undefined : (mapValues(value.sitelinks, GetItem200ResponseAllOfSitelinksValueToJSON)),
        'statements': value.statements,
    };
}

