/* tslint:disable */
/* eslint-disable */
/**
 * Wikibase REST API
 * OpenAPI definition of Wikibase REST API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Statement } from './Statement';
import {
    StatementFromJSON,
    StatementFromJSONTyped,
    StatementToJSON,
} from './Statement';

/**
 * 
 * @export
 * @interface GetProperty200ResponseAllOf1
 */
export interface GetProperty200ResponseAllOf1 {
    /**
     * 
     * @type {{ [key: string]: Array<Statement>; }}
     * @memberof GetProperty200ResponseAllOf1
     */
    statements: { [key: string]: Array<Statement>; };
}

/**
 * Check if a given object implements the GetProperty200ResponseAllOf1 interface.
 */
export function instanceOfGetProperty200ResponseAllOf1(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "statements" in value;

    return isInstance;
}

export function GetProperty200ResponseAllOf1FromJSON(json: any): GetProperty200ResponseAllOf1 {
    return GetProperty200ResponseAllOf1FromJSONTyped(json, false);
}

export function GetProperty200ResponseAllOf1FromJSONTyped(json: any, ignoreDiscriminator: boolean): GetProperty200ResponseAllOf1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'statements': json['statements'],
    };
}

export function GetProperty200ResponseAllOf1ToJSON(value?: GetProperty200ResponseAllOf1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'statements': value.statements,
    };
}

