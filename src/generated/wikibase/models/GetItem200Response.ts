/* tslint:disable */
/* eslint-disable */
/**
 * Wikibase REST API
 * OpenAPI definition of Wikibase REST API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GetItem200ResponseAllOf1StatementsValueInner } from './GetItem200ResponseAllOf1StatementsValueInner';
import {
    GetItem200ResponseAllOf1StatementsValueInnerFromJSON,
    GetItem200ResponseAllOf1StatementsValueInnerFromJSONTyped,
    GetItem200ResponseAllOf1StatementsValueInnerToJSON,
} from './GetItem200ResponseAllOf1StatementsValueInner';

/**
 * 
 * @export
 * @interface GetItem200Response
 */
export interface GetItem200Response {
    /**
     * 
     * @type {string}
     * @memberof GetItem200Response
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof GetItem200Response
     */
    type: string;
    /**
     * 
     * @type {any}
     * @memberof GetItem200Response
     */
    labels: any;
    /**
     * 
     * @type {any}
     * @memberof GetItem200Response
     */
    descriptions: any;
    /**
     * 
     * @type {any}
     * @memberof GetItem200Response
     */
    aliases: any;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof GetItem200Response
     */
    sitelinks: { [key: string]: any; };
    /**
     * 
     * @type {{ [key: string]: Array<GetItem200ResponseAllOf1StatementsValueInner>; }}
     * @memberof GetItem200Response
     */
    statements: { [key: string]: Array<GetItem200ResponseAllOf1StatementsValueInner>; };
}

/**
 * Check if a given object implements the GetItem200Response interface.
 */
export function instanceOfGetItem200Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "labels" in value;
    isInstance = isInstance && "descriptions" in value;
    isInstance = isInstance && "aliases" in value;
    isInstance = isInstance && "sitelinks" in value;
    isInstance = isInstance && "statements" in value;

    return isInstance;
}

export function GetItem200ResponseFromJSON(json: any): GetItem200Response {
    return GetItem200ResponseFromJSONTyped(json, false);
}

export function GetItem200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetItem200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': json['type'],
        'labels': json['labels'],
        'descriptions': json['descriptions'],
        'aliases': json['aliases'],
        'sitelinks': json['sitelinks'],
        'statements': json['statements'],
    };
}

export function GetItem200ResponseToJSON(value?: GetItem200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'type': value.type,
        'labels': value.labels,
        'descriptions': value.descriptions,
        'aliases': value.aliases,
        'sitelinks': value.sitelinks,
        'statements': value.statements,
    };
}

