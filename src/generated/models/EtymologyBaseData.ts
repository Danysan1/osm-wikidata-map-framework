/* tslint:disable */
/* eslint-disable */
/**
 * OSM-Wikidata Map Framework API
 * Programmatically interact with a site based on OSM-Wikidata Map Framework
 *
 * The version of the OpenAPI document: 1.13.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EtymologyBaseData
 */
export interface EtymologyBaseData {
    /**
     * Internal ID for the etymology relation (unique within the request but may vary after DB updates)
     * @type {number}
     * @memberof EtymologyBaseData
     */
    etId?: number;
    /**
     * Whether OpenStreetMap is the original source of this etymology
     * @type {boolean}
     * @memberof EtymologyBaseData
     */
    fromOsm?: boolean;
    /**
     * Type (node/way/relation) of the source OpenStreetMap element
     * @type {string}
     * @memberof EtymologyBaseData
     */
    fromOsmType?: string;
    /**
     * ID (unique only within its type) of the source OpenStreetMap element
     * @type {number}
     * @memberof EtymologyBaseData
     */
    fromOsmId?: number;
    /**
     * Whether Wikidata is the original source of this etymology
     * @type {boolean}
     * @memberof EtymologyBaseData
     */
    fromWikidata?: boolean;
    /**
     * Q-ID of the source Wikidata entity this etymology has been extracted from
     * @type {string}
     * @memberof EtymologyBaseData
     */
    fromWikidataEntity?: string;
    /**
     * P-ID of the Wikidata property that links from the source Wikidata entity to this etymology entity
     * @type {string}
     * @memberof EtymologyBaseData
     */
    fromWikidataProp?: string;
    /**
     * Q-ID of the etymology Wikidata entity that contained this entity, leading to the inclusion of this entity as well
     * @type {string}
     * @memberof EtymologyBaseData
     */
    fromPartsOfWikidataCod?: string;
    /**
     * Whether this etymology has been obtained through propagation
     * @type {boolean}
     * @memberof EtymologyBaseData
     */
    propagated?: boolean;
    /**
     * Start date of this item
     * @type {string}
     * @memberof EtymologyBaseData
     */
    startDate?: string;
    /**
     * Q-ID of the referenced Wikidata entity
     * @type {string}
     * @memberof EtymologyBaseData
     */
    wikidata?: string;
}

/**
 * Check if a given object implements the EtymologyBaseData interface.
 */
export function instanceOfEtymologyBaseData(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EtymologyBaseDataFromJSON(json: any): EtymologyBaseData {
    return EtymologyBaseDataFromJSONTyped(json, false);
}

export function EtymologyBaseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): EtymologyBaseData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'etId': !exists(json, 'et_id') ? undefined : json['et_id'],
        'fromOsm': !exists(json, 'from_osm') ? undefined : json['from_osm'],
        'fromOsmType': !exists(json, 'from_osm_type') ? undefined : json['from_osm_type'],
        'fromOsmId': !exists(json, 'from_osm_id') ? undefined : json['from_osm_id'],
        'fromWikidata': !exists(json, 'from_wikidata') ? undefined : json['from_wikidata'],
        'fromWikidataEntity': !exists(json, 'from_wikidata_entity') ? undefined : json['from_wikidata_entity'],
        'fromWikidataProp': !exists(json, 'from_wikidata_prop') ? undefined : json['from_wikidata_prop'],
        'fromPartsOfWikidataCod': !exists(json, 'from_parts_of_wikidata_cod') ? undefined : json['from_parts_of_wikidata_cod'],
        'propagated': !exists(json, 'propagated') ? undefined : json['propagated'],
        'startDate': !exists(json, 'start_date') ? undefined : json['start_date'],
        'wikidata': !exists(json, 'wikidata') ? undefined : json['wikidata'],
    };
}

export function EtymologyBaseDataToJSON(value?: EtymologyBaseData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'et_id': value.etId,
        'from_osm': value.fromOsm,
        'from_osm_type': value.fromOsmType,
        'from_osm_id': value.fromOsmId,
        'from_wikidata': value.fromWikidata,
        'from_wikidata_entity': value.fromWikidataEntity,
        'from_wikidata_prop': value.fromWikidataProp,
        'from_parts_of_wikidata_cod': value.fromPartsOfWikidataCod,
        'propagated': value.propagated,
        'start_date': value.startDate,
        'wikidata': value.wikidata,
    };
}

