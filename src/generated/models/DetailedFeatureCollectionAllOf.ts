/* tslint:disable */
/* eslint-disable */
/**
 * OSM-Wikidata Map Framework API
 * Programmatically interact with a site based on OSM-Wikidata Map Framework
 *
 * The version of the OpenAPI document: 1.6.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DetailedFeatureCollectionAllOfMetadata } from './DetailedFeatureCollectionAllOfMetadata';
import {
    DetailedFeatureCollectionAllOfMetadataFromJSON,
    DetailedFeatureCollectionAllOfMetadataFromJSONTyped,
    DetailedFeatureCollectionAllOfMetadataToJSON,
} from './DetailedFeatureCollectionAllOfMetadata';

/**
 * 
 * @export
 * @interface DetailedFeatureCollectionAllOf
 */
export interface DetailedFeatureCollectionAllOf {
    /**
     * 
     * @type {DetailedFeatureCollectionAllOfMetadata}
     * @memberof DetailedFeatureCollectionAllOf
     */
    metadata?: DetailedFeatureCollectionAllOfMetadata;
}

/**
 * Check if a given object implements the DetailedFeatureCollectionAllOf interface.
 */
export function instanceOfDetailedFeatureCollectionAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DetailedFeatureCollectionAllOfFromJSON(json: any): DetailedFeatureCollectionAllOf {
    return DetailedFeatureCollectionAllOfFromJSONTyped(json, false);
}

export function DetailedFeatureCollectionAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): DetailedFeatureCollectionAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'metadata': !exists(json, 'metadata') ? undefined : DetailedFeatureCollectionAllOfMetadataFromJSON(json['metadata']),
    };
}

export function DetailedFeatureCollectionAllOfToJSON(value?: DetailedFeatureCollectionAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'metadata': DetailedFeatureCollectionAllOfMetadataToJSON(value.metadata),
    };
}

