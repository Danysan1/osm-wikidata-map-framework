/* tslint:disable */
/* eslint-disable */
/**
 * OSM-Wikidata Map Framework API
 * Programmatically interact with a site based on OSM-Wikidata Map Framework
 *
 * The version of the OpenAPI document: 1.6.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GeoJSONPoint } from './GeoJSONPoint';
import {
    GeoJSONPointFromJSON,
    GeoJSONPointFromJSONTyped,
    GeoJSONPointToJSON,
} from './GeoJSONPoint';
import type { GlobalMapFeatureAllOfProperties } from './GlobalMapFeatureAllOfProperties';
import {
    GlobalMapFeatureAllOfPropertiesFromJSON,
    GlobalMapFeatureAllOfPropertiesFromJSONTyped,
    GlobalMapFeatureAllOfPropertiesToJSON,
} from './GlobalMapFeatureAllOfProperties';

/**
 * 
 * @export
 * @interface GlobalMapFeatureAllOf
 */
export interface GlobalMapFeatureAllOf {
    /**
     * 
     * @type {GeoJSONPoint}
     * @memberof GlobalMapFeatureAllOf
     */
    geometry?: GeoJSONPoint;
    /**
     * 
     * @type {GlobalMapFeatureAllOfProperties}
     * @memberof GlobalMapFeatureAllOf
     */
    properties?: GlobalMapFeatureAllOfProperties;
}

/**
 * Check if a given object implements the GlobalMapFeatureAllOf interface.
 */
export function instanceOfGlobalMapFeatureAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GlobalMapFeatureAllOfFromJSON(json: any): GlobalMapFeatureAllOf {
    return GlobalMapFeatureAllOfFromJSONTyped(json, false);
}

export function GlobalMapFeatureAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlobalMapFeatureAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'geometry': !exists(json, 'geometry') ? undefined : GeoJSONPointFromJSON(json['geometry']),
        'properties': !exists(json, 'properties') ? undefined : GlobalMapFeatureAllOfPropertiesFromJSON(json['properties']),
    };
}

export function GlobalMapFeatureAllOfToJSON(value?: GlobalMapFeatureAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'geometry': GeoJSONPointToJSON(value.geometry),
        'properties': GlobalMapFeatureAllOfPropertiesToJSON(value.properties),
    };
}

