/* tslint:disable */
/* eslint-disable */
/**
 * OSM-Wikidata Map Framework API
 * Programmatically interact with a site based on OSM-Wikidata Map Framework
 *
 * The version of the OpenAPI document: 1.6.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Etymology } from './Etymology';
import {
    EtymologyFromJSON,
    EtymologyFromJSONTyped,
    EtymologyToJSON,
} from './Etymology';

/**
 * 
 * @export
 * @interface EtymologyFeatureDetailsProperties
 */
export interface EtymologyFeatureDetailsProperties {
    /**
     * 
     * @type {string}
     * @memberof EtymologyFeatureDetailsProperties
     */
    countryColor?: string;
    /**
     * 
     * @type {string}
     * @memberof EtymologyFeatureDetailsProperties
     */
    altName?: string;
    /**
     * 
     * @type {string}
     * @memberof EtymologyFeatureDetailsProperties
     */
    commons?: string;
    /**
     * 
     * @type {number}
     * @memberof EtymologyFeatureDetailsProperties
     */
    elId?: number;
    /**
     * 
     * @type {string}
     * @memberof EtymologyFeatureDetailsProperties
     */
    endCenturyColor?: string;
    /**
     * 
     * @type {Array<Etymology>}
     * @memberof EtymologyFeatureDetailsProperties
     */
    etymologies: Array<Etymology>;
    /**
     * 
     * @type {boolean}
     * @memberof EtymologyFeatureDetailsProperties
     */
    fromOsm?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof EtymologyFeatureDetailsProperties
     */
    fromWikidata?: boolean;
    /**
     * 
     * @type {string}
     * @memberof EtymologyFeatureDetailsProperties
     */
    genderColor?: string;
    /**
     * 
     * @type {string}
     * @memberof EtymologyFeatureDetailsProperties
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof EtymologyFeatureDetailsProperties
     */
    officialName?: string;
    /**
     * 
     * @type {string}
     * @memberof EtymologyFeatureDetailsProperties
     */
    osmType?: string;
    /**
     * 
     * @type {number}
     * @memberof EtymologyFeatureDetailsProperties
     */
    osmId?: number;
    /**
     * 
     * @type {string}
     * @memberof EtymologyFeatureDetailsProperties
     */
    picture?: string;
    /**
     * 
     * @type {string}
     * @memberof EtymologyFeatureDetailsProperties
     */
    sourceColor?: string;
    /**
     * 
     * @type {string}
     * @memberof EtymologyFeatureDetailsProperties
     */
    startCenturyColor?: string;
    /**
     * 
     * @type {string}
     * @memberof EtymologyFeatureDetailsProperties
     */
    textEtymology?: string;
    /**
     * 
     * @type {string}
     * @memberof EtymologyFeatureDetailsProperties
     */
    textEtymologyDescr?: string;
    /**
     * 
     * @type {string}
     * @memberof EtymologyFeatureDetailsProperties
     */
    typeColor?: string;
    /**
     * Q-ID of the Wikidata entity for this feature
     * @type {string}
     * @memberof EtymologyFeatureDetailsProperties
     */
    wikidata?: string;
    /**
     * 
     * @type {string}
     * @memberof EtymologyFeatureDetailsProperties
     */
    wikipedia?: string;
}

/**
 * Check if a given object implements the EtymologyFeatureDetailsProperties interface.
 */
export function instanceOfEtymologyFeatureDetailsProperties(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "etymologies" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function EtymologyFeatureDetailsPropertiesFromJSON(json: any): EtymologyFeatureDetailsProperties {
    return EtymologyFeatureDetailsPropertiesFromJSONTyped(json, false);
}

export function EtymologyFeatureDetailsPropertiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EtymologyFeatureDetailsProperties {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'countryColor': !exists(json, 'country_color') ? undefined : json['country_color'],
        'altName': !exists(json, 'alt_name') ? undefined : json['alt_name'],
        'commons': !exists(json, 'commons') ? undefined : json['commons'],
        'elId': !exists(json, 'el_id') ? undefined : json['el_id'],
        'endCenturyColor': !exists(json, 'end_century_color') ? undefined : json['end_century_color'],
        'etymologies': ((json['etymologies'] as Array<any>).map(EtymologyFromJSON)),
        'fromOsm': !exists(json, 'from_osm') ? undefined : json['from_osm'],
        'fromWikidata': !exists(json, 'from_wikidata') ? undefined : json['from_wikidata'],
        'genderColor': !exists(json, 'gender_color') ? undefined : json['gender_color'],
        'name': json['name'],
        'officialName': !exists(json, 'official_name') ? undefined : json['official_name'],
        'osmType': !exists(json, 'osm_type') ? undefined : json['osm_type'],
        'osmId': !exists(json, 'osm_id') ? undefined : json['osm_id'],
        'picture': !exists(json, 'picture') ? undefined : json['picture'],
        'sourceColor': !exists(json, 'source_color') ? undefined : json['source_color'],
        'startCenturyColor': !exists(json, 'start_century_color') ? undefined : json['start_century_color'],
        'textEtymology': !exists(json, 'text_etymology') ? undefined : json['text_etymology'],
        'textEtymologyDescr': !exists(json, 'text_etymology_descr') ? undefined : json['text_etymology_descr'],
        'typeColor': !exists(json, 'type_color') ? undefined : json['type_color'],
        'wikidata': !exists(json, 'wikidata') ? undefined : json['wikidata'],
        'wikipedia': !exists(json, 'wikipedia') ? undefined : json['wikipedia'],
    };
}

export function EtymologyFeatureDetailsPropertiesToJSON(value?: EtymologyFeatureDetailsProperties | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'country_color': value.countryColor,
        'alt_name': value.altName,
        'commons': value.commons,
        'el_id': value.elId,
        'end_century_color': value.endCenturyColor,
        'etymologies': ((value.etymologies as Array<any>).map(EtymologyToJSON)),
        'from_osm': value.fromOsm,
        'from_wikidata': value.fromWikidata,
        'gender_color': value.genderColor,
        'name': value.name,
        'official_name': value.officialName,
        'osm_type': value.osmType,
        'osm_id': value.osmId,
        'picture': value.picture,
        'source_color': value.sourceColor,
        'start_century_color': value.startCenturyColor,
        'text_etymology': value.textEtymology,
        'text_etymology_descr': value.textEtymologyDescr,
        'type_color': value.typeColor,
        'wikidata': value.wikidata,
        'wikipedia': value.wikipedia,
    };
}

