PREFIX geo: <http://www.opengis.net/ont/geosparql#>
PREFIX geof: <http://www.opengis.net/def/function/geosparql/>
PREFIX ogc: <http://www.opengis.net/rdf#>
PREFIX osm: <https://www.openstreetmap.org/>
PREFIX osmkey: <https://www.openstreetmap.org/wiki/Key:>
PREFIX osmrel: <https://www.openstreetmap.org/relation/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX schema: <http://schema.org/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
SELECT
    ?item
    ?osm
    ?etymology
    (SAMPLE(?osm_location) AS ?location)
    # (SAMPLE(COALESCE(?osm_lang_name,?wd_lang_label,?osm_default_name,?wd_default_label)) AS ?itemLabel)
    (SAMPLE(COALESCE(?osm_lang_name,?osm_default_name)) AS ?itemLabel)
    # (SAMPLE(COALESCE(?osm_descr,?wd_descr)) AS ?itemDescription)
    (SAMPLE(?osm_descr) AS ?itemDescription)
    #(SAMPLE(?_commons) AS ?commons)
    (SAMPLE(?_wikipedia) AS ?wikipedia)
    #(SAMPLE(?_picture) AS ?picture)
    (SAMPLE(?_wikimedia_commons) AS ?wikimedia_commons)
    (SAMPLE(?_image) AS ?image)
    (true AS ?from_osm) # TODO check if bound - https://github.com/ad-freiburg/qlever/wiki/Current-deviations-from-the-SPARQL-1.1-standard#sparql-11-features-that-are-not-yet-implemented-but-have-an-easy-workaround 
    (true AS ?from_wikidata)
WHERE {
    SERVICE <https://qlever.cs.uni-freiburg.de/api/wikidata> {
        VALUES ?_from_prop { ${directProperties} }
        ?item p:P625 ?locationStatement;
            ?_from_prop ?etymology.
        ${wikidataCountryQuery}
        MINUS { ?item (wdt:P582|wdt:P585|wdt:P576|wdt:P3999|wdt:P376) []. } # Ignore if the feature has an end date or isn't on Earth
        MINUS { ?locationStatement pq:P582 []. } # Ignore if the location statement has an end date
        ?locationStatement ps:P625 ?wd_location.

        # # Filter by location (geo:sfWithin)
        # BIND ("POLYGON((${westLon} ${southLat}, ${westLon} ${northLat}, ${eastLon} ${northLat}, ${eastLon} ${southLat}, ${westLon} ${southLat}))"^^geo:wktLiteral AS ?bbox)
        # ?wd_location geo:sfWithin ?bbox.
        
        # # Filter by location (geof:latitude/longitude)
        BIND(geof:latitude(?wd_location) AS ?lat)
        BIND(geof:longitude(?wd_location) AS ?lon)
        FILTER (?lat > ${southLat})
        FILTER (?lat < ${northLat})
        FILTER (?lon > ${westLon})
        FILTER (?lon < ${eastLon})
        
        # # Filter by location (geof:distance)
        # BIND ("POINT(${centerLon} ${centerLat})"^^geo:wktLiteral AS ?center)
        # FILTER (geof:distance(?wd_location, ?center) <= ${maxDistanceKm})

        # # Extra details
        # OPTIONAL { ?item @${language}@rdfs:label ?wd_lang_label. }
        # OPTIONAL { ?item @en@rdfs:label ?wd_default_label. }
        # OPTIONAL { ?item @${language}@schema:description ?wd_descr. }
        # OPTIONAL { ?item wdt:P373 ?_commons. }
        # OPTIONAL { ?_wikipedia schema:about ?item; schema:isPartOf <https://${language}.wikipedia.org/>. }
        # OPTIONAL { ?item wdt:P18 ?_picture. }
    }

    ?osm osm:wikidata ?item; geo:hasGeometry ?osm_location.
    # TODO: ?osm osm:wikidata/owl:sameAs? ?item
    # TODO: make the link optional and filter ?item is bound (BOUND() is not yet implemented in QLever)
    OPTIONAL { ?osm <https://www.openstreetmap.org/wiki/Key:name:${language}> ?osm_lang_name. }
    OPTIONAL { ?osm osmkey:name ?osm_default_name. }
    OPTIONAL { ?osm osmkey:description ?osm_descr. }
	OPTIONAL { ?osm osmkey:wikipedia ?_wikipedia }
    OPTIONAL { ?osm osmkey:wikimedia_commons ?_wikimedia_commons. }
    OPTIONAL { ?osm osmkey:image ?_image. }
}
GROUP BY ?item ?osm ?etymology
${limit}
