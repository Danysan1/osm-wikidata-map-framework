/* tslint:disable */
/* eslint-disable */
/**
 * Wikimedia Commons REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CommonsApiResponse,
} from '../models/index';
import {
    CommonsApiResponseFromJSON,
    CommonsApiResponseToJSON,
} from '../models/index';

export interface ApiCallRequest {
    action: string;
    format?: string;
    iiextmetadatafilter?: string;
    iiprop?: string;
    origin?: string;
    prop?: string;
    titles?: string;
    uselang?: string;
}

/**
 * 
 */
export class CommonsApi extends runtime.BaseAPI {

    /**
     * Execute a call to the API
     */
    async apiCallRaw(requestParameters: ApiCallRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CommonsApiResponse>> {
        if (requestParameters['action'] == null) {
            throw new runtime.RequiredError(
                'action',
                'Required parameter "action" was null or undefined when calling apiCall().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['action'] != null) {
            queryParameters['action'] = requestParameters['action'];
        }

        if (requestParameters['format'] != null) {
            queryParameters['format'] = requestParameters['format'];
        }

        if (requestParameters['iiextmetadatafilter'] != null) {
            queryParameters['iiextmetadatafilter'] = requestParameters['iiextmetadatafilter'];
        }

        if (requestParameters['iiprop'] != null) {
            queryParameters['iiprop'] = requestParameters['iiprop'];
        }

        if (requestParameters['origin'] != null) {
            queryParameters['origin'] = requestParameters['origin'];
        }

        if (requestParameters['prop'] != null) {
            queryParameters['prop'] = requestParameters['prop'];
        }

        if (requestParameters['titles'] != null) {
            queryParameters['titles'] = requestParameters['titles'];
        }

        if (requestParameters['uselang'] != null) {
            queryParameters['uselang'] = requestParameters['uselang'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api.php`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CommonsApiResponseFromJSON(jsonValue));
    }

    /**
     * Execute a call to the API
     */
    async apiCall(requestParameters: ApiCallRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CommonsApiResponse> {
        const response = await this.apiCallRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
