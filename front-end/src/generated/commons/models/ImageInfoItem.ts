/* tslint:disable */
/* eslint-disable */
/**
 * Wikimedia Commons REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ExtMetadataItem } from './ExtMetadataItem';
import {
    ExtMetadataItemFromJSON,
    ExtMetadataItemFromJSONTyped,
    ExtMetadataItemToJSON,
} from './ExtMetadataItem';

/**
 * 
 * @export
 * @interface ImageInfoItem
 */
export interface ImageInfoItem {
    /**
     * 
     * @type {string}
     * @memberof ImageInfoItem
     */
    timestamp?: string;
    /**
     * 
     * @type {string}
     * @memberof ImageInfoItem
     */
    user?: string;
    /**
     * 
     * @type {number}
     * @memberof ImageInfoItem
     */
    userid?: number;
    /**
     * 
     * @type {number}
     * @memberof ImageInfoItem
     */
    size?: number;
    /**
     * 
     * @type {number}
     * @memberof ImageInfoItem
     */
    width?: number;
    /**
     * 
     * @type {number}
     * @memberof ImageInfoItem
     */
    height?: number;
    /**
     * 
     * @type {string}
     * @memberof ImageInfoItem
     */
    url?: string;
    /**
     * 
     * @type {string}
     * @memberof ImageInfoItem
     */
    descriptionurl?: string;
    /**
     * 
     * @type {string}
     * @memberof ImageInfoItem
     */
    descriptionshorturl?: string;
    /**
     * 
     * @type {string}
     * @memberof ImageInfoItem
     */
    mime?: string;
    /**
     * 
     * @type {string}
     * @memberof ImageInfoItem
     */
    mediatype?: string;
    /**
     * 
     * @type {string}
     * @memberof ImageInfoItem
     */
    mediaid?: string;
    /**
     * 
     * @type {{ [key: string]: ExtMetadataItem; }}
     * @memberof ImageInfoItem
     */
    extmetadata?: { [key: string]: ExtMetadataItem; };
}

/**
 * Check if a given object implements the ImageInfoItem interface.
 */
export function instanceOfImageInfoItem(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ImageInfoItemFromJSON(json: any): ImageInfoItem {
    return ImageInfoItemFromJSONTyped(json, false);
}

export function ImageInfoItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageInfoItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'timestamp': !exists(json, 'timestamp') ? undefined : json['timestamp'],
        'user': !exists(json, 'user') ? undefined : json['user'],
        'userid': !exists(json, 'userid') ? undefined : json['userid'],
        'size': !exists(json, 'size') ? undefined : json['size'],
        'width': !exists(json, 'width') ? undefined : json['width'],
        'height': !exists(json, 'height') ? undefined : json['height'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'descriptionurl': !exists(json, 'descriptionurl') ? undefined : json['descriptionurl'],
        'descriptionshorturl': !exists(json, 'descriptionshorturl') ? undefined : json['descriptionshorturl'],
        'mime': !exists(json, 'mime') ? undefined : json['mime'],
        'mediatype': !exists(json, 'mediatype') ? undefined : json['mediatype'],
        'mediaid': !exists(json, 'mediaid') ? undefined : json['mediaid'],
        'extmetadata': !exists(json, 'extmetadata') ? undefined : (mapValues(json['extmetadata'], ExtMetadataItemFromJSON)),
    };
}

export function ImageInfoItemToJSON(value?: ImageInfoItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'timestamp': value.timestamp,
        'user': value.user,
        'userid': value.userid,
        'size': value.size,
        'width': value.width,
        'height': value.height,
        'url': value.url,
        'descriptionurl': value.descriptionurl,
        'descriptionshorturl': value.descriptionshorturl,
        'mime': value.mime,
        'mediatype': value.mediatype,
        'mediaid': value.mediaid,
        'extmetadata': value.extmetadata === undefined ? undefined : (mapValues(value.extmetadata, ExtMetadataItemToJSON)),
    };
}

