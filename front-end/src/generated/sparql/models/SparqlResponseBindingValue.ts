/* tslint:disable */
/* eslint-disable */
/**
 * SPARQL endpoint API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SparqlResponseBindingValue
 */
export interface SparqlResponseBindingValue {
    /**
     * 
     * @type {string}
     * @memberof SparqlResponseBindingValue
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof SparqlResponseBindingValue
     */
    value?: string;
    /**
     * 
     * @type {string}
     * @memberof SparqlResponseBindingValue
     */
    datatype?: string;
    /**
     * 
     * @type {string}
     * @memberof SparqlResponseBindingValue
     */
    xmllang?: string;
}

/**
 * Check if a given object implements the SparqlResponseBindingValue interface.
 */
export function instanceOfSparqlResponseBindingValue(value: object): value is SparqlResponseBindingValue {
    return true;
}

export function SparqlResponseBindingValueFromJSON(json: any): SparqlResponseBindingValue {
    return SparqlResponseBindingValueFromJSONTyped(json, false);
}

export function SparqlResponseBindingValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): SparqlResponseBindingValue {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'value': json['value'] == null ? undefined : json['value'],
        'datatype': json['datatype'] == null ? undefined : json['datatype'],
        'xmllang': json['xml:lang'] == null ? undefined : json['xml:lang'],
    };
}

export function SparqlResponseBindingValueToJSON(value?: SparqlResponseBindingValue | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'type': value['type'],
        'value': value['value'],
        'datatype': value['datatype'],
        'xml:lang': value['xmllang'],
    };
}

