/* tslint:disable */
/* eslint-disable */
/**
 * Wikibase REST API
 * OpenAPI definition of Wikibase REST API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ItemStatementsValueInnerAllOf1 } from './ItemStatementsValueInnerAllOf1';
import {
    ItemStatementsValueInnerAllOf1FromJSON,
    ItemStatementsValueInnerAllOf1FromJSONTyped,
    ItemStatementsValueInnerAllOf1ToJSON,
} from './ItemStatementsValueInnerAllOf1';
import type { ItemStatementsValueInnerAllOf1Property } from './ItemStatementsValueInnerAllOf1Property';
import {
    ItemStatementsValueInnerAllOf1PropertyFromJSON,
    ItemStatementsValueInnerAllOf1PropertyFromJSONTyped,
    ItemStatementsValueInnerAllOf1PropertyToJSON,
} from './ItemStatementsValueInnerAllOf1Property';
import type { ItemStatementsValueInnerAllOf1Value } from './ItemStatementsValueInnerAllOf1Value';
import {
    ItemStatementsValueInnerAllOf1ValueFromJSON,
    ItemStatementsValueInnerAllOf1ValueFromJSONTyped,
    ItemStatementsValueInnerAllOf1ValueToJSON,
} from './ItemStatementsValueInnerAllOf1Value';
import type { ItemStatementsValueInnerAllOf2ReferencesInner } from './ItemStatementsValueInnerAllOf2ReferencesInner';
import {
    ItemStatementsValueInnerAllOf2ReferencesInnerFromJSON,
    ItemStatementsValueInnerAllOf2ReferencesInnerFromJSONTyped,
    ItemStatementsValueInnerAllOf2ReferencesInnerToJSON,
} from './ItemStatementsValueInnerAllOf2ReferencesInner';

/**
 * 
 * @export
 * @interface PropertyStatementsValueInner
 */
export interface PropertyStatementsValueInner {
    /**
     * 
     * @type {any}
     * @memberof PropertyStatementsValueInner
     */
    id?: any | null;
    /**
     * The rank of the Statement
     * @type {string}
     * @memberof PropertyStatementsValueInner
     */
    rank?: PropertyStatementsValueInnerRankEnum;
    /**
     * 
     * @type {ItemStatementsValueInnerAllOf1Property}
     * @memberof PropertyStatementsValueInner
     */
    property?: ItemStatementsValueInnerAllOf1Property;
    /**
     * 
     * @type {ItemStatementsValueInnerAllOf1Value}
     * @memberof PropertyStatementsValueInner
     */
    value?: ItemStatementsValueInnerAllOf1Value;
    /**
     * 
     * @type {Array<ItemStatementsValueInnerAllOf1>}
     * @memberof PropertyStatementsValueInner
     */
    qualifiers?: Array<ItemStatementsValueInnerAllOf1>;
    /**
     * 
     * @type {Array<ItemStatementsValueInnerAllOf2ReferencesInner>}
     * @memberof PropertyStatementsValueInner
     */
    references?: Array<ItemStatementsValueInnerAllOf2ReferencesInner>;
}


/**
 * @export
 */
export const PropertyStatementsValueInnerRankEnum = {
    Deprecated: 'deprecated',
    Normal: 'normal',
    Preferred: 'preferred'
} as const;
export type PropertyStatementsValueInnerRankEnum = typeof PropertyStatementsValueInnerRankEnum[keyof typeof PropertyStatementsValueInnerRankEnum];


/**
 * Check if a given object implements the PropertyStatementsValueInner interface.
 */
export function instanceOfPropertyStatementsValueInner(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PropertyStatementsValueInnerFromJSON(json: any): PropertyStatementsValueInner {
    return PropertyStatementsValueInnerFromJSONTyped(json, false);
}

export function PropertyStatementsValueInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyStatementsValueInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'rank': !exists(json, 'rank') ? undefined : json['rank'],
        'property': !exists(json, 'property') ? undefined : ItemStatementsValueInnerAllOf1PropertyFromJSON(json['property']),
        'value': !exists(json, 'value') ? undefined : ItemStatementsValueInnerAllOf1ValueFromJSON(json['value']),
        'qualifiers': !exists(json, 'qualifiers') ? undefined : ((json['qualifiers'] as Array<any>).map(ItemStatementsValueInnerAllOf1FromJSON)),
        'references': !exists(json, 'references') ? undefined : ((json['references'] as Array<any>).map(ItemStatementsValueInnerAllOf2ReferencesInnerFromJSON)),
    };
}

export function PropertyStatementsValueInnerToJSON(value?: PropertyStatementsValueInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'rank': value.rank,
        'property': ItemStatementsValueInnerAllOf1PropertyToJSON(value.property),
        'value': ItemStatementsValueInnerAllOf1ValueToJSON(value.value),
        'qualifiers': value.qualifiers === undefined ? undefined : ((value.qualifiers as Array<any>).map(ItemStatementsValueInnerAllOf1ToJSON)),
        'references': value.references === undefined ? undefined : ((value.references as Array<any>).map(ItemStatementsValueInnerAllOf2ReferencesInnerToJSON)),
    };
}

