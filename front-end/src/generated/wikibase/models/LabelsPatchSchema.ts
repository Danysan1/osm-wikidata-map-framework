/* tslint:disable */
/* eslint-disable */
/**
 * Wikibase REST API
 * OpenAPI definition of Wikibase REST API
 *
 * The version of the OpenAPI document: 0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LabelsPatchSchema
 */
export interface LabelsPatchSchema {
    /**
     * 
     * @type {any}
     * @memberof LabelsPatchSchema
     */
    patch: any | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof LabelsPatchSchema
     */
    tags?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof LabelsPatchSchema
     */
    bot?: boolean;
    /**
     * 
     * @type {string}
     * @memberof LabelsPatchSchema
     */
    comment?: string;
}

/**
 * Check if a given object implements the LabelsPatchSchema interface.
 */
export function instanceOfLabelsPatchSchema(value: object): value is LabelsPatchSchema {
    if (!('patch' in value) || value['patch'] === undefined) return false;
    return true;
}

export function LabelsPatchSchemaFromJSON(json: any): LabelsPatchSchema {
    return LabelsPatchSchemaFromJSONTyped(json, false);
}

export function LabelsPatchSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): LabelsPatchSchema {
    if (json == null) {
        return json;
    }
    return {
        
        'patch': json['patch'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'bot': json['bot'] == null ? undefined : json['bot'],
        'comment': json['comment'] == null ? undefined : json['comment'],
    };
}

export function LabelsPatchSchemaToJSON(value?: LabelsPatchSchema | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'patch': value['patch'],
        'tags': value['tags'],
        'bot': value['bot'],
        'comment': value['comment'],
    };
}

