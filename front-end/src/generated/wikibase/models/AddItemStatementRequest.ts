/* tslint:disable */
/* eslint-disable */
/**
 * Wikibase REST API
 * OpenAPI definition of Wikibase REST API
 *
 * The version of the OpenAPI document: 0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Statement } from './Statement';
import {
    StatementFromJSON,
    StatementFromJSONTyped,
    StatementToJSON,
} from './Statement';

/**
 * 
 * @export
 * @interface AddItemStatementRequest
 */
export interface AddItemStatementRequest {
    /**
     * 
     * @type {Array<string>}
     * @memberof AddItemStatementRequest
     */
    tags?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof AddItemStatementRequest
     */
    bot?: boolean;
    /**
     * 
     * @type {string}
     * @memberof AddItemStatementRequest
     */
    comment?: string;
    /**
     * 
     * @type {Statement}
     * @memberof AddItemStatementRequest
     */
    statement: Statement;
}

/**
 * Check if a given object implements the AddItemStatementRequest interface.
 */
export function instanceOfAddItemStatementRequest(value: object): value is AddItemStatementRequest {
    if (!('statement' in value) || value['statement'] === undefined) return false;
    return true;
}

export function AddItemStatementRequestFromJSON(json: any): AddItemStatementRequest {
    return AddItemStatementRequestFromJSONTyped(json, false);
}

export function AddItemStatementRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddItemStatementRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'tags': json['tags'] == null ? undefined : json['tags'],
        'bot': json['bot'] == null ? undefined : json['bot'],
        'comment': json['comment'] == null ? undefined : json['comment'],
        'statement': StatementFromJSON(json['statement']),
    };
}

export function AddItemStatementRequestToJSON(value?: AddItemStatementRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'tags': value['tags'],
        'bot': value['bot'],
        'comment': value['comment'],
        'statement': StatementToJSON(value['statement']),
    };
}

