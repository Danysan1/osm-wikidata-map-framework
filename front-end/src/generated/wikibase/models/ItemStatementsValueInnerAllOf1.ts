/* tslint:disable */
/* eslint-disable */
/**
 * Wikibase REST API
 * OpenAPI definition of Wikibase REST API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ItemStatementsValueInnerAllOf1Property } from './ItemStatementsValueInnerAllOf1Property';
import {
    ItemStatementsValueInnerAllOf1PropertyFromJSON,
    ItemStatementsValueInnerAllOf1PropertyFromJSONTyped,
    ItemStatementsValueInnerAllOf1PropertyToJSON,
} from './ItemStatementsValueInnerAllOf1Property';
import type { ItemStatementsValueInnerAllOf1Value } from './ItemStatementsValueInnerAllOf1Value';
import {
    ItemStatementsValueInnerAllOf1ValueFromJSON,
    ItemStatementsValueInnerAllOf1ValueFromJSONTyped,
    ItemStatementsValueInnerAllOf1ValueToJSON,
} from './ItemStatementsValueInnerAllOf1Value';

/**
 * 
 * @export
 * @interface ItemStatementsValueInnerAllOf1
 */
export interface ItemStatementsValueInnerAllOf1 {
    /**
     * 
     * @type {ItemStatementsValueInnerAllOf1Property}
     * @memberof ItemStatementsValueInnerAllOf1
     */
    property?: ItemStatementsValueInnerAllOf1Property;
    /**
     * 
     * @type {ItemStatementsValueInnerAllOf1Value}
     * @memberof ItemStatementsValueInnerAllOf1
     */
    value?: ItemStatementsValueInnerAllOf1Value;
}

/**
 * Check if a given object implements the ItemStatementsValueInnerAllOf1 interface.
 */
export function instanceOfItemStatementsValueInnerAllOf1(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ItemStatementsValueInnerAllOf1FromJSON(json: any): ItemStatementsValueInnerAllOf1 {
    return ItemStatementsValueInnerAllOf1FromJSONTyped(json, false);
}

export function ItemStatementsValueInnerAllOf1FromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemStatementsValueInnerAllOf1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'property': !exists(json, 'property') ? undefined : ItemStatementsValueInnerAllOf1PropertyFromJSON(json['property']),
        'value': !exists(json, 'value') ? undefined : ItemStatementsValueInnerAllOf1ValueFromJSON(json['value']),
    };
}

export function ItemStatementsValueInnerAllOf1ToJSON(value?: ItemStatementsValueInnerAllOf1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'property': ItemStatementsValueInnerAllOf1PropertyToJSON(value.property),
        'value': ItemStatementsValueInnerAllOf1ValueToJSON(value.value),
    };
}

