/* tslint:disable */
/* eslint-disable */
/**
 * Wikibase REST API
 * OpenAPI definition of Wikibase REST API
 *
 * The version of the OpenAPI document: 0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Statement } from './Statement';
import {
    StatementFromJSON,
    StatementFromJSONTyped,
    StatementToJSON,
} from './Statement';

/**
 * 
 * @export
 * @interface AddItemRequestAllOfItem
 */
export interface AddItemRequestAllOfItem {
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof AddItemRequestAllOfItem
     */
    labels?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof AddItemRequestAllOfItem
     */
    descriptions?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: Array<string>; }}
     * @memberof AddItemRequestAllOfItem
     */
    aliases?: { [key: string]: Array<string>; };
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof AddItemRequestAllOfItem
     */
    sitelinks?: { [key: string]: object; };
    /**
     * 
     * @type {{ [key: string]: Array<Statement>; }}
     * @memberof AddItemRequestAllOfItem
     */
    statements?: { [key: string]: Array<Statement>; };
}

/**
 * Check if a given object implements the AddItemRequestAllOfItem interface.
 */
export function instanceOfAddItemRequestAllOfItem(value: object): value is AddItemRequestAllOfItem {
    return true;
}

export function AddItemRequestAllOfItemFromJSON(json: any): AddItemRequestAllOfItem {
    return AddItemRequestAllOfItemFromJSONTyped(json, false);
}

export function AddItemRequestAllOfItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddItemRequestAllOfItem {
    if (json == null) {
        return json;
    }
    return {
        
        'labels': json['labels'] == null ? undefined : json['labels'],
        'descriptions': json['descriptions'] == null ? undefined : json['descriptions'],
        'aliases': json['aliases'] == null ? undefined : json['aliases'],
        'sitelinks': json['sitelinks'] == null ? undefined : json['sitelinks'],
        'statements': json['statements'] == null ? undefined : json['statements'],
    };
}

export function AddItemRequestAllOfItemToJSON(value?: AddItemRequestAllOfItem | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'labels': value['labels'],
        'descriptions': value['descriptions'],
        'aliases': value['aliases'],
        'sitelinks': value['sitelinks'],
        'statements': value['statements'],
    };
}

